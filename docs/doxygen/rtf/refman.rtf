{\rtf1\ansi\ansicpg1251\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset204\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset204\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset204\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment SynapseOS  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.2.12 \par
}}SynapseOS}
{\comment \'D1\'EE\'E7\'E4\'E0\'ED\'EE \'F1\'E8\'F1\'F2\'E5\'EC\'EE\'E9 doxygen 1.9.4.}
{\creatim \yr2022\mo8\dy14\hr22\min55\sec8}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt SynapseOS}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
\'C2\'E5\'F0\'F1\'E8\'FF 0.2.12\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt \'C2\'F1 14 \'C0\'E2\'E3 2022 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CE\'E3\'EB\'E0\'E2\'EB\'E5\'ED\'E8\'E5\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'C0\'EB\'F4\'E0\'E2\'E8\'F2\'ED\'FB\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0 \'E4\'E0\'ED\'ED\'FB\'F5\par \pard\plain 
{\tc \v \'C0\'EB\'F4\'E0\'E2\'E8\'F2\'ED\'FB\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0 \'E4\'E0\'ED\'ED\'FB\'F5}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'E4\'E0\'ED\'ED\'FB\'F5\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'E4\'E0\'ED\'ED\'FB\'F5 \'F1 \'E8\'F5 \'EA\'F0\'E0\'F2\'EA\'E8\'EC \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\'EC.}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b __attribute__} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b arp_packet} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b arp_table_entry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ata_dma_priv} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b blockinfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dhcp_packet} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dma_prdt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DukeImageMeta} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF Duke })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b elf_hdr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b elf_program_header} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b elf_section_header} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ethernet_frame} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ext2_super_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FILE} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b floppy_info} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gdt_entry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gdt_ptr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IDE_CHANNELS} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IDE_DEVICE} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b idt_entry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b idt_ptr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ip_packet} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b list_item} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b list_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b mouse_flags_byte} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b multiboot_info} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b multiboot_memory_map_entry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pci_dev} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b regs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b rgba_struct} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RTL8139_dev} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b STFS_block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b STFS_file} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b STFS_folder} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b svga_mode_info} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b synapse_time} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tss_entry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b udp_packet} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vfs_filesystem_handles_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vfs_filesystem_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vfs_mount_info_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vfs_storage_dev_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'D1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2\par \pard\plain 
{\tc \v \'D1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB\'FB\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'CF\'EE\'EB\'ED\'FB\'E9 \'F1\'EF\'E8\'F1\'EE\'EA \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2.}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b kernel/{\b kernel.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'F5\'EE\'E4\'ED\'E0\'FF \'F2\'EE\'F7\'EA\'E0 \'FF\'E4\'F0\'E0, \'E8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'E4\'F0\'E0\'E9\'E2\'E5\'F0\'EE\'E2 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/fonts/{\b font_Experimental_Font.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/{\b kernel.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/{\b multyboot.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/{\b ata.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/{\b floppy.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/{\b keyboard.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/{\b mouse.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/{\b net.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/{\b pci.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/{\b ramdisk.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/{\b time.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/{\b vfs.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/experimental/{\b sb16.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/drivers/network/{\b RTL8139.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/fs/{\b STFS.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/io/{\b imaging.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F4\'F3\'ED\'EA\'F6\'E8\'E9 {\b imaging.h} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/io/{\b ports.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/io/{\b tty.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/io/{\b tui.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/io/{\b vgafnt.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/libk/{\b iso646.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/libk/{\b list.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/libk/{\b math.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/libk/{\b stdalign.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/libk/{\b stdbool.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/libk/{\b stdint.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/libk/{\b stdio.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/libk/{\b stdlib.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/libk/{\b stdnoreturn.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/libk/{\b string.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/mem/{\b kheap.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/mem/{\b mem.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/mem/{\b pmm.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/mem/{\b vmm.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/sys/{\b cpuinfo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/sys/{\b elf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/sys/{\b gdt.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/sys/{\b idt.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/sys/{\b secure.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/sys/{\b syscalls.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/sys/{\b system.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/include/sys/{\b tss.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/{\b ata.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/{\b cmos.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/{\b keyboard.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/{\b pci.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/{\b ramdisk.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/{\b time.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/{\b vfs.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/experimental/{\b ac97.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/experimental/{\b floppy.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/experimental/{\b mouse.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/experimental/{\b sb16.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/network/{\b arp.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/network/{\b dhcp.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/network/{\b ethernet.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/network/{\b ip.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/network/{\b net_utils.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/network/{\b RTL8139.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/drivers/network/{\b udp.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/fs/{\b ext2.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/fs/{\b STFS.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/io/{\b imaging.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'F1\'F2\'F0\'E0\'E8\'E2\'E0\'E5\'EC\'E0\'FF \'E1\'E8\'E1\'EB\'E8\'EE\'F2\'E5\'EA\'E0 \'F0\'E8\'F1\'EE\'E2\'E0\'ED\'E8\'FF \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'E9 \'F4\'EE\'F0\'EC\'E0\'F2\'E0 Duke })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/io/{\b ports.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'F1\'EB\'EE\'E9\'EA\'E0 \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 \'EF\'EE\'F0\'F2\'E0\'EC\'E8 \'E2\'E2\'EE\'E4\'E0-\'E2\'FB\'E2\'EE\'E4\'E0 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/io/{\b shell.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/io/{\b tty.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'F1\'EB\'EE\'E9\'EA\'E0 \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 \'F2\'E5\'EA\'F1\'F2\'EE\'E2\'FB\'EC \'F2\'E5\'F0\'EC\'E8\'ED\'E0\'EB\'EE\'EC \'E8 \'E3\'F0\'E0\'F4\'E8\'EA\'EE\'E9 VESA })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/io/{\b tui.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TUI \'E4\'EB\'FF SynapseOS })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/io/{\b vgafnt.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/libk/{\b list.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/libk/{\b math.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/libk/{\b stdio.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/libk/{\b stdlib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/libk/{\b string.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/mem/{\b kheap.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/mem/{\b paging.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/mem/{\b pmm.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/mem/{\b vmm.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/sys/{\b cpuinfo.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/sys/{\b elf.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/sys/{\b gdt.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/sys/{\b idt.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/sys/{\b sea.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/sys/{\b secure.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/sys/{\b syscalls.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/sys/{\b system.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b kernel/src/sys/{\b tss.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'E4\'E0\'ED\'ED\'FB\'F5{\tc \v \'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'E4\'E0\'ED\'ED\'FB\'F5}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 __attribute__\par \pard\plain 
{\tc\tcl2 \v __attribute__}
{\xe \v __attribute__}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b fname} [100]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b fmode} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b uid} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b gid} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b size} [12]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b mtime} [12]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b checksum} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b linkname} [100]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b signature} [6]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b version} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b user_name} [32]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b group_name} [32]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b device_major_number} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b device_minor_number} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b fprefix} [155]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b reserved} [12]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b list_item_t} {\b list_item}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
physical_addres_t {\b page_dir}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b threads_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b suspend}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b pid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b name} [256]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
process_t * {\b process}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b stack_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b stack}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b esp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b entry_point}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b id}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v checksum\:__attribute__}
{\xe \v __attribute__\:checksum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char checksum[8]}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 29}}\par
}
{\xe \v device_major_number\:__attribute__}
{\xe \v __attribute__\:device_major_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char device_major_number[8]}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 39}}\par
}
{\xe \v device_minor_number\:__attribute__}
{\xe \v __attribute__\:device_minor_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char device_minor_number[8]}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 40}}\par
}
{\xe \v entry_point\:__attribute__}
{\xe \v __attribute__\:entry_point}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t entry_point}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 65}}\par
}
{\xe \v esp\:__attribute__}
{\xe \v __attribute__\:esp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t esp}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 64}}\par
}
{\xe \v fmode\:__attribute__}
{\xe \v __attribute__\:fmode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char fmode[8]}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\xe \v fname\:__attribute__}
{\xe \v __attribute__\:fname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char fname[100]}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v fprefix\:__attribute__}
{\xe \v __attribute__\:fprefix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char fprefix[155]}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v gid\:__attribute__}
{\xe \v __attribute__\:gid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char gid[8]}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v group_name\:__attribute__}
{\xe \v __attribute__\:group_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char group_name[32]}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 37}}\par
}
{\xe \v id\:__attribute__}
{\xe \v __attribute__\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t id}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 66}}\par
}
{\xe \v linkname\:__attribute__}
{\xe \v __attribute__\:linkname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char linkname[100]}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 32}}\par
}
{\xe \v list_item\:__attribute__}
{\xe \v __attribute__\:list_item}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b list_item_t} {\b list_item}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 48}}\par
}
{\xe \v mtime\:__attribute__}
{\xe \v __attribute__\:mtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char mtime[12]}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\xe \v name\:__attribute__}
{\xe \v __attribute__\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char name[256]}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 53}}\par
}
{\xe \v page_dir\:__attribute__}
{\xe \v __attribute__\:page_dir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
physical_addres_t page_dir}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 49}}\par
}
{\xe \v pid\:__attribute__}
{\xe \v __attribute__\:pid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t pid}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 52}}\par
}
{\xe \v process\:__attribute__}
{\xe \v __attribute__\:process}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
process_t* process}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 60}}\par
}
{\xe \v reserved\:__attribute__}
{\xe \v __attribute__\:reserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char reserved[12]}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v signature\:__attribute__}
{\xe \v __attribute__\:signature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char signature[6]}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\xe \v size\:__attribute__}
{\xe \v __attribute__\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char size[12]}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v stack\:__attribute__}
{\xe \v __attribute__\:stack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* stack}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 63}}\par
}
{\xe \v stack_size\:__attribute__}
{\xe \v __attribute__\:stack_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t stack_size}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 62}}\par
}
{\xe \v suspend\:__attribute__}
{\xe \v __attribute__\:suspend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool suspend}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 51}}\par
}
{\xe \v threads_count\:__attribute__}
{\xe \v __attribute__\:threads_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t threads_count}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 50}}\par
}
{\xe \v type\:__attribute__}
{\xe \v __attribute__\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char type}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 30}}\par
}
{\xe \v uid\:__attribute__}
{\xe \v __attribute__\:uid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char uid[8]}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v user_name\:__attribute__}
{\xe \v __attribute__\:user_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char user_name[32]}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 36}}\par
}
{\xe \v version\:__attribute__}
{\xe \v __attribute__\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char version[2]}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ramdisk.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 34}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0 \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E0\'F5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/ramdisk.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/sys/tss.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 arp_packet\par \pard\plain 
{\tc\tcl2 \v arp_packet}
{\xe \v arp_packet}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b hardware_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b protocol}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b hardware_addr_len}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b protocol_addr_len}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b opcode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b src_hardware_addr} [6]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b src_protocol_addr} [4]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b dst_hardware_addr} [6]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b dst_protocol_addr} [4]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 68}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v dst_hardware_addr\:arp_packet}
{\xe \v arp_packet\:dst_hardware_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t dst_hardware_addr[6]}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 76}}\par
}
{\xe \v dst_protocol_addr\:arp_packet}
{\xe \v arp_packet\:dst_protocol_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t dst_protocol_addr[4]}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 77}}\par
}
{\xe \v hardware_addr_len\:arp_packet}
{\xe \v arp_packet\:hardware_addr_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t hardware_addr_len}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 71}}\par
}
{\xe \v hardware_type\:arp_packet}
{\xe \v arp_packet\:hardware_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t hardware_type}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 69}}\par
}
{\xe \v opcode\:arp_packet}
{\xe \v arp_packet\:opcode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t opcode}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 73}}\par
}
{\xe \v protocol\:arp_packet}
{\xe \v arp_packet\:protocol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t protocol}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 70}}\par
}
{\xe \v protocol_addr_len\:arp_packet}
{\xe \v arp_packet\:protocol_addr_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t protocol_addr_len}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 72}}\par
}
{\xe \v src_hardware_addr\:arp_packet}
{\xe \v arp_packet\:src_hardware_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t src_hardware_addr[6]}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 74}}\par
}
{\xe \v src_protocol_addr\:arp_packet}
{\xe \v arp_packet\:src_protocol_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t src_protocol_addr[4]}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 75}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/net.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 arp_table_entry\par \pard\plain 
{\tc\tcl2 \v arp_table_entry}
{\xe \v arp_table_entry}
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ip_addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint64_t {\b mac_addr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 80}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v ip_addr\:arp_table_entry}
{\xe \v arp_table_entry\:ip_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ip_addr}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 81}}\par
}
{\xe \v mac_addr\:arp_table_entry}
{\xe \v arp_table_entry\:mac_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint64_t mac_addr}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 82}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/net.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 ata_dma_priv\par \pard\plain 
{\tc\tcl2 \v ata_dma_priv}
{\xe \v ata_dma_priv}
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b adp_busmaster}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b adp_last_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b adp_dma_area}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dma_prdt} * {\b adp_dma_prdt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v adp_busmaster\:ata_dma_priv}
{\xe \v ata_dma_priv\:adp_busmaster}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int adp_busmaster}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v adp_dma_area\:ata_dma_priv}
{\xe \v ata_dma_priv\:adp_dma_area}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* adp_dma_area}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\xe \v adp_dma_prdt\:ata_dma_priv}
{\xe \v ata_dma_priv\:adp_dma_prdt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dma_prdt}* adp_dma_prdt}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 28}}\par
}
{\xe \v adp_last_count\:ata_dma_priv}
{\xe \v ata_dma_priv\:adp_last_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int adp_last_count}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/src/drivers/ata.c\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 blockinfo\par \pard\plain 
{\tc\tcl2 \v blockinfo}
{\xe \v blockinfo}
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b next_block}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 12}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v id\:blockinfo}
{\xe \v blockinfo\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t id}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 13}}\par
}
{\xe \v next_block\:blockinfo}
{\xe \v blockinfo\:next_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t next_block}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 14}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/fs/STFS.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 dhcp_packet\par \pard\plain 
{\tc\tcl2 \v dhcp_packet}
{\xe \v dhcp_packet}
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b op}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b hardware_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b hardware_addr_len}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b hops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b xid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b seconds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b client_ip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b your_ip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b server_ip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b gateway_ip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b client_hardware_addr} [16]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b server_name} [64]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b file} [128]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b options} [64]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 50}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v client_hardware_addr\:dhcp_packet}
{\xe \v dhcp_packet\:client_hardware_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t client_hardware_addr[16]}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 62}}\par
}
{\xe \v client_ip\:dhcp_packet}
{\xe \v dhcp_packet\:client_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t client_ip}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 58}}\par
}
{\xe \v file\:dhcp_packet}
{\xe \v dhcp_packet\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t file[128]}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 64}}\par
}
{\xe \v flags\:dhcp_packet}
{\xe \v dhcp_packet\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t flags}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 57}}\par
}
{\xe \v gateway_ip\:dhcp_packet}
{\xe \v dhcp_packet\:gateway_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t gateway_ip}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 61}}\par
}
{\xe \v hardware_addr_len\:dhcp_packet}
{\xe \v dhcp_packet\:hardware_addr_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t hardware_addr_len}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 53}}\par
}
{\xe \v hardware_type\:dhcp_packet}
{\xe \v dhcp_packet\:hardware_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t hardware_type}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 52}}\par
}
{\xe \v hops\:dhcp_packet}
{\xe \v dhcp_packet\:hops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t hops}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 54}}\par
}
{\xe \v op\:dhcp_packet}
{\xe \v dhcp_packet\:op}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t op}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 51}}\par
}
{\xe \v options\:dhcp_packet}
{\xe \v dhcp_packet\:options}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t options[64]}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 65}}\par
}
{\xe \v seconds\:dhcp_packet}
{\xe \v dhcp_packet\:seconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t seconds}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 56}}\par
}
{\xe \v server_ip\:dhcp_packet}
{\xe \v dhcp_packet\:server_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t server_ip}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 60}}\par
}
{\xe \v server_name\:dhcp_packet}
{\xe \v dhcp_packet\:server_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t server_name[64]}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 63}}\par
}
{\xe \v xid\:dhcp_packet}
{\xe \v dhcp_packet\:xid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t xid}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 55}}\par
}
{\xe \v your_ip\:dhcp_packet}
{\xe \v dhcp_packet\:your_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t your_ip}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 59}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/net.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 dma_prdt\par \pard\plain 
{\tc\tcl2 \v dma_prdt}
{\xe \v dma_prdt}
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b prdt_offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b prdt_bytes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b prdt_last}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v prdt_bytes\:dma_prdt}
{\xe \v dma_prdt\:prdt_bytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t prdt_bytes}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v prdt_last\:dma_prdt}
{\xe \v dma_prdt\:prdt_last}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t prdt_last}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\xe \v prdt_offset\:dma_prdt}
{\xe \v dma_prdt\:prdt_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t prdt_offset}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/src/drivers/ata.c\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 DukeImageMeta\par \pard\plain 
{\tc\tcl2 \v DukeImageMeta}
{\xe \v DukeImageMeta}
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF Duke. }}\par
{
{\f2 #include <imaging.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b data_length}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b alpha}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF Duke. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{- \'F8\'E8\'F0\'E8\'ED\'E0 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{- \'E2\'FB\'F1\'EE\'F2\'E0 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data_length} \cell }{- \'E4\'EB\'E8\'ED\'E0 \'E2\'F1\'E5\'F5 "\'F1\'FB\'F0\'FB\'F5" \'EF\'E8\'EA\'F1\'E5\'EB\'E5\'E9 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i alpha} \cell }{- \'F3\'EA\'E0\'E7\'FB\'E2\'E0\'E5\'F2 \'ED\'E0 \'ED\'E0\'EB\'E8\'F7\'E8\'E5 \'E0\'EB\'FC\'F4\'E0 \'F1\'EB\'EE\'FF \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v alpha\:DukeImageMeta}
{\xe \v DukeImageMeta\:alpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char alpha}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v data_length\:DukeImageMeta}
{\xe \v DukeImageMeta\:data_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int data_length}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\xe \v height\:DukeImageMeta}
{\xe \v DukeImageMeta\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short height}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v width\:DukeImageMeta}
{\xe \v DukeImageMeta\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short width}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/io/{\b imaging.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 elf_hdr\par \pard\plain 
{\tc\tcl2 \v elf_hdr}
{\xe \v elf_hdr}
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b mag_num} [4]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b arch}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b byte_order}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b elf_ver}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b os_abi}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b abi_ver}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b unused} [7]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b file_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b machine}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b version}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b entry}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b phoff}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b shoff}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b hsize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b ph_ent_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b ph_ent_cnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b sh_ent_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b sh_ent_cnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b sh_name_index}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v abi_ver\:elf_hdr}
{\xe \v elf_hdr\:abi_ver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t abi_ver}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\xe \v arch\:elf_hdr}
{\xe \v elf_hdr\:arch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t arch}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v byte_order\:elf_hdr}
{\xe \v elf_hdr\:byte_order}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t byte_order}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v elf_ver\:elf_hdr}
{\xe \v elf_hdr\:elf_ver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t elf_ver}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v entry\:elf_hdr}
{\xe \v elf_hdr\:entry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t entry}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 32}}\par
}
{\xe \v file_type\:elf_hdr}
{\xe \v elf_hdr\:file_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t file_type}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 29}}\par
}
{\xe \v flags\:elf_hdr}
{\xe \v elf_hdr\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t flags}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
}
{\xe \v hsize\:elf_hdr}
{\xe \v elf_hdr\:hsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t hsize}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 36}}\par
}
{\xe \v machine\:elf_hdr}
{\xe \v elf_hdr\:machine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t machine}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 30}}\par
}
{\xe \v mag_num\:elf_hdr}
{\xe \v elf_hdr\:mag_num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t mag_num[4]}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v os_abi\:elf_hdr}
{\xe \v elf_hdr\:os_abi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t os_abi}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v ph_ent_cnt\:elf_hdr}
{\xe \v elf_hdr\:ph_ent_cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ph_ent_cnt}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 38}}\par
}
{\xe \v ph_ent_size\:elf_hdr}
{\xe \v elf_hdr\:ph_ent_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ph_ent_size}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 37}}\par
}
{\xe \v phoff\:elf_hdr}
{\xe \v elf_hdr\:phoff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t phoff}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\xe \v sh_ent_cnt\:elf_hdr}
{\xe \v elf_hdr\:sh_ent_cnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t sh_ent_cnt}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 40}}\par
}
{\xe \v sh_ent_size\:elf_hdr}
{\xe \v elf_hdr\:sh_ent_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t sh_ent_size}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 39}}\par
}
{\xe \v sh_name_index\:elf_hdr}
{\xe \v elf_hdr\:sh_name_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t sh_name_index}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\xe \v shoff\:elf_hdr}
{\xe \v elf_hdr\:shoff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t shoff}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 34}}\par
}
{\xe \v unused\:elf_hdr}
{\xe \v elf_hdr\:unused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t unused[7]}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 28}}\par
}
{\xe \v version\:elf_hdr}
{\xe \v elf_hdr\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t version}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 31}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/sys/elf.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 elf_program_header\par \pard\plain 
{\tc\tcl2 \v elf_program_header}
{\xe \v elf_program_header}
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b data_offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b load_to}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b undefined}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b size_in_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b size_in_mem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b align}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 57}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v align\:elf_program_header}
{\xe \v elf_program_header\:align}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t align}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 65}}\par
}
{\xe \v data_offset\:elf_program_header}
{\xe \v elf_program_header\:data_offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t data_offset}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 59}}\par
}
{\xe \v flags\:elf_program_header}
{\xe \v elf_program_header\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t flags}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 64}}\par
}
{\xe \v load_to\:elf_program_header}
{\xe \v elf_program_header\:load_to}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t load_to}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 60}}\par
}
{\xe \v size_in_file\:elf_program_header}
{\xe \v elf_program_header\:size_in_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t size_in_file}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 62}}\par
}
{\xe \v size_in_mem\:elf_program_header}
{\xe \v elf_program_header\:size_in_mem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t size_in_mem}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 63}}\par
}
{\xe \v type\:elf_program_header}
{\xe \v elf_program_header\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t type}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 58}}\par
}
{\xe \v undefined\:elf_program_header}
{\xe \v elf_program_header\:undefined}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t undefined}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 61}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/sys/elf.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 elf_section_header\par \pard\plain 
{\tc\tcl2 \v elf_section_header}
{\xe \v elf_section_header}
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b link}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b info}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b addralign}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b entsize}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v addr\:elf_section_header}
{\xe \v elf_section_header\:addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t addr}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 48}}\par
}
{\xe \v addralign\:elf_section_header}
{\xe \v elf_section_header\:addralign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t addralign}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 53}}\par
}
{\xe \v entsize\:elf_section_header}
{\xe \v elf_section_header\:entsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t entsize}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 54}}\par
}
{\xe \v flags\:elf_section_header}
{\xe \v elf_section_header\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t flags}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 47}}\par
}
{\xe \v info\:elf_section_header}
{\xe \v elf_section_header\:info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t info}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 52}}\par
}
{\xe \v link\:elf_section_header}
{\xe \v elf_section_header\:link}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t link}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 51}}\par
}
{\xe \v name\:elf_section_header}
{\xe \v elf_section_header\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t name}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 45}}\par
}
{\xe \v offset\:elf_section_header}
{\xe \v elf_section_header\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t offset}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 49}}\par
}
{\xe \v size\:elf_section_header}
{\xe \v elf_section_header\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t size}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 50}}\par
}
{\xe \v type\:elf_section_header}
{\xe \v elf_section_header\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t type}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b elf.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 46}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/sys/elf.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 ethernet_frame\par \pard\plain 
{\tc\tcl2 \v ethernet_frame}
{\xe \v ethernet_frame}
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b dst_mac_addr} [6]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b src_mac_addr} [6]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b data} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 86}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v data\:ethernet_frame}
{\xe \v ethernet_frame\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t data[]}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 90}}\par
}
{\xe \v dst_mac_addr\:ethernet_frame}
{\xe \v ethernet_frame\:dst_mac_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t dst_mac_addr[6]}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 87}}\par
}
{\xe \v src_mac_addr\:ethernet_frame}
{\xe \v ethernet_frame\:src_mac_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t src_mac_addr[6]}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 88}}\par
}
{\xe \v type\:ethernet_frame}
{\xe \v ethernet_frame\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t type}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 89}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/net.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 ext2_super_block\par \pard\plain 
{\tc\tcl2 \v ext2_super_block}
{\xe \v ext2_super_block}
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_inodes_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_blocks_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_r_blocks_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_free_blocks_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_free_inodes_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_first_data_block}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_log_block_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b s_log_frag_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_blocks_per_group}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_frags_per_group}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_inodes_per_group}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_mtime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_wtime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b s_mnt_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b s_max_mnt_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b s_errors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b s_pad}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_lastcheck}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_checkinterval}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_creator_os}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_rev_level}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b s_def_resuid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b s_def_resgid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b s_reserved} [235]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v s_blocks_count\:ext2_super_block}
{\xe \v ext2_super_block\:s_blocks_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_blocks_count}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v s_blocks_per_group\:ext2_super_block}
{\xe \v ext2_super_block\:s_blocks_per_group}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_blocks_per_group}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v s_checkinterval\:ext2_super_block}
{\xe \v ext2_super_block\:s_checkinterval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_checkinterval}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 36}}\par
}
{\xe \v s_creator_os\:ext2_super_block}
{\xe \v ext2_super_block\:s_creator_os}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_creator_os}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 37}}\par
}
{\xe \v s_def_resgid\:ext2_super_block}
{\xe \v ext2_super_block\:s_def_resgid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t s_def_resgid}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v s_def_resuid\:ext2_super_block}
{\xe \v ext2_super_block\:s_def_resuid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t s_def_resuid}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\xe \v s_errors\:ext2_super_block}
{\xe \v ext2_super_block\:s_errors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t s_errors}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\xe \v s_first_data_block\:ext2_super_block}
{\xe \v ext2_super_block\:s_first_data_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_first_data_block}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v s_frags_per_group\:ext2_super_block}
{\xe \v ext2_super_block\:s_frags_per_group}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_frags_per_group}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\xe \v s_free_blocks_count\:ext2_super_block}
{\xe \v ext2_super_block\:s_free_blocks_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_free_blocks_count}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\xe \v s_free_inodes_count\:ext2_super_block}
{\xe \v ext2_super_block\:s_free_inodes_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_free_inodes_count}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v s_inodes_count\:ext2_super_block}
{\xe \v ext2_super_block\:s_inodes_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_inodes_count}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\xe \v s_inodes_per_group\:ext2_super_block}
{\xe \v ext2_super_block\:s_inodes_per_group}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_inodes_per_group}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 28}}\par
}
{\xe \v s_lastcheck\:ext2_super_block}
{\xe \v ext2_super_block\:s_lastcheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_lastcheck}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
}
{\xe \v s_log_block_size\:ext2_super_block}
{\xe \v ext2_super_block\:s_log_block_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_log_block_size}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v s_log_frag_size\:ext2_super_block}
{\xe \v ext2_super_block\:s_log_frag_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t s_log_frag_size}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v s_max_mnt_count\:ext2_super_block}
{\xe \v ext2_super_block\:s_max_mnt_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t s_max_mnt_count}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 32}}\par
}
{\xe \v s_mnt_count\:ext2_super_block}
{\xe \v ext2_super_block\:s_mnt_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t s_mnt_count}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 31}}\par
}
{\xe \v s_mtime\:ext2_super_block}
{\xe \v ext2_super_block\:s_mtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_mtime}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 29}}\par
}
{\xe \v s_pad\:ext2_super_block}
{\xe \v ext2_super_block\:s_pad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t s_pad}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 34}}\par
}
{\xe \v s_r_blocks_count\:ext2_super_block}
{\xe \v ext2_super_block\:s_r_blocks_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_r_blocks_count}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v s_reserved\:ext2_super_block}
{\xe \v ext2_super_block\:s_reserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_reserved[235]}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\xe \v s_rev_level\:ext2_super_block}
{\xe \v ext2_super_block\:s_rev_level}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_rev_level}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 38}}\par
}
{\xe \v s_wtime\:ext2_super_block}
{\xe \v ext2_super_block\:s_wtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t s_wtime}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ext2.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 30}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/src/fs/ext2.c\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 FILE\par \pard\plain 
{\tc\tcl2 \v FILE}
{\xe \v FILE}
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b path}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b fmode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b bufSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b buf}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b open}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int64_t {\b pos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b err}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b stdio.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 13}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v buf\:FILE}
{\xe \v FILE\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* buf}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b stdio.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\xe \v bufSize\:FILE}
{\xe \v FILE\:bufSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t bufSize}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b stdio.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v err\:FILE}
{\xe \v FILE\:err}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t err}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b stdio.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\xe \v fmode\:FILE}
{\xe \v FILE\:fmode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t fmode}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b stdio.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\xe \v open\:FILE}
{\xe \v FILE\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool open}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b stdio.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v path\:FILE}
{\xe \v FILE\:path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* path}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b stdio.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 14}}\par
}
{\xe \v pos\:FILE}
{\xe \v FILE\:pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int64_t pos}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b stdio.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v size\:FILE}
{\xe \v FILE\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t size}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b stdio.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/libk/stdio.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 floppy_info\par \pard\plain 
{\tc\tcl2 \v floppy_info}
{\xe \v floppy_info}
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int8_t * {\b type_name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int8_t {\b heads}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int8_t {\b tracks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int8_t {\b sectors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b sector_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int8_t {\b gap_len}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b floppy.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v gap_len\:floppy_info}
{\xe \v floppy_info\:gap_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int8_t gap_len}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b floppy.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\xe \v heads\:floppy_info}
{\xe \v floppy_info\:heads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int8_t heads}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b floppy.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v sector_size\:floppy_info}
{\xe \v floppy_info\:sector_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t sector_size}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b floppy.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v sectors\:floppy_info}
{\xe \v floppy_info\:sectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int8_t sectors}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b floppy.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v tracks\:floppy_info}
{\xe \v floppy_info\:tracks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int8_t tracks}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b floppy.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v type_name\:floppy_info}
{\xe \v floppy_info\:type_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int8_t* type_name}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b floppy.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/src/drivers/experimental/floppy.c\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 gdt_entry\par \pard\plain 
{\tc\tcl2 \v gdt_entry}
{\xe \v gdt_entry}
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b limit_low}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b base_low}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b base_middle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b access}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b granularity}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b base_high}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b gdt.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 4}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v access\:gdt_entry}
{\xe \v gdt_entry\:access}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t access}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b gdt.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 8}}\par
}
{\xe \v base_high\:gdt_entry}
{\xe \v gdt_entry\:base_high}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t base_high}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b gdt.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 10}}\par
}
{\xe \v base_low\:gdt_entry}
{\xe \v gdt_entry\:base_low}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t base_low}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b gdt.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 6}}\par
}
{\xe \v base_middle\:gdt_entry}
{\xe \v gdt_entry\:base_middle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t base_middle}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b gdt.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 7}}\par
}
{\xe \v granularity\:gdt_entry}
{\xe \v gdt_entry\:granularity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t granularity}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b gdt.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 9}}\par
}
{\xe \v limit_low\:gdt_entry}
{\xe \v gdt_entry\:limit_low}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t limit_low}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b gdt.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 5}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/src/sys/gdt.c\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 gdt_ptr\par \pard\plain 
{\tc\tcl2 \v gdt_ptr}
{\xe \v gdt_ptr}
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b limit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b base}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b gdt.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v base\:gdt_ptr}
{\xe \v gdt_ptr\:base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t base}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b gdt.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v limit\:gdt_ptr}
{\xe \v gdt_ptr\:limit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t limit}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b gdt.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/src/sys/gdt.c\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 IDE_CHANNELS\par \pard\plain 
{\tc\tcl2 \v IDE_CHANNELS}
{\xe \v IDE_CHANNELS}
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b base}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b control}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b bm_ide}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b no_intr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 5}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v base\:IDE_CHANNELS}
{\xe \v IDE_CHANNELS\:base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t base}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 6}}\par
}
{\xe \v bm_ide\:IDE_CHANNELS}
{\xe \v IDE_CHANNELS\:bm_ide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t bm_ide}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 8}}\par
}
{\xe \v control\:IDE_CHANNELS}
{\xe \v IDE_CHANNELS\:control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t control}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 7}}\par
}
{\xe \v no_intr\:IDE_CHANNELS}
{\xe \v IDE_CHANNELS\:no_intr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t no_intr}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 9}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/ata.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 IDE_DEVICE\par \pard\plain 
{\tc\tcl2 \v IDE_DEVICE}
{\xe \v IDE_DEVICE}
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b reserved}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b channel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b drive}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b signature}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b features}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b command_sets}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b model} [41]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 12}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v channel\:IDE_DEVICE}
{\xe \v IDE_DEVICE\:channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t channel}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 14}}\par
}
{\xe \v command_sets\:IDE_DEVICE}
{\xe \v IDE_DEVICE\:command_sets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t command_sets}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v drive\:IDE_DEVICE}
{\xe \v IDE_DEVICE\:drive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t drive}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
}
{\xe \v features\:IDE_DEVICE}
{\xe \v IDE_DEVICE\:features}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t features}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\xe \v model\:IDE_DEVICE}
{\xe \v IDE_DEVICE\:model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char model[41]}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\xe \v reserved\:IDE_DEVICE}
{\xe \v IDE_DEVICE\:reserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t reserved}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 13}}\par
}
{\xe \v signature\:IDE_DEVICE}
{\xe \v IDE_DEVICE\:signature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t signature}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v size\:IDE_DEVICE}
{\xe \v IDE_DEVICE\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t size}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v type\:IDE_DEVICE}
{\xe \v IDE_DEVICE\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t type}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ata.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/ata.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 idt_entry\par \pard\plain 
{\tc\tcl2 \v idt_entry}
{\xe \v idt_entry}
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b handler_lo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b sel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b always0}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b handler_hi}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 48}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v always0\:idt_entry}
{\xe \v idt_entry\:always0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t always0}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 51}}\par
}
{\xe \v flags\:idt_entry}
{\xe \v idt_entry\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t flags}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 52}}\par
}
{\xe \v handler_hi\:idt_entry}
{\xe \v idt_entry\:handler_hi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t handler_hi}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 53}}\par
}
{\xe \v handler_lo\:idt_entry}
{\xe \v idt_entry\:handler_lo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t handler_lo}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 49}}\par
}
{\xe \v sel\:idt_entry}
{\xe \v idt_entry\:sel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t sel}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 50}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/sys/idt.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 idt_ptr\par \pard\plain 
{\tc\tcl2 \v idt_ptr}
{\xe \v idt_ptr}
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b limit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b base}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 56}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v base\:idt_ptr}
{\xe \v idt_ptr\:base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t base}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 58}}\par
}
{\xe \v limit\:idt_ptr}
{\xe \v idt_ptr\:limit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t limit}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 57}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/sys/idt.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 ip_packet\par \pard\plain 
{\tc\tcl2 \v ip_packet}
{\xe \v ip_packet}
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b version_ihl_ptr} [0]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b version}:4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b ihl}:4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b tos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b length}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b flags_fragment_ptr} [0]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b flags}:3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b fragment_offset_high}:5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b fragment_offset_low}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b ttl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b protocol}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b header_checksum}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b src_ip} [4]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b dst_ip} [4]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b data} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 31}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v data\:ip_packet}
{\xe \v ip_packet\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t data[]}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 47}}\par
}
{\xe \v dst_ip\:ip_packet}
{\xe \v ip_packet\:dst_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t dst_ip[4]}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 46}}\par
}
{\xe \v flags\:ip_packet}
{\xe \v ip_packet\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t flags}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 39}}\par
}
{\xe \v flags_fragment_ptr\:ip_packet}
{\xe \v ip_packet\:flags_fragment_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char flags_fragment_ptr[0]}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 38}}\par
}
{\xe \v fragment_offset_high\:ip_packet}
{\xe \v ip_packet\:fragment_offset_high}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t fragment_offset_high}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 40}}\par
}
{\xe \v fragment_offset_low\:ip_packet}
{\xe \v ip_packet\:fragment_offset_low}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t fragment_offset_low}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\xe \v header_checksum\:ip_packet}
{\xe \v ip_packet\:header_checksum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t header_checksum}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v id\:ip_packet}
{\xe \v ip_packet\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t id}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 37}}\par
}
{\xe \v ihl\:ip_packet}
{\xe \v ip_packet\:ihl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t ihl}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 34}}\par
}
{\xe \v length\:ip_packet}
{\xe \v ip_packet\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t length}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 36}}\par
}
{\xe \v protocol\:ip_packet}
{\xe \v ip_packet\:protocol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t protocol}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\xe \v src_ip\:ip_packet}
{\xe \v ip_packet\:src_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t src_ip[4]}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 45}}\par
}
{\xe \v tos\:ip_packet}
{\xe \v ip_packet\:tos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t tos}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
}
{\xe \v ttl\:ip_packet}
{\xe \v ip_packet\:ttl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t ttl}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v version\:ip_packet}
{\xe \v ip_packet\:version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t version}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\xe \v version_ihl_ptr\:ip_packet}
{\xe \v ip_packet\:version_ihl_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char version_ihl_ptr[0]}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 32}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/net.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 list_item\par \pard\plain 
{\tc\tcl2 \v list_item}
{\xe \v list_item}
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b list_item_t} * {\b prev}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b list_item_t} * {\b next}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b list_t} * {\b list}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b list.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v list\:list_item}
{\xe \v list_item\:list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b list_t}* list}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b list.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v next\:list_item}
{\xe \v list_item\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b list_item_t}* next}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b list.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\xe \v prev\:list_item}
{\xe \v list_item\:prev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b list_item_t}* prev}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b list.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/libk/list.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 list_t\par \pard\plain 
{\tc\tcl2 \v list_t}
{\xe \v list_t}
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b list_item_t} * {\b first}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b count}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b list.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 10}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v count\:list_t}
{\xe \v list_t\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t count}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b list.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 12}}\par
}
{\xe \v first\:list_t}
{\xe \v list_t\:first}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b list_item_t}* first}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b list.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/libk/list.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 mouse_flags_byte\par \pard\plain 
{\tc\tcl2 \v mouse_flags_byte}
{\xe \v mouse_flags_byte}
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b left_button}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b right_button}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b middle_button}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b always1}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b x_sign}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b y_sign}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b x_overflow}: 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b y_overflow}: 1\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b mouse.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v always1\:mouse_flags_byte}
{\xe \v mouse_flags_byte\:always1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int always1}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b mouse.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\xe \v left_button\:mouse_flags_byte}
{\xe \v mouse_flags_byte\:left_button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int left_button}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b mouse.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v middle_button\:mouse_flags_byte}
{\xe \v mouse_flags_byte\:middle_button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int middle_button}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b mouse.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v right_button\:mouse_flags_byte}
{\xe \v mouse_flags_byte\:right_button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int right_button}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b mouse.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v x_overflow\:mouse_flags_byte}
{\xe \v mouse_flags_byte\:x_overflow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int x_overflow}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b mouse.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 32}}\par
}
{\xe \v x_sign\:mouse_flags_byte}
{\xe \v mouse_flags_byte\:x_sign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int x_sign}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b mouse.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 29}}\par
}
{\xe \v y_overflow\:mouse_flags_byte}
{\xe \v mouse_flags_byte\:y_overflow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int y_overflow}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b mouse.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\xe \v y_sign\:mouse_flags_byte}
{\xe \v mouse_flags_byte\:y_sign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int y_sign}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b mouse.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 30}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/src/drivers/experimental/mouse.c\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 multiboot_info\par \pard\plain 
{\tc\tcl2 \v multiboot_info}
{\xe \v multiboot_info}
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b mem_lower}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b mem_upper}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b boot_device}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b cmdline}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b mods_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b mods_addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b num}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b shndx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b mmap_length}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b mmap_addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b drives_length}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b drives_addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b config_table}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b boot_loader_name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b apm_table}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b vbe_control_info}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b vbe_mode_info}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b vbe_mode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b vbe_interface_seg}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b vbe_interface_off}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b vbe_interface_len}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint64_t {\b framebuffer_addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b framebuffer_pitch}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b framebuffer_width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b framebuffer_height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b framebuffer_bpp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b framebuffer_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

\~ struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ uint32_t {\b framebuffer_palette_addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ uint16_t {\b framebuffer_palette_num_colors}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \} {\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

\~ struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ uint8_t {\b framebuffer_red_field_position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ uint8_t {\b framebuffer_red_mask_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ uint8_t {\b framebuffer_green_field_position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ uint8_t {\b framebuffer_green_mask_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ uint8_t {\b framebuffer_blue_field_position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ uint8_t {\b framebuffer_blue_mask_size}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \} {\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\}; {\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v addr\:multiboot_info}
{\xe \v multiboot_info\:addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t addr}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 31}}\par
}
{\xe \v apm_table\:multiboot_info}
{\xe \v multiboot_info\:apm_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t apm_table}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 39}}\par
}
{\xe \v boot_device\:multiboot_info}
{\xe \v multiboot_info\:boot_device}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t boot_device}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v boot_loader_name\:multiboot_info}
{\xe \v multiboot_info\:boot_loader_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t boot_loader_name}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 38}}\par
}
{\xe \v cmdline\:multiboot_info}
{\xe \v multiboot_info\:cmdline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t cmdline}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v config_table\:multiboot_info}
{\xe \v multiboot_info\:config_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t config_table}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 37}}\par
}
{\xe \v drives_addr\:multiboot_info}
{\xe \v multiboot_info\:drives_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t drives_addr}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 36}}\par
}
{\xe \v drives_length\:multiboot_info}
{\xe \v multiboot_info\:drives_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t drives_length}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
}
{\xe \v flags\:multiboot_info}
{\xe \v multiboot_info\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t flags}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v framebuffer_addr\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint64_t framebuffer_addr}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 47}}\par
}
{\xe \v framebuffer_blue_field_position\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_blue_field_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t framebuffer_blue_field_position}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 65}}\par
}
{\xe \v framebuffer_blue_mask_size\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_blue_mask_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t framebuffer_blue_mask_size}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 66}}\par
}
{\xe \v framebuffer_bpp\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_bpp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t framebuffer_bpp}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 51}}\par
}
{\xe \v framebuffer_green_field_position\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_green_field_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t framebuffer_green_field_position}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 63}}\par
}
{\xe \v framebuffer_green_mask_size\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_green_mask_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t framebuffer_green_mask_size}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 64}}\par
}
{\xe \v framebuffer_height\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t framebuffer_height}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 50}}\par
}
{\xe \v framebuffer_palette_addr\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_palette_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t framebuffer_palette_addr}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 56}}\par
}
{\xe \v framebuffer_palette_num_colors\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_palette_num_colors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t framebuffer_palette_num_colors}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 57}}\par
}
{\xe \v framebuffer_pitch\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_pitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t framebuffer_pitch}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 48}}\par
}
{\xe \v framebuffer_red_field_position\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_red_field_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t framebuffer_red_field_position}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 61}}\par
}
{\xe \v framebuffer_red_mask_size\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_red_mask_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t framebuffer_red_mask_size}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 62}}\par
}
{\xe \v framebuffer_type\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t framebuffer_type}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 52}}\par
}
{\xe \v framebuffer_width\:multiboot_info}
{\xe \v multiboot_info\:framebuffer_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t framebuffer_width}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 49}}\par
}
{\xe \v mem_lower\:multiboot_info}
{\xe \v multiboot_info\:mem_lower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t mem_lower}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v mem_upper\:multiboot_info}
{\xe \v multiboot_info\:mem_upper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t mem_upper}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v mmap_addr\:multiboot_info}
{\xe \v multiboot_info\:mmap_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t mmap_addr}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 34}}\par
}
{\xe \v mmap_length\:multiboot_info}
{\xe \v multiboot_info\:mmap_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t mmap_length}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\xe \v mods_addr\:multiboot_info}
{\xe \v multiboot_info\:mods_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t mods_addr}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 28}}\par
}
{\xe \v mods_count\:multiboot_info}
{\xe \v multiboot_info\:mods_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t mods_count}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\xe \v num\:multiboot_info}
{\xe \v multiboot_info\:num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t num}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 29}}\par
}
{\xe \v shndx\:multiboot_info}
{\xe \v multiboot_info\:shndx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t shndx}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 32}}\par
}
{\xe \v size\:multiboot_info}
{\xe \v multiboot_info\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t size}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 30}}\par
}
{\xe \v vbe_control_info\:multiboot_info}
{\xe \v multiboot_info\:vbe_control_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t vbe_control_info}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 40}}\par
}
{\xe \v vbe_interface_len\:multiboot_info}
{\xe \v multiboot_info\:vbe_interface_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t vbe_interface_len}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 45}}\par
}
{\xe \v vbe_interface_off\:multiboot_info}
{\xe \v multiboot_info\:vbe_interface_off}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t vbe_interface_off}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v vbe_interface_seg\:multiboot_info}
{\xe \v multiboot_info\:vbe_interface_seg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t vbe_interface_seg}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\xe \v vbe_mode\:multiboot_info}
{\xe \v multiboot_info\:vbe_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t vbe_mode}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v vbe_mode_info\:multiboot_info}
{\xe \v multiboot_info\:vbe_mode_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t vbe_mode_info}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/multyboot.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 multiboot_memory_map_entry\par \pard\plain 
{\tc\tcl2 \v multiboot_memory_map_entry}
{\xe \v multiboot_memory_map_entry}
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint64_t {\b addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint64_t {\b len}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 73}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v addr\:multiboot_memory_map_entry}
{\xe \v multiboot_memory_map_entry\:addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint64_t addr}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 75}}\par
}
{\xe \v len\:multiboot_memory_map_entry}
{\xe \v multiboot_memory_map_entry\:len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint64_t len}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 76}}\par
}
{\xe \v size\:multiboot_memory_map_entry}
{\xe \v multiboot_memory_map_entry\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t size}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 74}}\par
}
{\xe \v type\:multiboot_memory_map_entry}
{\xe \v multiboot_memory_map_entry\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t type}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b multyboot.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 77}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/multyboot.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CE\'E1\'FA\'E5\'E4\'E8\'ED\'E5\'ED\'E8\'E5 pci_dev\par \pard\plain 
{\tc\tcl2 \v pci_dev}
{\xe \v pci_dev}
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b bits}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ uint32_t {\b always_zero}: 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ uint32_t {\b field_num}: 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ uint32_t {\b function_num}: 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ uint32_t {\b device_num}: 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ uint32_t {\b bus_num}: 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ uint32_t {\b reserved}: 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ uint32_t {\b enable}: 1\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\}; {\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b pci.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 47}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v always_zero\:pci_dev}
{\xe \v pci_dev\:always_zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t always_zero}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b pci.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 50}}\par
}
{\xe \v bits\:pci_dev}
{\xe \v pci_dev\:bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t bits}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b pci.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 48}}\par
}
{\xe \v bus_num\:pci_dev}
{\xe \v pci_dev\:bus_num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t bus_num}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b pci.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 54}}\par
}
{\xe \v device_num\:pci_dev}
{\xe \v pci_dev\:device_num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t device_num}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b pci.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 53}}\par
}
{\xe \v enable\:pci_dev}
{\xe \v pci_dev\:enable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t enable}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b pci.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 56}}\par
}
{\xe \v field_num\:pci_dev}
{\xe \v pci_dev\:field_num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t field_num}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b pci.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 51}}\par
}
{\xe \v function_num\:pci_dev}
{\xe \v pci_dev\:function_num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t function_num}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b pci.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 52}}\par
}
{\xe \v reserved\:pci_dev}
{\xe \v pci_dev\:reserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t reserved}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b pci.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 55}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'EE\'E1\'FA\'E5\'E4\'E8\'ED\'E5\'ED\'E8\'FF \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/pci.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 regs\par \pard\plain 
{\tc\tcl2 \v regs}
{\xe \v regs}
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b gs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b fs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b es}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b edi}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b esi}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ebp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b esp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ebx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b edx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ecx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b eax}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b idt_index}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b err_code}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b eip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b cs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b eflags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b useresp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ss}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 40}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v cs\:regs}
{\xe \v regs\:cs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t cs}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v ds\:regs}
{\xe \v regs\:ds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ds}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\xe \v eax\:regs}
{\xe \v regs\:eax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t eax}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v ebp\:regs}
{\xe \v regs\:ebp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ebp}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v ebx\:regs}
{\xe \v regs\:ebx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ebx}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v ecx\:regs}
{\xe \v regs\:ecx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ecx}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v edi\:regs}
{\xe \v regs\:edi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t edi}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v edx\:regs}
{\xe \v regs\:edx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t edx}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v eflags\:regs}
{\xe \v regs\:eflags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t eflags}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v eip\:regs}
{\xe \v regs\:eip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t eip}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v err_code\:regs}
{\xe \v regs\:err_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t err_code}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\xe \v es\:regs}
{\xe \v regs\:es}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t es}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\xe \v esi\:regs}
{\xe \v regs\:esi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t esi}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v esp\:regs}
{\xe \v regs\:esp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t esp}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v fs\:regs}
{\xe \v regs\:fs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t fs}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\xe \v gs\:regs}
{\xe \v regs\:gs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t gs}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\xe \v idt_index\:regs}
{\xe \v regs\:idt_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t idt_index}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\xe \v ss\:regs}
{\xe \v regs\:ss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ss}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v useresp\:regs}
{\xe \v regs\:useresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t useresp}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b idt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/sys/idt.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 rgba_struct\par \pard\plain 
{\tc\tcl2 \v rgba_struct}
{\xe \v rgba_struct}
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b r}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b g}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b b}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b a}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 7}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v a\:rgba_struct}
{\xe \v rgba_struct\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t a}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
}
{\xe \v b\:rgba_struct}
{\xe \v rgba_struct\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t b}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 10}}\par
}
{\xe \v g\:rgba_struct}
{\xe \v rgba_struct\:g}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t g}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 9}}\par
}
{\xe \v r\:rgba_struct}
{\xe \v rgba_struct\:r}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t r}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 8}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/io/tty.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 RTL8139_dev\par \pard\plain 
{\tc\tcl2 \v RTL8139_dev}
{\xe \v RTL8139_dev}
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bar_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b io_base}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b mem_base}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b eeprom_exist}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b mac_addr} [6]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b rx_buffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tx_cur}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 95}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v bar_type\:RTL8139_dev}
{\xe \v RTL8139_dev\:bar_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t bar_type}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 96}}\par
}
{\xe \v eeprom_exist\:RTL8139_dev}
{\xe \v RTL8139_dev\:eeprom_exist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int eeprom_exist}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 99}}\par
}
{\xe \v io_base\:RTL8139_dev}
{\xe \v RTL8139_dev\:io_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t io_base}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 97}}\par
}
{\xe \v mac_addr\:RTL8139_dev}
{\xe \v RTL8139_dev\:mac_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t mac_addr[6]}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 100}}\par
}
{\xe \v mem_base\:RTL8139_dev}
{\xe \v RTL8139_dev\:mem_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t mem_base}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 98}}\par
}
{\xe \v rx_buffer\:RTL8139_dev}
{\xe \v RTL8139_dev\:rx_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* rx_buffer}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 101}}\par
}
{\xe \v tx_cur\:RTL8139_dev}
{\xe \v RTL8139_dev\:tx_cur}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int tx_cur}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 102}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/net.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 STFS_block\par \pard\plain 
{\tc\tcl2 \v STFS_block}
{\xe \v STFS_block}
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
blockinfo_t {\b block}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b data} [4090]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 45}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v block\:STFS_block}
{\xe \v STFS_block\:block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
blockinfo_t block}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 46}}\par
}
{\xe \v data\:STFS_block}
{\xe \v STFS_block\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t data[4090]}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 47}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/fs/STFS.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 STFS_file\par \pard\plain 
{\tc\tcl2 \v STFS_file}
{\xe \v STFS_file}
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
blockinfo_t {\b block}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b magic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b creator_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b editor_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b folder_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b filename} [256]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b create_time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b edit_time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b description} [3820]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v block\:STFS_file}
{\xe \v STFS_file\:block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
blockinfo_t block}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v create_time\:STFS_file}
{\xe \v STFS_file\:create_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t create_time}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v creator_id\:STFS_file}
{\xe \v STFS_file\:creator_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t creator_id}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\xe \v description\:STFS_file}
{\xe \v STFS_file\:description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t description[3820]}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 28}}\par
}
{\xe \v edit_time\:STFS_file}
{\xe \v STFS_file\:edit_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t edit_time}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\xe \v editor_id\:STFS_file}
{\xe \v STFS_file\:editor_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t editor_id}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v filename\:STFS_file}
{\xe \v STFS_file\:filename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t filename[256]}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v flags\:STFS_file}
{\xe \v STFS_file\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t flags}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v folder_id\:STFS_file}
{\xe \v STFS_file\:folder_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t folder_id}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v magic\:STFS_file}
{\xe \v STFS_file\:magic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t magic}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/fs/STFS.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 STFS_folder\par \pard\plain 
{\tc\tcl2 \v STFS_folder}
{\xe \v STFS_folder}
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
blockinfo_t {\b block}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b magic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b creator_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b editor_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b folder_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b filename} [256]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b create_time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b edit_time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
blockinfo_t {\b file_array} [625]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b description} [170]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 31}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v block\:STFS_folder}
{\xe \v STFS_folder\:block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
blockinfo_t block}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 32}}\par
}
{\xe \v create_time\:STFS_folder}
{\xe \v STFS_folder\:create_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t create_time}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 39}}\par
}
{\xe \v creator_id\:STFS_folder}
{\xe \v STFS_folder\:creator_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t creator_id}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 34}}\par
}
{\xe \v description\:STFS_folder}
{\xe \v STFS_folder\:description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t description[170]}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v edit_time\:STFS_folder}
{\xe \v STFS_folder\:edit_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t edit_time}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 40}}\par
}
{\xe \v editor_id\:STFS_folder}
{\xe \v STFS_folder\:editor_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t editor_id}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
}
{\xe \v file_array\:STFS_folder}
{\xe \v STFS_folder\:file_array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
blockinfo_t file_array[625]}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\xe \v filename\:STFS_folder}
{\xe \v STFS_folder\:filename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t filename[256]}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 38}}\par
}
{\xe \v flags\:STFS_folder}
{\xe \v STFS_folder\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t flags}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 36}}\par
}
{\xe \v folder_id\:STFS_folder}
{\xe \v STFS_folder\:folder_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t folder_id}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 37}}\par
}
{\xe \v magic\:STFS_folder}
{\xe \v STFS_folder\:magic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t magic}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b STFS.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/fs/STFS.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 svga_mode_info\par \pard\plain 
{\tc\tcl2 \v svga_mode_info}
{\xe \v svga_mode_info}
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b attributes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b windowA}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b windowB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b granularity}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b windowSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b segmentA}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b segmentB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b winFuncPtr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b pitch}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b screen_width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b screen_height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b wChar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b yChar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b planes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bpp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b banks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b memoryModel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bankSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b imagePages}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b reserved0}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b readMask}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b redPosition}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b greenMask}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b greenPosition}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b blueMask}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bluePosition}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b reservedMask}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b reservedPosition}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b directColorAttributes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b physbase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b offScreenMemOff}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b offScreenMemSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b reserved1} [206]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v attributes\:svga_mode_info}
{\xe \v svga_mode_info\:attributes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t attributes}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 34}}\par
}
{\xe \v banks\:svga_mode_info}
{\xe \v svga_mode_info\:banks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t banks}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\xe \v bankSize\:svga_mode_info}
{\xe \v svga_mode_info\:bankSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t bankSize}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v blueMask\:svga_mode_info}
{\xe \v svga_mode_info\:blueMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t blueMask}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 50}}\par
}
{\xe \v bluePosition\:svga_mode_info}
{\xe \v svga_mode_info\:bluePosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t bluePosition}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 50}}\par
}
{\xe \v bpp\:svga_mode_info}
{\xe \v svga_mode_info\:bpp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t bpp}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\xe \v directColorAttributes\:svga_mode_info}
{\xe \v svga_mode_info\:directColorAttributes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t directColorAttributes}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 52}}\par
}
{\xe \v granularity\:svga_mode_info}
{\xe \v svga_mode_info\:granularity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t granularity}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 36}}\par
}
{\xe \v greenMask\:svga_mode_info}
{\xe \v svga_mode_info\:greenMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t greenMask}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 49}}\par
}
{\xe \v greenPosition\:svga_mode_info}
{\xe \v svga_mode_info\:greenPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t greenPosition}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 49}}\par
}
{\xe \v imagePages\:svga_mode_info}
{\xe \v svga_mode_info\:imagePages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t imagePages}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v memoryModel\:svga_mode_info}
{\xe \v svga_mode_info\:memoryModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t memoryModel}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v offScreenMemOff\:svga_mode_info}
{\xe \v svga_mode_info\:offScreenMemOff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t offScreenMemOff}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 55}}\par
}
{\xe \v offScreenMemSize\:svga_mode_info}
{\xe \v svga_mode_info\:offScreenMemSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t offScreenMemSize}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 56}}\par
}
{\xe \v physbase\:svga_mode_info}
{\xe \v svga_mode_info\:physbase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t physbase}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 54}}\par
}
{\xe \v pitch\:svga_mode_info}
{\xe \v svga_mode_info\:pitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t pitch}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 40}}\par
}
{\xe \v planes\:svga_mode_info}
{\xe \v svga_mode_info\:planes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t planes}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\xe \v readMask\:svga_mode_info}
{\xe \v svga_mode_info\:readMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t readMask}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 48}}\par
}
{\xe \v redPosition\:svga_mode_info}
{\xe \v svga_mode_info\:redPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t redPosition}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 48}}\par
}
{\xe \v reserved0\:svga_mode_info}
{\xe \v svga_mode_info\:reserved0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t reserved0}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 45}}\par
}
{\xe \v reserved1\:svga_mode_info}
{\xe \v svga_mode_info\:reserved1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t reserved1[206]}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 57}}\par
}
{\xe \v reservedMask\:svga_mode_info}
{\xe \v svga_mode_info\:reservedMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t reservedMask}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 51}}\par
}
{\xe \v reservedPosition\:svga_mode_info}
{\xe \v svga_mode_info\:reservedPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t reservedPosition}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 51}}\par
}
{\xe \v screen_height\:svga_mode_info}
{\xe \v svga_mode_info\:screen_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t screen_height}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v screen_width\:svga_mode_info}
{\xe \v svga_mode_info\:screen_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t screen_width}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 42}}\par
}
{\xe \v segmentA\:svga_mode_info}
{\xe \v svga_mode_info\:segmentA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t segmentA}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 38}}\par
}
{\xe \v segmentB\:svga_mode_info}
{\xe \v svga_mode_info\:segmentB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t segmentB}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 38}}\par
}
{\xe \v wChar\:svga_mode_info}
{\xe \v svga_mode_info\:wChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t wChar}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\xe \v windowA\:svga_mode_info}
{\xe \v svga_mode_info\:windowA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t windowA}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
}
{\xe \v windowB\:svga_mode_info}
{\xe \v svga_mode_info\:windowB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t windowB}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
}
{\xe \v windowSize\:svga_mode_info}
{\xe \v svga_mode_info\:windowSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t windowSize}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 37}}\par
}
{\xe \v winFuncPtr\:svga_mode_info}
{\xe \v svga_mode_info\:winFuncPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t winFuncPtr}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 39}}\par
}
{\xe \v yChar\:svga_mode_info}
{\xe \v svga_mode_info\:yChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t yChar}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/io/tty.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 synapse_time\par \pard\plain 
{\tc\tcl2 \v synapse_time}
{\xe \v synapse_time}
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b seconds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b minutes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b hours}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b day}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b month}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b year}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b century}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b time.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 5}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v century\:synapse_time}
{\xe \v synapse_time\:century}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int century}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b time.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 12}}\par
}
{\xe \v day\:synapse_time}
{\xe \v synapse_time\:day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int day}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b time.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 9}}\par
}
{\xe \v hours\:synapse_time}
{\xe \v synapse_time\:hours}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int hours}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b time.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 8}}\par
}
{\xe \v minutes\:synapse_time}
{\xe \v synapse_time\:minutes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int minutes}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b time.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 7}}\par
}
{\xe \v month\:synapse_time}
{\xe \v synapse_time\:month}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int month}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b time.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 10}}\par
}
{\xe \v seconds\:synapse_time}
{\xe \v synapse_time\:seconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int seconds}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b time.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 6}}\par
}
{\xe \v year\:synapse_time}
{\xe \v synapse_time\:year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int year}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b time.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/time.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 tss_entry\par \pard\plain 
{\tc\tcl2 \v tss_entry}
{\xe \v tss_entry}
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b prev_tss}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b esp0}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ss0}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b esp1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ss1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b esp2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ss2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b cr3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b eip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b eflags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b eax}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ecx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b edx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ebx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b esp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ebp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b esi}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b edi}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b es}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b cs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ss}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b fs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b gs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ldt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b trap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b iomap_base}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 8}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v cr3\:tss_entry}
{\xe \v tss_entry\:cr3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t cr3}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v cs\:tss_entry}
{\xe \v tss_entry\:cs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t cs}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\xe \v ds\:tss_entry}
{\xe \v tss_entry\:ds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ds}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
}
{\xe \v eax\:tss_entry}
{\xe \v tss_entry\:eax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t eax}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v ebp\:tss_entry}
{\xe \v tss_entry\:ebp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ebp}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\xe \v ebx\:tss_entry}
{\xe \v tss_entry\:ebx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ebx}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v ecx\:tss_entry}
{\xe \v tss_entry\:ecx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ecx}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v edi\:tss_entry}
{\xe \v tss_entry\:edi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t edi}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 30}}\par
}
{\xe \v edx\:tss_entry}
{\xe \v tss_entry\:edx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t edx}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v eflags\:tss_entry}
{\xe \v tss_entry\:eflags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t eflags}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v eip\:tss_entry}
{\xe \v tss_entry\:eip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t eip}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v es\:tss_entry}
{\xe \v tss_entry\:es}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t es}}
\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 32}}\par
}
{\xe \v esi\:tss_entry}
{\xe \v tss_entry\:esi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t esi}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 29}}\par
}
{\xe \v esp\:tss_entry}
{\xe \v tss_entry\:esp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t esp}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v esp0\:tss_entry}
{\xe \v tss_entry\:esp0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t esp0}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
}
{\xe \v esp1\:tss_entry}
{\xe \v tss_entry\:esp1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t esp1}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 13}}\par
}
{\xe \v esp2\:tss_entry}
{\xe \v tss_entry\:esp2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t esp2}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
}
{\xe \v fs\:tss_entry}
{\xe \v tss_entry\:fs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t fs}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 36}}\par
}
{\xe \v gs\:tss_entry}
{\xe \v tss_entry\:gs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t gs}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 37}}\par
}
{\xe \v iomap_base\:tss_entry}
{\xe \v tss_entry\:iomap_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t iomap_base}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\xe \v ldt\:tss_entry}
{\xe \v tss_entry\:ldt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ldt}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 39}}\par
}
{\xe \v prev_tss\:tss_entry}
{\xe \v tss_entry\:prev_tss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t prev_tss}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 9}}\par
}
{\xe \v ss\:tss_entry}
{\xe \v tss_entry\:ss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ss}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 34}}\par
}
{\xe \v ss0\:tss_entry}
{\xe \v tss_entry\:ss0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ss0}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 12}}\par
}
{\xe \v ss1\:tss_entry}
{\xe \v tss_entry\:ss1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ss1}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 14}}\par
}
{\xe \v ss2\:tss_entry}
{\xe \v tss_entry\:ss2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t ss2}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\xe \v trap\:tss_entry}
{\xe \v tss_entry\:trap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t trap}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tss.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 40}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/sys/tss.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 udp_packet\par \pard\plain 
{\tc\tcl2 \v udp_packet}
{\xe \v udp_packet}
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b src_port}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b dst_port}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b length}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b checksum}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b data} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 105}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v checksum\:udp_packet}
{\xe \v udp_packet\:checksum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t checksum}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 109}}\par
}
{\xe \v data\:udp_packet}
{\xe \v udp_packet\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t data[]}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 110}}\par
}
{\xe \v dst_port\:udp_packet}
{\xe \v udp_packet\:dst_port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t dst_port}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 107}}\par
}
{\xe \v length\:udp_packet}
{\xe \v udp_packet\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t length}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 108}}\par
}
{\xe \v src_port\:udp_packet}
{\xe \v udp_packet\:src_port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t src_port}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b net.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 106}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/net.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 vfs_filesystem_handles_t\par \pard\plain 
{\tc\tcl2 \v vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t}
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b read} )(char *fn, int *, int *, {\b vfs_filesystem_t} *, void *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b write} )(char *fn, int *, int *, {\b vfs_filesystem_t} *, void *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b readdir} )(char *, {\b vfs_filesystem_t} *, void *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b mkfile} )(char *fn, char *, {\b vfs_filesystem_t} *, uint16_t *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b mkdir} )(char *fn, char *, {\b vfs_filesystem_t} *, uint16_t *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b rm} )(char *fn, {\b vfs_filesystem_t} *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b ls} )(char *fn, {\b vfs_filesystem_t} *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b get_size} )(char *fn, {\b vfs_filesystem_t} *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b exists} )(char *fn, {\b vfs_filesystem_t} *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b is_dir} )(char *fn, {\b vfs_filesystem_t} *)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 37}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v exists\:vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t\:exists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* exists) (char *fn, {\b vfs_filesystem_t} *)}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 50}}\par
}
{\xe \v get_size\:vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t\:get_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* get_size) (char *fn, {\b vfs_filesystem_t} *)}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 49}}\par
}
{\xe \v is_dir\:vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t\:is_dir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* is_dir) (char *fn, {\b vfs_filesystem_t} *)}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 51}}\par
}
{\xe \v ls\:vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t\:ls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* ls) (char *fn, {\b vfs_filesystem_t} *)}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 47}}\par
}
{\xe \v mkdir\:vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t\:mkdir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* mkdir) (char *fn, char *, {\b vfs_filesystem_t} *, uint16_t *)}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
}
{\xe \v mkfile\:vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t\:mkfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* mkfile) (char *fn, char *, {\b vfs_filesystem_t} *, uint16_t *)}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 43}}\par
}
{\xe \v read\:vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* read) (char *fn, int *, int *, {\b vfs_filesystem_t} *, void *)}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 38}}\par
}
{\xe \v readdir\:vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t\:readdir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* readdir) (char *, {\b vfs_filesystem_t} *, void *)}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\xe \v rm\:vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t\:rm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* rm) (char *fn, {\b vfs_filesystem_t} *)}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 46}}\par
}
{\xe \v write\:vfs_filesystem_handles_t}
{\xe \v vfs_filesystem_handles_t\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* write) (char *fn, int *, int *, {\b vfs_filesystem_t} *, void *)}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 39}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/vfs.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 vfs_filesystem_t\par \pard\plain 
{\tc\tcl2 \v vfs_filesystem_t}
{\xe \v vfs_filesystem_t}
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b fs_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b block_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vfs_storage_dev_t} * {\b dev}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 29}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v block_size\:vfs_filesystem_t}
{\xe \v vfs_filesystem_t\:block_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t block_size}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 31}}\par
}
{\xe \v dev\:vfs_filesystem_t}
{\xe \v vfs_filesystem_t\:dev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vfs_storage_dev_t}* dev}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\xe \v fs_type\:vfs_filesystem_t}
{\xe \v vfs_filesystem_t\:fs_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t fs_type}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 30}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/vfs.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 vfs_mount_info_t\par \pard\plain 
{\tc\tcl2 \v vfs_mount_info_t}
{\xe \v vfs_mount_info_t}
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b location}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vfs_filesystem_t} * {\b fs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vfs_filesystem_handles_t} * {\b fs_handles}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 55}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v fs\:vfs_mount_info_t}
{\xe \v vfs_mount_info_t\:fs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vfs_filesystem_t}* fs}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 57}}\par
}
{\xe \v fs_handles\:vfs_mount_info_t}
{\xe \v vfs_mount_info_t\:fs_handles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vfs_filesystem_handles_t}* fs_handles}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 58}}\par
}
{\xe \v location\:vfs_mount_info_t}
{\xe \v vfs_mount_info_t\:location}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* location}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 56}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/vfs.h\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 vfs_storage_dev_t\par \pard\plain 
{\tc\tcl2 \v vfs_storage_dev_t}
{\xe \v vfs_storage_dev_t}
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b disk_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b partition_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b lba_start}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b lba_end}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b read} )(int *, unsigned long long, unsigned long long, uint16_t *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t(* {\b write} )(int *, unsigned long long, unsigned long long, uint16_t *)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 13}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'EB\'FF\par
\pard\plain 
{\xe \v disk_id\:vfs_storage_dev_t}
{\xe \v vfs_storage_dev_t\:disk_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t disk_id}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\xe \v lba_end\:vfs_storage_dev_t}
{\xe \v vfs_storage_dev_t\:lba_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t lba_end}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v lba_start\:vfs_storage_dev_t}
{\xe \v vfs_storage_dev_t\:lba_start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t lba_start}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v name\:vfs_storage_dev_t}
{\xe \v vfs_storage_dev_t\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* name}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v partition_id\:vfs_storage_dev_t}
{\xe \v vfs_storage_dev_t\:partition_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t partition_id}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v read\:vfs_storage_dev_t}
{\xe \v vfs_storage_dev_t\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* read) (int *, unsigned long long, unsigned long long, uint16_t *)}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v type\:vfs_storage_dev_t}
{\xe \v vfs_storage_dev_t\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t type}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 14}}\par
}
{\xe \v write\:vfs_storage_dev_t}
{\xe \v vfs_storage_dev_t\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t(* write) (int *, unsigned long long, unsigned long long, uint16_t *)}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b vfs.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
kernel/include/drivers/vfs.h\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'D4\'E0\'E9\'EB\'FB{\tc \v \'D4\'E0\'E9\'EB\'FB}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
font_Experimental_Font.h\par \pard\plain 
{\tc\tcl2 \v kernel/fonts/font_Experimental_Font.h}
{\xe \v kernel/fonts/font_Experimental_Font.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} Experimental_Font_width = 16;\par
00002 {\cf18 int} Experimental_Font_height = 16;\par
00003 {\cf18 int} Experimental_Font_data[65280] = \{};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ata.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/ata.h}
{\xe \v kernel/include/drivers/ata.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #include <stdint.h>}\par
00004 {\cf21 #include <drivers/vfs.h>}\par
00005 {\cf17 typedef} {\cf17 struct }\{\par
00006     uint16_t base;  {\cf20 // i/o base port}\par
00007     uint16_t control;  {\cf20 // control port}\par
00008     uint16_t bm_ide; {\cf20 // bus-master ide port}\par
00009     uint16_t no_intr; {\cf20 // no interrupt port}\par
00010 \} IDE_CHANNELS;\par
00011 \par
00012 {\cf17 typedef} {\cf17 struct }\{\par
00013     uint8_t reserved; {\cf20 // 0 or 1 if drive exists or not}\par
00014     uint8_t channel; {\cf20 // primary(0) or secondary(1)}\par
00015     uint8_t drive; {\cf20 // master(0) or slave(1)}\par
00016     uint16_t type; {\cf20 // drive type- ATA(0), ATAPI(1),}\par
00017     uint16_t signature; {\cf20 // drive signature}\par
00018     uint16_t features; {\cf20 // drive features}\par
00019     uint32_t command_sets; {\cf20 // supported command sets}\par
00020     uint32_t size; {\cf20 // drive size in sectors}\par
00021     {\cf18 unsigned} {\cf18 char} model[41]; {\cf20 // drive name}\par
00022 \} IDE_DEVICE;\par
00023 \par
00024 {\cf21 #define MAXIMUM_CHANNELS    2}\par
00025 {\cf21 #define MAXIMUM_IDE_DEVICES    5}\par
00026 \par
00027 {\cf21 #define ATA_PRIMARY_IO 0x1F0}\par
00028 {\cf21 #define ATA_SECONDARY_IO 0x170}\par
00029 \par
00030 {\cf21 #define ATA_MASTER     0x00}\par
00031 {\cf21 #define ATA_SLAVE      0x01}\par
00032 \par
00033 {\cf20 // ATA register ports for read/write}\par
00034 {\cf21 #define ATA_REG_DATA         0x00}\par
00035 {\cf21 #define ATA_REG_ERROR        0x01}\par
00036 {\cf21 #define ATA_REG_FEATURES     0x01}\par
00037 {\cf21 #define ATA_REG_SECCOUNT0    0x02}\par
00038 {\cf21 #define ATA_REG_LBA0         0x03}\par
00039 {\cf21 #define ATA_REG_LBA1         0x04}\par
00040 {\cf21 #define ATA_REG_LBA2         0x05}\par
00041 {\cf21 #define ATA_REG_HDDEVSEL     0x06}\par
00042 {\cf21 #define ATA_REG_COMMAND      0x07}\par
00043 {\cf21 #define ATA_REG_STATUS       0x07}\par
00044 {\cf21 #define ATA_REG_SECCOUNT1    0x08}\par
00045 {\cf21 #define ATA_REG_LBA3         0x09}\par
00046 {\cf21 #define ATA_REG_LBA4         0x0A}\par
00047 {\cf21 #define ATA_REG_LBA5         0x0B}\par
00048 {\cf21 #define ATA_REG_CONTROL      0x0C}\par
00049 {\cf21 #define ATA_REG_ALTSTATUS    0x0C}\par
00050 {\cf21 #define ATA_REG_DEVADDRESS   0x0D}\par
00051 \par
00052 {\cf20 // ATA drive status}\par
00053 {\cf21 #define ATA_SR_BSY     0x80    }{\cf20 // Busy}\par
00054 {\cf21 #define ATA_SR_DRDY    0x40    }{\cf20 // Drive ready}\par
00055 {\cf21 #define ATA_SR_DF      0x20    }{\cf20 // Drive write fault}\par
00056 {\cf21 #define ATA_SR_DSC     0x10    }{\cf20 // Drive seek complete}\par
00057 {\cf21 #define ATA_SR_DRQ     0x08    }{\cf20 // Data request ready}\par
00058 {\cf21 #define ATA_SR_CORR    0x04    }{\cf20 // Corrected data}\par
00059 {\cf21 #define ATA_SR_IDX     0x02    }{\cf20 // Index}\par
00060 {\cf21 #define ATA_SR_ERR     0x01    }{\cf20 // Error}\par
00061 \par
00062 {\cf20 // ATA drive error status}\par
00063 {\cf21 #define ATA_ER_BBK      0x80    }{\cf20 // Bad block}\par
00064 {\cf21 #define ATA_ER_UNC      0x40    }{\cf20 // Uncorrectable data}\par
00065 {\cf21 #define ATA_ER_MC       0x20    }{\cf20 // Media changed}\par
00066 {\cf21 #define ATA_ER_IDNF     0x10    }{\cf20 // ID mark not found}\par
00067 {\cf21 #define ATA_ER_MCR      0x08    }{\cf20 // Media change request}\par
00068 {\cf21 #define ATA_ER_ABRT     0x04    }{\cf20 // Command aborted}\par
00069 {\cf21 #define ATA_ER_TK0NF    0x02    }{\cf20 // Track 0 not found}\par
00070 {\cf21 #define ATA_ER_AMNF     0x01    }{\cf20 // No address mark}\par
00071 \par
00072 \par
00073 {\cf20 // Channels}\par
00074 {\cf21 #define ATA_PRIMARY      0x00}\par
00075 {\cf21 #define ATA_SECONDARY    0x01}\par
00076 \par
00077 {\cf20 // IDE types}\par
00078 {\cf21 #define IDE_ATA      0x00}\par
00079 {\cf21 #define IDE_ATAPI    0x01}\par
00080 \par
00081 {\cf20 // Command types}\par
00082 {\cf21 #define ATA_CMD_READ_PIO          0x20}\par
00083 {\cf21 #define ATA_CMD_READ_PIO_EXT      0x24}\par
00084 {\cf21 #define ATA_CMD_READ_DMA          0xC8}\par
00085 {\cf21 #define ATA_CMD_READ_DMA_EXT      0x25}\par
00086 {\cf21 #define ATA_CMD_WRITE_PIO         0x30}\par
00087 {\cf21 #define ATA_CMD_WRITE_PIO_EXT     0x34}\par
00088 {\cf21 #define ATA_CMD_WRITE_DMA         0xCA}\par
00089 {\cf21 #define ATA_CMD_WRITE_DMA_EXT     0x35}\par
00090 {\cf21 #define ATA_CMD_CACHE_FLUSH       0xE7}\par
00091 {\cf21 #define ATA_CMD_CACHE_FLUSH_EXT   0xEA}\par
00092 {\cf21 #define ATA_CMD_PACKET            0xA0}\par
00093 {\cf21 #define ATA_CMD_IDENTIFY_PACKET   0xA1}\par
00094 {\cf21 #define ATA_CMD_IDENTIFY          0xEC}\par
00095 \par
00096 {\cf20 // Identify types}\par
00097 {\cf21 #define ATA_IDENT_DEVICETYPE   0}\par
00098 {\cf21 #define ATA_IDENT_CYLINDERS    2}\par
00099 {\cf21 #define ATA_IDENT_HEADS        6}\par
00100 {\cf21 #define ATA_IDENT_SECTORS      12}\par
00101 {\cf21 #define ATA_IDENT_SERIAL       20}\par
00102 {\cf21 #define ATA_IDENT_MODEL        54}\par
00103 {\cf21 #define ATA_IDENT_CAPABILITIES 98}\par
00104 {\cf21 #define ATA_IDENT_FIELDVALID   106}\par
00105 {\cf21 #define ATA_IDENT_MAX_LBA      120}\par
00106 {\cf21 #define ATA_IDENT_COMMANDSETS  164}\par
00107 {\cf21 #define ATA_IDENT_MAX_LBA_EXT  200}\par
00108 \par
00109 \par
00110 {\cf21 #define ATA_SECTOR_SIZE    512}\par
00111 \par
00112 {\cf20 // Directions}\par
00113 {\cf21 #define ATA_READ     0x00}\par
00114 {\cf21 #define ATA_WRITE    0x01}\par
00115 \par
00116 {\cf20 // LBA(Linear Block Address) modes}\par
00117 {\cf21 #define LBA_MODE_48   0x02}\par
00118 {\cf21 #define LBA_MODE_28   0x01}\par
00119 {\cf21 #define LBA_MODE_CHS  0x00}\par
00120 \par
00121 {\cf20 /*}\par
00122 {\cf20 prim_channel_base_addr: Primary channel base address(0x1F0-0x1F7)}\par
00123 {\cf20 prim_channel_control_base_addr: Primary channel control base address(0x3F6)}\par
00124 {\cf20 sec_channel_base_addr: Secondary channel base address(0x170-0x177)}\par
00125 {\cf20 sec_channel_control_addr: Secondary channel control base address(0x376)}\par
00126 {\cf20 bus_master_addr: Bus master address(pass 0 for now)}\par
00127 {\cf20 */}\par
00128 {\cf18 void} ide_init(uint32_t prim_channel_base_addr,\par
00129               uint32_t prim_channel_control_base_addr,\par
00130               uint32_t sec_channel_base_addr, uint32_t sec_channel_control_addr,\par
00131               uint32_t bus_master_addr);\par
00132 \par
00133 {\cf18 void} ide_wait_irq();\par
00134 {\cf18 void} ide_irq();\par
00135 \par
00136 {\cf20 // start from lba = 0}\par
00137 int32_t ide_read_sectors(uint8_t drive, uint8_t num_sectors, uint32_t lba, uint32_t buffer);\par
00138 \par
00139 {\cf20 // start from lba = 0}\par
00140 int32_t ide_write_sectors(uint8_t drive, uint8_t num_sectors, uint32_t lba, uint32_t buffer);\par
00141 \par
00142 \par
00143 {\cf18 void} ata_init();\par
00144 int32_t ata_get_drive_by_model({\cf17 const} {\cf18 char} *model);\par
00145 uint32_t ide_get_size(int32_t drive);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sb16.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/experimental/sb16.h}
{\xe \v kernel/include/drivers/experimental/sb16.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SB16_DSP_H}\par
00002 {\cf21 #define SB16_DSP_H}\par
00003 \par
00004 {\cf20 // Ports}\par
00005 {\cf21 #define DSP_BASE        0x220}\par
00006 {\cf21 #define DSP_MIXER_PORT  0x224}\par
00007 {\cf21 #define DSP_MIXER_DATA  0x225}\par
00008 {\cf21 #define DSP_RESET       0x226}\par
00009 {\cf21 #define DSP_READ        0x22A}\par
00010 {\cf21 #define DSP_WRITE       0x22C}\par
00011 {\cf21 #define DSP_READ_STATUS 0x22E}\par
00012 {\cf21 #define DSP_16_ACK      0x22F}\par
00013 \par
00014 {\cf20 // DSP Write Command}\par
00015 {\cf21 #define DSP_W_SET_TIME  0x40}\par
00016 {\cf21 #define DSP_W_SET_SR    0x41}\par
00017 {\cf21 #define DSP_W_SPK_ON    0xD1}\par
00018 {\cf21 #define DSP_W_SPK_OFF   0xD3}\par
00019 {\cf21 #define DSP_W_STOP_8    0xD0}\par
00020 {\cf21 #define DSP_W_RESUME_8  0xD4}\par
00021 {\cf21 #define DSP_W_STOP_16   0xD5}\par
00022 {\cf21 #define DSP_W_RESUME_16 0xD6}\par
00023 {\cf21 #define DSP_W_GET_VER   0xE1}\par
00024 \par
00025 {\cf21 #define DSP_M_MAST_VOLU 0x22}\par
00026 {\cf21 #define DSP_M_SET_IRQ   0x80}\par
00027 \par
00028 {\cf21 #include <io/ports.h>}\par
00029 \par
00030 {\cf18 char} sb16_init();\par
00031 {\cf18 char} sb16_can_play_audio();\par
00032 {\cf18 char} sb16_dsp_reset();\par
00033 {\cf18 void} sb16_set_irq({\cf18 char} irq);\par
00034 {\cf18 void} sb16_turn_speaker_on();\par
00035 {\cf18 void} sb16_program_dma8({\cf18 char} channel, {\cf18 int} address, {\cf18 short} length);\par
00036 {\cf18 void} sb16_program_dma16({\cf18 char} channel, {\cf18 int} address, {\cf18 short} length);\par
00037 {\cf18 char} sb16_calculate_time_constant({\cf18 char} channels, {\cf18 short} sampling_rate);\par
00038 {\cf18 void} sb16_program({\cf18 short} sampling_rate, {\cf18 char} channels, {\cf18 char} eightbit, {\cf18 char} sign, {\cf18 short} length);\par
00039 {\cf18 void} sb16_set_master_volume({\cf18 char} left, {\cf18 char} right);\par
00040 {\cf18 void} sb16_play_audio({\cf18 char} *data, {\cf18 short} sampling_rate, {\cf18 char} channels, {\cf18 char} eightbit, {\cf18 char} sign, {\cf18 int} length);\par
00041 \par
00042 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
floppy.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/floppy.h}
{\xe \v kernel/include/drivers/floppy.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf20 // \'CF\'EE\'F0\'F2\'FB \'E2\'E2\'EE\'E4\'E0-\'E2\'FB\'E2\'EE\'E4\'E0}\par
00004 {\cf21 #define FDC_DOR (0x3f2)     }{\cf20 // \'D6\'E8\'F4\'F0\'EE\'E2\'EE\'E9 \'E2\'FB\'F5\'EE\'E4\'ED\'EE\'E9 \'F0\'E5\'E3\'E8\'F1\'F2\'F0}\par
00005 {\cf21 #define FDC_MSR (0x3f4)     }{\cf20 // \'CE\'F1\'ED\'EE\'E2\'ED\'EE\'E9 \'F0\'E5\'E3\'E8\'F1\'F2\'F0 \'F1\'F2\'E0\'F2\'F3\'F1\'E0 (\'E2\'E2\'EE\'E4)}\par
00006 {\cf21 #define FDC_DRS (0x3f4)     }{\cf20 // \'D0\'E5\'E3\'E8\'F1\'F2\'F0 \'E2\'FB\'E1\'EE\'F0\'E0 \'F1\'EA\'EE\'F0\'EE\'F1\'F2\'E8 \'EF\'E5\'F0\'E5\'E4\'E0\'F7\'E8 \'E4\'E0\'ED\'ED\'FB\'F5 (\'E2\'FB\'E2\'EE\'E4)}\par
00007 {\cf21 #define FDC_DATA (0x3f5)    }{\cf20 // \'D0\'E5\'E3\'E8\'F1\'F2\'F0 \'E4\'E0\'ED\'ED\'FB\'F5}\par
00008 {\cf21 #define FDC_DIR (0x3f7)     }{\cf20 // \'D0\'E5\'E3\'E8\'F1\'F2\'F0 \'F6\'E8\'F4\'F0\'EE\'E2\'EE\'E3\'EE \'E2\'E2\'EE\'E4\'E0 (\'E2\'E2\'EE\'E4)}\par
00009 {\cf21 #define FDC_CCR (0x3f7)     }{\cf20 // \'D0\'E5\'E3\'E8\'F1\'F2\'F0 \'F3\'EF\'F0\'E0\'E2\'EB\'E5\'ED\'E8\'FF \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E5\'E9 (\'E2\'FB\'E2\'EE\'E4)}\par
00010 {\cf21 #define CMD_SENSEI (0x08)   }{\cf20 // \'D1\'F2\'E0\'F2\'F3\'F1 \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'FF}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
keyboard.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/keyboard.h}
{\xe \v kernel/include/drivers/keyboard.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <sys/idt.h>}\par
00002 {\cf21 #include <stdint.h>}\par
00003 \par
00004 {\cf21 #define KEYBOARD_DATA_PORT 0x60}\par
00005 {\cf21 #define KEYBOARD_STATUS_PORT 0x64}\par
00006 {\cf21 #define ENTER_KEY_CODE 0x1C}\par
00007 \par
00008 {\cf17 extern} {\cf18 unsigned} {\cf18 char} keyboard_map[128];\par
00009 {\cf17 extern} int32_t input_type;\par
00010 {\cf18 void} keyboard_install({\cf18 void});\par
00011 {\cf18 void} keyboard_handler(regs_t *r);\par
00012 {\cf18 void} keyboard_handler_main(regs_t *r);\par
00013 {\cf18 char} *keyboard_gets();\par
00014 int32_t keyboard_getchar();\par
00015 int32_t keyboard_getscancode();\par
00016 int32_t keyLastInset();\par
00017 \par
00018 {\cf18 void} changeStageKeyboard(int32_t s);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mouse.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/mouse.h}
{\xe \v kernel/include/drivers/mouse.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef _MOUSE_H_}\par
00002 {\cf21 #define _MOUSE_H_}\par
00003 \par
00004 {\cf21 #include <kernel.h>}\par
00005 {\cf21 #include <stdbool.h>}\par
00006 {\cf21 #include <stdint.h>}\par
00007 \par
00008 {\cf21 #define MOUSE_RESET           0xFF}\par
00009 {\cf21 #define MOUSE_RESEND          0xFE}\par
00010 {\cf21 #define MOUSE_DEFAULTS        0xF6}\par
00011 {\cf21 #define MOUSE_STREAMING_OFF   0xF5}\par
00012 {\cf21 #define MOUSE_STREAMING_ON    0xF4}\par
00013 {\cf21 #define MOUSE_SET_SAMPLE_RATE 0xF3}\par
00014 {\cf21 #define MOUSE_GET_ID          0xF2}\par
00015 {\cf21 #define MOUSE_REQUEST_PACKET  0xEB}\par
00016 {\cf21 #define MOUSE_REQUEST_STATUS  0xE9}\par
00017 {\cf21 #define MOUSE_SET_RESOLUTION  0xE8}\par
00018 {\cf21 #define MOUSE_CONTROL_PORT    0x64}\par
00019 {\cf21 #define MOUSE_CMD_SEND        0xD4}\par
00020 {\cf21 #define MOUSE_DATA_PORT       0x60}\par
00021 \par
00022 {\cf20 // Mouse answers}\par
00023 {\cf21 #define MOUSE_ACK             0xFA}\par
00024 \par
00025 {\cf18 void} mouse_wait(uint8_t a_type);\par
00026 {\cf18 void} mouse_write(uint8_t a_write);\par
00027 uint8_t mouse_read();\par
00028 {\cf18 void} mouse_install();\par
00029 \par
00030 {\cf17 extern} uint8_t mouse_ready;\par
00031 \par
00032 {\cf17 extern} int32_t mouse_x;\par
00033 {\cf17 extern} int32_t mouse_y;\par
00034 \par
00035 {\cf17 extern} uint8_t mouse_b1;\par
00036 {\cf17 extern} uint8_t mouse_b2;\par
00037 {\cf17 extern} uint8_t mouse_b3;\par
00038 {\cf17 extern} uint8_t mouse_b4;\par
00039 {\cf17 extern} uint8_t mouse_b5;\par
00040 \par
00041 {\cf17 extern} {\cf18 int} mouse_wheel;\par
00042 \par
00043 {\cf18 int} mouse_getx();\par
00044 {\cf18 int} mouse_gety();\par
00045 {\cf18 int} mouse_getb1();\par
00046 {\cf18 int} mouse_getb2();\par
00047 {\cf18 int} mouse_getb3();\par
00048 {\cf18 int} mouse_getb4();\par
00049 {\cf18 int} mouse_getb5();\par
00050 \par
00051 {\cf21 #endif }{\cf20 // _MOUSE_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
net.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/net.h}
{\xe \v kernel/include/drivers/net.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #include <stdint.h>}\par
00004 \par
00005 \par
00006 \par
00007 {\cf21 #define ARP_REQUEST 1}\par
00008 {\cf21 #define ARP_REPLY 2}\par
00009 \par
00010 \par
00011 {\cf21 #define DHCP_REQUEST 1}\par
00012 {\cf21 #define DHCP_REPLY 2}\par
00013 {\cf21 #define DHCP_TRANSACTION_IDENTIFIER 0x55555555}\par
00014 \par
00015 \par
00016 {\cf21 #define ETHERNET_TYPE_ARP 0x0806}\par
00017 {\cf21 #define ETHERNET_TYPE_IP 0x0800}\par
00018 {\cf21 #define HARDWARE_TYPE_ETHERNET 0x01}\par
00019 \par
00020 {\cf21 #define IP_IPV4 4}\par
00021 {\cf21 #define IP_PACKET_NO_FRAGMENT 2}\par
00022 {\cf21 #define IP_IS_LAST_FRAGMENT 4}\par
00023 {\cf21 #define PROTOCOL_UDP 17}\par
00024 {\cf21 #define PROTOCOL_TCP 6}\par
00025 \par
00026 \par
00027 {\cf21 #define RTL8139_VENDOR_ID 0x10EC}\par
00028 {\cf21 #define RTL8139_ret_ID 0x8139}\par
00029 \par
00030 \par
00031 {\cf17 typedef} {\cf17 struct }ip_packet \{\par
00032     {\cf18 char} version_ihl_ptr[0];\par
00033     uint8_t version:4;\par
00034     uint8_t ihl:4;\par
00035     uint8_t tos;\par
00036     uint16_t length;\par
00037     uint16_t id;\par
00038     {\cf18 char} flags_fragment_ptr[0];\par
00039     uint8_t flags:3;\par
00040     uint8_t fragment_offset_high:5;\par
00041     uint8_t fragment_offset_low;\par
00042     uint8_t ttl;\par
00043     uint8_t protocol;\par
00044     uint16_t header_checksum;\par
00045     uint8_t src_ip[4];\par
00046     uint8_t dst_ip[4];\par
00047     uint8_t data[];\par
00048 \} __attribute__((packed)) ip_packet_t;\par
00049 \par
00050 {\cf17 typedef} {\cf17 struct }dhcp_packet \{\par
00051     uint8_t op;\par
00052     uint8_t hardware_type;\par
00053     uint8_t hardware_addr_len;\par
00054     uint8_t hops;\par
00055     uint32_t xid;\par
00056     uint16_t seconds;\par
00057     uint16_t flags; {\cf20 // may be broken}\par
00058     uint32_t client_ip; {\cf20 //}\par
00059     uint32_t your_ip;\par
00060     uint32_t server_ip;\par
00061     uint32_t gateway_ip;\par
00062     uint8_t client_hardware_addr[16];\par
00063     uint8_t server_name[64];\par
00064     uint8_t file[128];\par
00065     uint8_t options[64];\par
00066 \} __attribute__ ((packed)) dhcp_packet_t;\par
00067 \par
00068 {\cf17 typedef} {\cf17 struct }arp_packet \{\par
00069     uint16_t hardware_type;\par
00070     uint16_t protocol;\par
00071     uint8_t hardware_addr_len;\par
00072     uint8_t protocol_addr_len;\par
00073     uint16_t opcode;\par
00074     uint8_t src_hardware_addr[6];\par
00075     uint8_t src_protocol_addr[4];\par
00076     uint8_t dst_hardware_addr[6];\par
00077     uint8_t dst_protocol_addr[4];\par
00078 \} __attribute__((packed)) arp_packet_t;\par
00079 \par
00080 {\cf17 typedef} {\cf17 struct }arp_table_entry \{\par
00081     uint32_t ip_addr;\par
00082     uint64_t mac_addr;\par
00083 \} arp_table_entry_t;\par
00084 \par
00085 \par
00086 {\cf17 typedef} {\cf17 struct }ethernet_frame \{\par
00087   uint8_t dst_mac_addr[6];    {\cf20 // MAC \'E0\'E4\'F0\'E5\'F1 \'EF\'EE\'EB\'F3\'F7\'E0\'F2\'E5\'EB\'FF}\par
00088   uint8_t src_mac_addr[6];    {\cf20 // MAC \'E0\'E4\'F0\'E5\'F1 \'EE\'F2\'EF\'F0\'E0\'E2\'E8\'F2\'E5\'EB\'FF}\par
00089   uint16_t type;              {\cf20 // \'CF\'F0\'EE\'F2\'EE\'EA\'EE\'EB}\par
00090   uint8_t data[];             {\cf20 // \'C4\'E0\'ED\'ED\'FB\'E5}\par
00091 \} __attribute__((packed)) ethernet_frame_t;\par
00092 \par
00093 \par
00094 \par
00095 {\cf17 typedef} {\cf17 struct }RTL8139_dev \{\par
00096     uint8_t bar_type;\par
00097     uint16_t io_base;\par
00098     uint32_t mem_base;\par
00099     {\cf18 int} eeprom_exist;\par
00100     uint8_t mac_addr[6];\par
00101     {\cf18 char} * rx_buffer;\par
00102     {\cf18 int} tx_cur;\par
00103 \}RTL8139_dev_t;\par
00104 \par
00105 {\cf17 typedef} {\cf17 struct }udp_packet \{\par
00106     uint16_t src_port;\par
00107     uint16_t dst_port;\par
00108     uint16_t length;\par
00109     uint16_t checksum;\par
00110     uint8_t data[];\par
00111 \} __attribute__((packed)) udp_packet_t;\par
00112 \par
00113 \par
00114 \par
00115 uint16_t udp_calculate_checksum(udp_packet_t * packet);\par
00116 {\cf18 void} udp_send_packet(uint8_t * dst_ip, uint16_t src_port, uint16_t dst_port, {\cf18 void} * data, {\cf18 int} len);\par
00117 {\cf18 void} udp_handle_packet();\par
00118 \par
00119 \par
00120 {\cf18 int} gethostaddr({\cf18 char} * addr);\par
00121 {\cf18 void} dhcp_discover();\par
00122 {\cf18 void} dhcp_request(uint8_t * request_ip);\par
00123 {\cf18 void} dhcp_handle_packet(dhcp_packet_t * packet);\par
00124 {\cf18 void} * get_dhcp_options(dhcp_packet_t * packet, uint8_t type);\par
00125 {\cf18 void} make_dhcp_packet(dhcp_packet_t * packet, uint8_t msg_type, uint8_t * request_ip);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RTL8139.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/network/RTL8139.h}
{\xe \v kernel/include/drivers/network/RTL8139.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf18 void} RTL8139_init();\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pci.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/pci.h}
{\xe \v kernel/include/drivers/pci.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 \par
00004 {\cf21 #include <kernel.h>}\par
00005 {\cf21 #include <stdint.h>}\par
00006 \par
00007 {\cf20 // Ports}\par
00008 {\cf21 #define PCI_CONFIG_ADDRESS  0xCF8}\par
00009 {\cf21 #define PCI_CONFIG_DATA     0xCFC}\par
00010 \par
00011 {\cf20 // Config Address Register}\par
00012 \par
00013 {\cf20 // Offset}\par
00014 {\cf21 #define PCI_VENDOR_ID            0x00}\par
00015 {\cf21 #define PCI_DEVICE_ID            0x02}\par
00016 {\cf21 #define PCI_COMMAND              0x04}\par
00017 {\cf21 #define PCI_STATUS               0x06}\par
00018 {\cf21 #define PCI_REVISION_ID          0x08}\par
00019 {\cf21 #define PCI_PROG_IF              0x09}\par
00020 {\cf21 #define PCI_SUBCLASS             0x0a}\par
00021 {\cf21 #define PCI_CLASS                0x0b}\par
00022 {\cf21 #define PCI_CACHE_LINE_SIZE      0x0c}\par
00023 {\cf21 #define PCI_LATENCY_TIMER        0x0d}\par
00024 {\cf21 #define PCI_HEADER_TYPE          0x0e}\par
00025 {\cf21 #define PCI_BIST                 0x0f}\par
00026 {\cf21 #define PCI_BAR0                 0x10}\par
00027 {\cf21 #define PCI_BAR1                 0x14}\par
00028 {\cf21 #define PCI_BAR2                 0x18}\par
00029 {\cf21 #define PCI_BAR3                 0x1C}\par
00030 {\cf21 #define PCI_BAR4                 0x20}\par
00031 {\cf21 #define PCI_BAR5                 0x24}\par
00032 {\cf21 #define PCI_INTERRUPT_LINE       0x3C}\par
00033 {\cf21 #define PCI_SECONDARY_BUS        0x09}\par
00034 \par
00035 {\cf20 // Device type}\par
00036 {\cf21 #define PCI_HEADER_TYPE_DEVICE  0}\par
00037 {\cf21 #define PCI_HEADER_TYPE_BRIDGE  1}\par
00038 {\cf21 #define PCI_HEADER_TYPE_CARDBUS 2}\par
00039 {\cf21 #define PCI_TYPE_BRIDGE 0x0604}\par
00040 {\cf21 #define PCI_TYPE_SATA   0x0106}\par
00041 {\cf21 #define PCI_NONE 0xFFFF}\par
00042 \par
00043 \par
00044 {\cf21 #define DEVICE_PER_BUS           32}\par
00045 {\cf21 #define FUNCTION_PER_DEVICE      32}\par
00046 \par
00047 {\cf17 typedef} {\cf17 union }pci_dev \{\par
00048     uint32_t bits;\par
00049     {\cf17 struct }\{\par
00050         uint32_t always_zero    : 2;\par
00051         uint32_t field_num      : 6;\par
00052         uint32_t function_num   : 3;\par
00053         uint32_t device_num     : 5;\par
00054         uint32_t bus_num        : 8;\par
00055         uint32_t reserved       : 7;\par
00056         uint32_t enable         : 1;\par
00057     \};\par
00058 \} pci_dev_t;\par
00059 \par
00060 \par
00061 {\cf18 void} pci_init();\par
00062 pci_dev_t pci_scan_bus(uint16_t vendor_id, uint16_t device_id, uint32_t bus, int32_t device_type);\par
00063 pci_dev_t pci_get_device(uint16_t vendor_id, uint16_t device_id, int32_t device_type);\par
00064 uint32_t pci_read(pci_dev_t dev, uint32_t field);\par
00065 {\cf18 void} pci_write(pci_dev_t dev, uint32_t field, uint32_t value);\par
00066 {\cf18 void} checkAllBuses();\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ramdisk.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/ramdisk.h}
{\xe \v kernel/include/drivers/ramdisk.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 \par
00004 {\cf21 #include <drivers/vfs.h>}\par
00005 {\cf21 #include <stdbool.h>}\par
00006 {\cf21 #include <stdint.h>}\par
00007 \par
00008 {\cf20 /*}\par
00009 {\cf20     tar-fs \'E8\'E7 EOS }\par
00010 {\cf20 */}\par
00011 {\cf21 #define USTAR_NORMAL_FILE      '0'}\par
00012 {\cf21 #define USTAR_HARD_LINK        '1'}\par
00013 {\cf21 #define USTAR_SYMBOLIC_LINK    '2'}\par
00014 {\cf21 #define USTAR_CHARACTER_DEVICE '3'}\par
00015 {\cf21 #define USTAR_BLOCK_DEVICE     '4'}\par
00016 {\cf21 #define USTAR_DIRECTORY        '5'}\par
00017 {\cf21 #define USTAR_NAMED_PIPE       '6'}\par
00018 \par
00019 {\cf17 typedef} {\cf17 struct }\{\par
00020     {\cf18 char} fname[100];\par
00021     {\cf18 char} fmode[8];\par
00022 \par
00023     {\cf18 char} uid[8];\par
00024     {\cf18 char} gid[8];\par
00025 \par
00026     {\cf18 char} size[12];\par
00027     {\cf18 char} mtime[12];\par
00028 \par
00029     {\cf18 char} checksum[8];\par
00030     {\cf18 char} type;\par
00031 \par
00032     {\cf18 char} linkname[100];\par
00033     {\cf18 char} signature[6];\par
00034     {\cf18 char} version[2];\par
00035 \par
00036     {\cf18 char} user_name[32];\par
00037     {\cf18 char} group_name[32];\par
00038 \par
00039     {\cf18 char} device_major_number[8];\par
00040     {\cf18 char} device_minor_number[8];\par
00041 \par
00042     {\cf18 char} fprefix[155];\par
00043 \par
00044     {\cf18 char} reserved[12];\par
00045 \} __attribute__((packed)) ustar_file_t;\par
00046 \par
00047 int32_t oct2bin({\cf18 unsigned} {\cf18 char} *str, int32_t size);\par
00048 \par
00049 uint32_t tar_getsize({\cf17 const} {\cf18 char} *in);\par
00050 int32_t tar_lookup({\cf18 unsigned} {\cf18 char} *archive, {\cf18 char} *filename);\par
00051 \par
00052 uint32_t initrd_read({\cf18 char} *filename, int32_t offset, int32_t size, vfs_filesystem_t *u, {\cf18 void} *buffer);\par
00053 \par
00054 uint32_t initrd_file_exists({\cf18 char} *filename, vfs_filesystem_t *u);\par
00055 uint32_t initrd_get_filesize({\cf18 char} *filename);\par
00056 \par
00057 uint32_t initrd_is_dir({\cf18 char} *filename);\par
00058 \par
00059 {\cf18 void} initrd_list(int32_t argc, {\cf18 char} **arg);\par
00060 {\cf18 void} initrd_init(uint32_t begin, uint32_t end);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
time.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/time.h}
{\xe \v kernel/include/drivers/time.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #include <stdint.h>}\par
00004 \par
00005 {\cf17 struct }synapse_time \{\par
00006     {\cf18 unsigned} {\cf18 int} seconds;\par
00007     {\cf18 unsigned} {\cf18 int} minutes;\par
00008     {\cf18 unsigned} {\cf18 int} hours;\par
00009     {\cf18 unsigned} {\cf18 int} day;\par
00010     {\cf18 unsigned} {\cf18 int} month;\par
00011     {\cf18 unsigned} {\cf18 int} year;\par
00012     {\cf18 unsigned} {\cf18 int} century;\par
00013 \};\par
00014 \par
00015 {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 char} synapse_months[] = \{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\};\par
00016 {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 char} synapse_months_leap[] = \{31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\};\par
00017 \par
00018 {\cf17 static} {\cf17 const} {\cf18 char} **months_list = \{{\cf22 "January"}, {\cf22 "February"}, {\cf22 "March"}, {\cf22 "April"}, {\cf22 "May"}, {\cf22 "June"}, {\cf22 "July"},\par
00019                             {\cf22 "August"}, {\cf22 "September"}, {\cf22 "October"}, {\cf22 "November"}, {\cf22 "December"}\};\par
00020 {\cf17 static} {\cf17 const} {\cf18 char} **months_list_short = \{{\cf22 "Jan"}, {\cf22 "Feb"}, {\cf22 "Mar"}, {\cf22 "Apr"}, {\cf22 "May"}, {\cf22 "Jun"}, {\cf22 "Jul"}, {\cf22 "Aug"},\par
00021                                   {\cf22 "Sep"}, {\cf22 "Oct"}, {\cf22 "Nov"}, {\cf22 "Dec"}\};\par
00022 \par
00023 {\cf17 static} {\cf17 const} {\cf18 char} **weekday_list = \{{\cf22 "Monday"}, {\cf22 "Tuesday"}, {\cf22 "Wednesday"}, {\cf22 "Thursday"}, {\cf22 "Friday"}, {\cf22 "Saturday"}, {\cf22 "Sunday"}\};\par
00024 {\cf17 static} {\cf17 const} {\cf18 char} **weekday_list_short = \{{\cf22 "Mon"}, {\cf22 "Tue"}, {\cf22 "Wed"}, {\cf22 "Thu"}, {\cf22 "Fri"}, {\cf22 "Sat"}, {\cf22 "Sun"}\};\par
00025 \par
00026 {\cf18 void} init_task_manager();\par
00027 {\cf18 void} timer_install();\par
00028 {\cf18 void} timer_set_frequency(int32_t hz);\par
00029 uint32_t timer_get_ticks();\par
00030 {\cf18 void} sleep(uint32_t delay);\par
00031 {\cf18 void} sleep_ms(uint32_t delay);\par
00032 {\cf17 struct }synapse_time get_time();\par
00033 {\cf18 unsigned} {\cf18 int} synapse_time_to_unix({\cf17 struct} synapse_time ktime);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
vfs.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/drivers/vfs.h}
{\xe \v kernel/include/drivers/vfs.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <stdbool.h>}\par
00003 {\cf21 #include <stdint.h>}\par
00004 \par
00005 \par
00006 {\cf20 /*}\par
00007 {\cf20     0 - \'E4\'E8\'F1\'EA \'ED\'E5 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'F2\'F1\'FF, }\par
00008 {\cf20     1 - AHCI, }\par
00009 {\cf20     2 - ATA, }\par
00010 {\cf20     3 - \'D3\'F1\'F2\'F0\'EE\'E9\'F1\'F2\'E2\'EE \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF, }\par
00011 {\cf20     4 - \'C4\'F0\'F3\'E3\'EE\'E5}\par
00012 {\cf20 */}\par
00013 {\cf17 typedef} {\cf17 struct }vfs_storage_dev_t \{\par
00014     int32_t type; \par
00015 \par
00016     int32_t disk_id;\par
00017     int32_t partition_id;\par
00018 \par
00019     int32_t lba_start;\par
00020     int32_t lba_end;\par
00021 \par
00022     {\cf18 char} *name;\par
00023 \par
00024     uint32_t (*read) ({\cf18 int}*, {\cf18 unsigned} {\cf18 long} long, {\cf18 unsigned} {\cf18 long} long, uint16_t*);\par
00025     uint32_t (*write) ({\cf18 int}*, {\cf18 unsigned} {\cf18 long} long, {\cf18 unsigned} {\cf18 long} long, uint16_t*);\par
00026 \} vfs_storage_dev_t;\par
00027 \par
00028 {\cf20 // \'CD\'E5\'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'F4\'E0\'E9\'EB\'EE\'E2\'FB\'E5 \'F1\'E8\'F1\'F2\'E5\'EC\'FB}\par
00029 {\cf17 typedef} {\cf17 struct }vfs_filesystem_t \{\par
00030     int32_t fs_type; {\cf20 // 0 - tar-fs, 1 - ext2, 2 - ext3, 3 - ext4, 4 - fat32}\par
00031     int32_t block_size;\par
00032 \par
00033     vfs_storage_dev_t *dev;\par
00034 \} vfs_filesystem_t;\par
00035 \par
00036 {\cf20 // \'D1\'EE\'E4\'E5\'F0\'E6\'E8\'F2 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'E8 \'ED\'E0 \'ED\'E5\'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'EC\'E5\'F2\'EE\'E4\'FB \'F4\'E0\'E9\'EB\'EE\'E2\'EE\'E9 \'F1\'E8\'F1\'F2\'E5\'EC\'FB.}\par
00037 {\cf17 typedef} {\cf17 struct }vfs_filesystem_handles_t \{\par
00038     uint32_t (*read) ({\cf18 char} *fn, {\cf18 int}*, {\cf18 int}*, vfs_filesystem_t*, {\cf18 void}*);\par
00039     uint32_t (*write) ({\cf18 char} *fn, {\cf18 int}*, {\cf18 int}*, vfs_filesystem_t*, {\cf18 void}*);\par
00040 \par
00041     uint32_t (*readdir) ({\cf18 char}*, vfs_filesystem_t*, {\cf18 void}*);\par
00042 \par
00043     uint32_t (*mkfile) ({\cf18 char} *fn, {\cf18 char}*, vfs_filesystem_t*, uint16_t*);\par
00044     uint32_t (*mkdir) ({\cf18 char} *fn, {\cf18 char}*, vfs_filesystem_t*, uint16_t*);\par
00045 \par
00046     uint32_t (*rm) ({\cf18 char} *fn, vfs_filesystem_t*);\par
00047     uint32_t (*ls) ({\cf18 char} *fn, vfs_filesystem_t*);\par
00048 \par
00049     uint32_t (*get_size) ({\cf18 char} *fn, vfs_filesystem_t*);\par
00050     uint32_t (*exists) ({\cf18 char} *fn, vfs_filesystem_t*);\par
00051     uint32_t (*is_dir) ({\cf18 char} *fn, vfs_filesystem_t*);\par
00052 \} vfs_filesystem_handles_t;\par
00053 \par
00054 {\cf20 // \'D2\'EE\'F7\'EA\'E0 \'EC\'EE\'ED\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'E8\'FF VFS}\par
00055 {\cf17 typedef} {\cf17 struct }vfs_mount_info_t  \{\par
00056     {\cf18 char} *location;\par
00057     vfs_filesystem_t *fs;\par
00058     vfs_filesystem_handles_t *fs_handles;\par
00059 \} vfs_mount_info_t;\par
00060 \par
00061 {\cf18 void} vfs_init();\par
00062 \par
00063 {\cf18 void} vfs_mount_list();\par
00064 int32_t vfs_mount(vfs_storage_dev_t *dev, vfs_filesystem_handles_t *fs_handles, int32_t type, {\cf18 char} *location, int32_t block_size);\par
00065 int32_t vfs_mount_find({\cf18 char} *path, int32_t *filename_add);\par
00066 \par
00067 int32_t vfs_read({\cf17 const} {\cf18 char} *filename, int32_t offset, int32_t size, {\cf18 void} *buf);\par
00068 int32_t vfs_get_size({\cf17 const} {\cf18 char} *filename);\par
00069 int32_t vfs_write({\cf18 char} *filename, int32_t offset, int32_t size, {\cf18 void} *buf);\par
00070 \par
00071 int32_t vfs_mkdir({\cf18 char} *filename, {\cf18 char} *path, uint16_t perms);\par
00072 int32_t vfs_mkfile({\cf18 char} *filename, {\cf18 char} *path, uint16_t perms);\par
00073 \par
00074 int32_t vfs_list({\cf18 char} *path, {\cf18 void} *buf);\par
00075 int32_t vfs_rm({\cf18 char} *filename);\par
00076 \par
00077 int32_t vfs_exists({\cf17 const} {\cf18 char} *filename);\par
00078 int32_t vfs_is_dir({\cf18 char} *filename);\par
00079 \par
00080 {\cf18 void} vfs_get_file_name_from_path({\cf18 char} *fpath, {\cf18 char} *buf); \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
STFS.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/fs/STFS.h}
{\xe \v kernel/include/fs/STFS.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     \'C0\'E2\'F2\'EE\'F0: \'C0\'F0\'E5\'ED \'C5\'EB\'F7\'E8\'ED\'FF\'ED. \'D0\'E0\'F1\'EF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'FF\'E5\'F2\'F1\'FF \'EF\'EE \'EB\'E8\'F6\'E5\'ED\'E7\'E8\'E8 GNU GPL 3.0}\par
00003 {\cf20     \'C8\'EC\'FF \'F4\'E0\'E9\'EB\'E0:  STFS.h}\par
00004 {\cf20     \'CE\'EF\'E8\'F1\'E0\'ED\'E8\'E5:   \'C7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'E9 \'F4\'E0\'E9\'EB STFS}\par
00005 {\cf20 */}\par
00006 \par
00007 \par
00008 {\cf21 #pragma once}\par
00009 \par
00010 {\cf21 #include <stdint.h>}\par
00011 \par
00012 {\cf17 typedef} {\cf17 struct }blockinfo \{\par
00013     uint16_t    id;\par
00014     uint32_t    next_block;\par
00015 \} blockinfo_t __attribute__((packed));\par
00016 \par
00017 \par
00018 {\cf17 typedef} {\cf17 struct }STFS_file \{\par
00019     blockinfo_t block;\par
00020     uint8_t     magic;\par
00021     uint8_t     creator_id;\par
00022     uint8_t     editor_id;\par
00023     uint8_t     flags;\par
00024     uint8_t     folder_id;\par
00025     uint8_t     filename[256];\par
00026     uint32_t    create_time;\par
00027     uint32_t    edit_time;\par
00028     uint8_t     description[3820];\par
00029 \} STFS_file_t __attribute__((packed));\par
00030 \par
00031 {\cf17 typedef} {\cf17 struct }STFS_folder \{\par
00032     blockinfo_t block;\par
00033     uint8_t     magic;\par
00034     uint8_t     creator_id;\par
00035     uint8_t     editor_id;\par
00036     uint8_t     flags;\par
00037     uint8_t     folder_id;\par
00038     uint8_t     filename[256];\par
00039     uint32_t    create_time;\par
00040     uint32_t    edit_time;\par
00041     blockinfo_t file_array[625];\par
00042     uint8_t     description[170];\par
00043 \} STFS_folder_t __attribute__((packed));\par
00044 \par
00045 {\cf17 typedef} {\cf17 struct }STFS_block \{\par
00046     blockinfo_t block;\par
00047     uint8_t     data[4090];\par
00048 \} STFS_block_t __attribute__((packed));\par
00049 \par
00050 \par
00051 {\cf20 /*}\par
00052 {\cf20     \'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'E8\'F1\'EA\'E0 \'F1 STFS \'ED\'E0 1\'E3\'E1 1\'E3\'E1 (1 \'F1\'E5\'EA\'F2\'EE\'F0 = 512 \'E1\'E0\'E9\'F2, 1 \'E1\'EB\'EE\'EA = 4096 \'E1\'E0\'E9\'F2 \'E8\'EB\'E8 8 \'F1\'E5\'EA\'F2\'EE\'F0\'EE\'E2):}\par
00053 {\cf20     > 1 \'F1\'E5\'EA\'F2\'EE\'F0 - MBR}\par
00054 {\cf20     > 1 \'F1\'E5\'EA\'F2\'EE\'F0 - \'EC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'E5}\par
00055 {\cf20     > 32 \'F1\'E5\'EA\'F2\'EE\'F0\'EE\'E2 - \'F2\'E0\'E1\'EB\'E8\'F6\'E0 \'F1\'E2\'EE\'E1\'EE\'E4\'ED\'FB\'F5 \'E1\'EB\'EE\'EA\'EE\'E2 (\'EC\'E0\'EA\'F1\'E8\'EC\'F3\'EC: 131 072 \'E1\'EB\'EE\'EA\'E0, 65 535 \'F4\'E0\'E9\'EB\'E0)}\par
00056 {\cf20     > 2 097 118 \'F1\'E5\'EA\'F2\'EE\'F0\'EE\'E2 - \'E1\'EB\'EE\'EA\'E8}\par
00057 {\cf20 }\par
00058 {\cf20     \'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'EC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'F5:}\par
00059 {\cf20     > 5 \'E1\'E0\'E9\'F2 - \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'E9 0x90, 'S', 'T', 'F'. 'S'}\par
00060 {\cf20     > 3 \'E1\'E0\'E9\'F2\'E0 - \'E2\'E5\'F0\'F1\'E8\'FF, \'F2\'E5\'EA\'F3\'F9\'E0\'FF 0.1.0}\par
00061 {\cf20     > 4 \'E1\'E0\'E9\'F2\'E0 - \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'E1\'EB\'EE\'EA\'EE\'E2}\par
00062 {\cf20     > 500 \'E1\'E0\'E9\'F2 - \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5 \'F3\'F1\'F2\'F0\'EE\'E9\'F1\'F2\'E2\'E0}\par
00063 {\cf20 }\par
00064 {\cf20     \'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E1\'EB\'EE\'EA\'E0:}\par
00065 {\cf20     > 2 \'E1\'E0\'E9\'F2\'E0 - id \'F4\'E0\'E9\'EB\'E0  (\'EE\'F2 0 \'E4\'EE 65 535)}\par
00066 {\cf20     > 4 \'E1\'E0\'E9\'F2\'E0 - \'E0\'E4\'F0\'E5\'F1 \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E5\'E3\'EE \'E1\'EB\'EE\'EA\'E0 (\'EE\'F2 0 \'E4\'EE 4 294 967 295)}\par
00067 {\cf20     > 4090 \'E1\'E0\'E9\'F2 - \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5}\par
00068 {\cf20 }\par
00069 {\cf20     \'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'F4\'E0\'E9\'EB\'E0 (\'CC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'E5 1 \'F4\'E0\'E9\'EB\'E0 - 1 \'E1\'EB\'EE\'EA):}\par
00070 {\cf20     > 2 \'E1\'E0\'E9\'F2\'E0 - id \'F4\'E0\'E9\'EB\'E0  (\'EE\'F2 0 \'E4\'EE 65 535)}\par
00071 {\cf20     > 4 \'E1\'E0\'E9\'F2\'E0 - \'E0\'E4\'F0\'E5\'F1 \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E5\'E3\'EE \'E1\'EB\'EE\'EA\'E0 (\'EE\'F2 0 \'E4\'EE 4 294 967 295)}\par
00072 {\cf20     > 1 \'E1\'E0\'E9\'F2 \'EC\'E0\'E3\'E8\'F7\'E5\'F1\'EA\'EE\'E5 \'F7\'E8\'F1\'EB\'EE(0 - \'EF\'F0\'EE\'F1\'F2\'EE \'E1\'EB\'EE\'EA, 1 - \'F4\'E0\'E9\'EB, 2 - \'EF\'E0\'EF\'EA\'E0)}\par
00073 {\cf20     > 1 \'E1\'E0\'E9\'F2 - id \'EC\'EE\'E4\'F3\'EB\'FF \'F1\'EE\'E7\'E4\'E0\'E2\'F8\'E5\'E3\'EE \'F4\'E0\'E9\'EB}\par
00074 {\cf20     > 1 \'E1\'E0\'E9\'F2 - id \'EC\'EE\'E4\'F3\'EB\'FF \'E8\'E7\'EC\'E5\'ED\'E8\'E2\'F8\'E5\'E3\'EE \'F4\'E0\'E9\'EB}\par
00075 {\cf20     > 1 \'E1\'E0\'E9\'F2 - \'F4\'EB\'E0\'E3\'E8}\par
00076 {\cf20     > 2 \'E1\'E0\'E9\'F2\'E0 - id \'EF\'E0\'EF\'EA\'E8 \'E2 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'ED\'E0\'F5\'EE\'E4\'E8\'F2\'F1\'FF \'F4\'E0\'E9\'EB}\par
00077 {\cf20     > 256 \'E1\'E0\'E9\'F2 - \'E8\'EC\'FF \'F4\'E0\'E9\'EB\'E0}\par
00078 {\cf20     > 4 \'E1\'E0\'E9\'F2 - \'E4\'E0\'F2\'E0 \'F1\'EE\'E7\'E4\'E0\'ED\'E8\'FF (Unixtime)}\par
00079 {\cf20     > 4 \'E1\'E0\'E9\'F2 - \'E4\'E0\'F2\'E0 \'E8\'E7\'EC\'E5\'ED\'E5\'ED\'E8\'FF (Unixtime)}\par
00080 {\cf20     > 3 820 \'E1\'E0\'E9\'F2 - \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5}\par
00081 {\cf20 }\par
00082 {\cf20     \'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'EF\'E0\'EF\'EA\'E8 (\'CC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'E5 1 \'EF\'E0\'EF\'EA\'E8 - 1 \'E1\'EB\'EE\'EA):}\par
00083 {\cf20     > 2 \'E1\'E0\'E9\'F2\'E0 - id \'EF\'E0\'EF\'EA\'E8  (\'EE\'F2 0 \'E4\'EE 65 535)}\par
00084 {\cf20     > 4 \'E1\'E0\'E9\'F2\'E0 - \'E0\'E4\'F0\'E5\'F1 \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E5\'E3\'EE \'E1\'EB\'EE\'EA\'E0 (\'EE\'F2 0 \'E4\'EE 4 294 967 295)}\par
00085 {\cf20     > 1 \'E1\'E0\'E9\'F2 \'EC\'E0\'E3\'E8\'F7\'E5\'F1\'EA\'EE\'E5 \'F7\'E8\'F1\'EB\'EE(0 - \'EF\'F0\'EE\'F1\'F2\'EE \'E1\'EB\'EE\'EA, 1 - \'F4\'E0\'E9\'EB, 2 - \'EF\'E0\'EF\'EA\'E0)}\par
00086 {\cf20     > 1 \'E1\'E0\'E9\'F2 - id \'EC\'EE\'E4\'F3\'EB\'FF \'F1\'EE\'E7\'E4\'E0\'E2\'F8\'E5\'E3\'EE \'EF\'E0\'EF\'EA\'F3}\par
00087 {\cf20     > 1 \'E1\'E0\'E9\'F2 - id \'EC\'EE\'E4\'F3\'EB\'FF \'E8\'E7\'EC\'E5\'ED\'E8\'E2\'F8\'E5\'E3\'EE \'EF\'E0\'EF\'EA\'F3}\par
00088 {\cf20     > 1 \'E1\'E0\'E9\'F2 - \'F4\'EB\'E0\'E3\'E8}\par
00089 {\cf20     > 2 \'E1\'E0\'E9\'F2\'E0 - id \'EF\'E0\'EF\'EA\'E8 \'E2 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'ED\'E0\'F5\'EE\'E4\'E8\'F2\'F1\'FF \'EF\'E0\'EF\'EA\'E0}\par
00090 {\cf20     > 256 \'E1\'E0\'E9\'F2 - \'E8\'EC\'FF \'EF\'E0\'EF\'EA\'E8}\par
00091 {\cf20     > 4 \'E1\'E0\'E9\'F2 - \'E4\'E0\'F2\'E0 \'F1\'EE\'E7\'E4\'E0\'ED\'E8\'FF (Unixtime)}\par
00092 {\cf20     > 4 \'E1\'E0\'E9\'F2 - \'E4\'E0\'F2\'E0 \'E8\'E7\'EC\'E5\'ED\'E5\'ED\'E8\'FF (Unixtime)}\par
00093 {\cf20     > 3 750 \'E1\'E0\'E9\'F2 - \'EC\'E0\'F1\'F1\'E8\'E2 [id 2 \'E1\'E0\'E9\'F2\'E0, \'E0\'E4\'F0\'E5\'F1 \'E1\'EB\'EE\'EA\'E0 4 \'E1\'E0\'E9\'F2\'E0] \'F4\'E0\'E9\'EB\'EE\'E2 (625 \'F4\'E0\'E9\'EB\'EE\'E2 \'EC\'E0\'EA\'F1\'E8\'EC\'F3\'EC)}\par
00094 {\cf20     > 170 \'E1\'E0\'E9\'F2 - \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5}\par
00095 {\cf20 }\par
00096 {\cf20     \'C8\'F2\'EE\'E3 \'ED\'E0 \'F4\'E0\'E9\'EB \'F0\'E0\'E7\'EC\'E5\'F0\'EE\'EC 10\'EA\'E1 (40 960 \'E1\'E0\'E9\'F2):}\par
00097 {\cf20     > 1 \'E1\'EB\'EE\'EA \'EC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'E0}\par
00098 {\cf20     > 10 \'E1\'EB\'EE\'EA\'EE\'E2 \'E4\'E0\'ED\'ED\'FB\'F5}\par
00099 {\cf20     > \'C2\'F1\'E5\'E3\'EE 88 \'F1\'E5\'EA\'F2\'EE\'F0\'EE\'E2}\par
00100 {\cf20 }\par
00101 {\cf20     \'C8\'F2\'EE\'E3 \'ED\'E0 \'E4\'E8\'F1\'EA \'F0\'E0\'E7\'EC\'E5\'F0\'EE\'EC 1\'E3\'E1:}\par
00102 {\cf20     > \'C2\'F1\'E5\'E3\'EE 2 097 152 \'F1\'E5\'EA\'F2\'EE\'F0\'EE\'E2}\par
00103 {\cf20     > 34 \'F1\'E5\'EA\'F2\'EE\'F0\'E0 \'F1\'E8\'F1\'F2\'E5\'EC\'ED\'FB\'E5 (\'E7\'E0\'E3\'F0\'F3\'E7\'F7\'E8\'EA, \'E4\'E0\'ED\'ED\'FB\'E5 \'EE\'E1 \'F4\'E0\'E9\'EB\'EE\'E2\'EE\'E9 \'F1\'E8\'F1\'F2\'E5\'EC\'E5, \'F1\'E2\'EE\'E1\'EE\'E4\'ED\'FB\'E5 \'E1\'EB\'EE\'EA\'E8)}\par
00104 {\cf20     > \'D1\'E2\'EE\'E1\'EE\'E4\'ED\'EE 2 097 118 \'F1\'E5\'EA\'F2\'EE\'F0\'EE\'E2}\par
00105 {\cf20     > 262 139 \'E1\'EB\'EE\'EA\'E0 \'F1\'E2\'EE\'E1\'EE\'E4\'ED\'EE, \'FD\'F2\'EE 1 023,98 \'EC\'E5\'E3\'E0\'E1\'E0\'E9\'F2 }\par
00106 {\cf20 }\par
00107 {\cf20     \'C2\'E0\'E6\'ED\'EE:}\par
00108 {\cf20     > \'D4\'E0\'E9\'EB\'FB \'ED\'E5 \'EC\'EE\'E3\'F3\'F2 \'E8\'EC\'E5\'F2\'FC id \'EC\'E5\'ED\'E5\'E5 1}\par
00109 {\cf20     > \'C1\'EB\'EE\'EA/\'D4\'E0\'E9\'EB/\'CF\'E0\'EF\'EA\'E0 \'E8\'EC\'E5\'FE\'F9\'E8\'E5 id 0 - \'F3\'E4\'E0\'EB\'E5\'ED\'FB}\par
00110 {\cf20     > \'C5\'F1\'EB\'E8 \'E0\'E4\'F0\'E5\'F1 \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E5\'E3\'EE \'E1\'EB\'EE\'EA\'E0 - 0, \'F2\'EE \'FD\'F2\'EE \'EF\'EE\'F1\'EB\'E5\'E4\'ED\'E8\'E9 \'E1\'EB\'EE\'EA}\par
00111 {\cf20 */}\par
00112 34 - \'E1\'E0\'E7\'EE\'E2\'E0\'FF \'ED\'E0\'F1\'F2\'F0\'EE\'E9\'EA\'E0\par
00113 / - 8\par
00114 /bin/ - 8\par
00115 /bin/HelloWorld.sea - 8 + 8\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB kernel/include/io/imaging.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/io/imaging.h}
{\xe \v kernel/include/io/imaging.h}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F4\'F3\'ED\'EA\'F6\'E8\'E9 {\b imaging.h}. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'E4\'E0\'ED\'ED\'FB\'F5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DukeImageMeta}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF Duke. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b draw_from_file} (char *filename, int sx, int sy)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'FF \'EE\'F2\'F0\'E8\'F1\'EE\'E2\'EA\'E8 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DukeImageMeta} * {\b get_image_metadata} (char *filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E0\'E5\'F2 \'EC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF Duke. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F4\'F3\'ED\'EA\'F6\'E8\'E9 {\b imaging.h}. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'E2\'F2\'EE\'F0\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C0\'ED\'E4\'F0\'E5\'E9(\'C4\'E0\'E2\'E8\'E4) \'CF\'E0\'E2\'EB\'E5\'ED\'EA\'EE ({\f2 andrejpavlenko666@gmail.com}) \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.h}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v draw_from_file\:imaging.h}
{\xe \v imaging.h\:draw_from_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char draw_from_file (char *  {\i filename}, int  {\i sx}, int  {\i sy})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'FF \'EE\'F2\'F0\'E8\'F1\'EE\'E2\'EA\'E8 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{- \'C8\'EC\'FF \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sx} \cell }{- \'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 x \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sy} \cell }{- \'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 y \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0 - OK \par
1 - ERROR \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 36}}\par
}
{\xe \v get_image_metadata\:imaging.h}
{\xe \v imaging.h\:get_image_metadata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b DukeImageMeta} * get_image_metadata (char *  {\i filename})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E0\'E5\'F2 \'EC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF Duke. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{- \'C8\'EC\'FF \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'F3 \'F1 \'EC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'EC\'E8 \'EF\'F0\'E8 \'F3\'F1\'EF\'E5\'F5\'E5 \par
0 \'CF\'F0\'E8 \'EE\'F8\'E8\'E1\'EA\'E5 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
imaging.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/io/imaging.h}
{\xe \v kernel/include/io/imaging.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #ifndef IMAGING_H}\par
00008 {\cf21 #define IMAGING_H}\par
00009 \par
00018 {\cf17 struct }DukeImageMeta \{\par
00019     {\cf18 short} width;\par
00020     {\cf18 short} height;\par
00021     {\cf18 int}   data_length;\par
00022     {\cf18 char}  alpha;\par
00023 \};\par
00024 \par
00025 {\cf20 // Returns 0 if OK, 1 if ERR}\par
00026 {\cf18 char} draw_from_file({\cf18 char} *filename, {\cf18 int} sx, {\cf18 int} sy);\par
00027 {\cf17 struct }DukeImageMeta* get_image_metadata({\cf18 char} *filename);\par
00028 \par
00029 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ports.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/io/ports.h}
{\xe \v kernel/include/io/ports.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #include <stdint.h>}\par
00004 \par
00005 {\cf21 #define PORT_COM1 0x3f8}\par
00006 {\cf21 #define PORT_COM2 0x2F8}\par
00007 {\cf21 #define PORT_COM3 0x3E8}\par
00008 {\cf21 #define PORT_COM4 0x2E8}\par
00009 {\cf21 #define PORT_COM5 0x5F8}\par
00010 {\cf21 #define PORT_COM6 0x4F8}\par
00011 {\cf21 #define PORT_COM7 0x5E8}\par
00012 {\cf21 #define PORT_COM8 0x4E8}\par
00013 \par
00014 \par
00015 {\cf21 #define qemu_log(M, ...) qemu_printf("[LOG] (%s:%s:%d) "} M "\\n", __FILE__, __FUNCTION__, __LINE__, ##__VA_ARGS__)\par
00016     \par
00017 {\cf21 #define assert(condition) if (condition)\{                 \\}\par
00018 {\cf21     qemu_log("ASSERT FAIL"});                                   \\\par
00019     while(1);                                             \\\par
00020 \} \par
00021 \par
00022 {\cf21 #define unit_test(condition) if ((condition) > 0)\{                                     \\}\par
00023 {\cf21     qemu_printf("[TEST PASSED] (%s:%s:%d)\\n"}, __FILE__, __FUNCTION__, __LINE__); \\\par
00024 \} else \{                                                                         \\\par
00025     qemu_printf("[TEST FAILED] (%s:%s:%d)\\n", __FILE__, __FUNCTION__, __LINE__); \\\par
00026 \}\par
00027 \par
00028 {\cf21 #define outw(port, val) outs(port, val)}\par
00029 \par
00030 \par
00031 uint8_t inb(uint16_t port); {\cf20 // \'D7\'F2\'E5\'ED\'E8\'E5 \'E1\'E0\'E9\'F2\'E0 \'E8\'E7 \'EF\'EE\'F0\'F2\'E0}\par
00032 uint16_t ins(uint16_t _port);\par
00033 {\cf18 void} insl(uint16_t reg, uint32_t *buffer, int32_t quads);\par
00034 {\cf18 void} outsl(uint16_t reg, uint32_t *buffer, int32_t quads);\par
00035 int32_t com1_is_transmit_empty();\par
00036 {\cf18 int} is_com_port({\cf18 int} port);\par
00037 {\cf18 void} outb(uint16_t port, uint8_t  val); {\cf20 // \'C7\'E0\'EF\'E8\'F1\'FC \'E1\'E0\'E9\'F2\'E0 \'E2 \'EF\'EE\'F0\'F2}\par
00038 {\cf18 void} com1_write_char({\cf18 char} a);\par
00039 {\cf18 void} qemu_puts({\cf18 char} log_data[]);\par
00040 {\cf18 void} qemu_printf({\cf18 char} *text, ...);\par
00041 {\cf18 void} io_wait();\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tty.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/io/tty.h}
{\xe \v kernel/include/io/tty.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 \par
00004 {\cf21 #define VESA_WIDTH  framebuffer_width}\par
00005 {\cf21 #define VESA_HEIGHT framebuffer_height}\par
00006 \par
00007 {\cf17 typedef} {\cf17 struct }rgba_struct \{\par
00008     uint32_t r;\par
00009     uint32_t g;\par
00010     uint32_t b;\par
00011     uint32_t a;\par
00012 \} rgba_color;\par
00013 \par
00014 {\cf17 enum} colors  \{\par
00015     VESA_BLACK = 0x000000,\par
00016     VESA_BLUE = 0x0000AA,\par
00017     VESA_GREEN = 0x00AA00,\par
00018     VESA_CYAN = 0x00AAAA,\par
00019     VESA_RED = 0xAA0000,\par
00020     VESA_MAGENTA = 0xAA00AA,\par
00021     VESA_YELLOW = 0xAA5500,\par
00022     VESA_LIGHT_GREY = 0xAAAAAA,\par
00023     VESA_DARK_GREY = 0x555555,\par
00024     VESA_LIGHT_BLUE = 0x5555FF,\par
00025     VESA_LIGHT_GREEN = 0x55FF55,\par
00026     VESA_LIGHT_CYAN = 0x55FFFF,\par
00027     VESA_LIGHT_RED = 0xFF5555,\par
00028     VESA_LIGHT_MAGENTA = 0xFF55FF,\par
00029     VESA_LIGHT_YELLOW = 0xffff55,\par
00030     VESA_WHITE = 0xFFFFFF,\par
00031 \};\par
00032 \par
00033 {\cf17 typedef} {\cf17 struct }svga_mode_info \{\par
00034     uint16_t attributes;\par
00035     uint8_t windowA, windowB;\par
00036     uint16_t granularity;\par
00037     uint16_t windowSize;\par
00038     uint16_t segmentA, segmentB;\par
00039     uint32_t winFuncPtr;\par
00040     uint16_t pitch; \par
00041 \par
00042     uint16_t screen_width, screen_height;\par
00043     uint8_t wChar, yChar, planes, bpp, banks; \par
00044     uint8_t memoryModel, bankSize, imagePages;\par
00045     uint8_t reserved0;\par
00046 \par
00047     {\cf20 // Color masks}\par
00048     uint8_t readMask, redPosition;\par
00049     uint8_t greenMask, greenPosition; \par
00050     uint8_t blueMask, bluePosition;\par
00051     uint8_t reservedMask, reservedPosition;\par
00052     uint8_t directColorAttributes;\par
00053 \par
00054     uint32_t physbase;\par
00055     uint32_t offScreenMemOff;\par
00056     uint16_t offScreenMemSize;\par
00057     uint8_t reserved1[206];\par
00058 \} __attribute__ ((packed)) svga_mode_info_t;\par
00059 \par
00060 {\cf17 extern} {\cf17 volatile} uint8_t tty_feedback;\par
00061 \par
00062 \par
00063 {\cf18 void} tty_init();\par
00064 {\cf18 void} init_vbe(multiboot_info *mboot);\par
00065 {\cf18 void} tty_backspace();\par
00066 {\cf18 void} tty_printf({\cf18 char} *text, ...);\par
00067 {\cf18 void} tty_putchar({\cf18 char} c);\par
00068 {\cf18 void} set_line(int32_t x, int32_t y, int32_t xe, int32_t ye, uint32_t color);\par
00069 {\cf18 void} set_pixel(int32_t x, int32_t y, uint32_t color);\par
00070 {\cf18 void} tty_setcolor(int32_t color);\par
00071 {\cf18 void} draw_vga_character(uint8_t c, int32_t x, int32_t y, int32_t fg, int32_t bg, {\cf18 bool} bgon);\par
00072 {\cf18 void} create_back_framebuffer();\par
00073 {\cf18 void} setPosX(int32_t x);\par
00074 {\cf18 void} setPosY(int32_t y);\par
00075 int32_t getPosX();\par
00076 int32_t getPosY();\par
00077 uint32_t getWidthScreen();\par
00078 uint32_t getHeightScreen();\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tui.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/io/tui.h}
{\xe \v kernel/include/io/tui.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #define TUI_DEFAULT     0}\par
00004 {\cf21 #define TUI_ERROR_BOX   1}\par
00005 {\cf21 #define TUI_MENU_BOX    2}\par
00006 \par
00007 {\cf21 #define TUI_BASE_COLOR_HEAD     0xBABABA}\par
00008 {\cf21 #define TUI_BASE_COLOR_BODY     0xD6D2D0}\par
00009 {\cf21 #define TUI_BASE_COLOR_MAIN     0xFFFFFF}\par
00010 {\cf21 #define TUI_BASE_COLOR_ITEM     0x43ACE8}\par
00011 {\cf21 #define TUI_BASE_COLOR_FOOT     0xBABABA}\par
00012 {\cf21 #define TUI_BASE_COLOR_ERROR    0x8B4444}\par
00013 \par
00014 {\cf21 #define TUI_TEXT_COLOR_HEAD     0x000000}\par
00015 {\cf21 #define TUI_TEXT_COLOR_BODY     0x000000}\par
00016 {\cf21 #define TUI_TEXT_COLOR_ITEM     0xFFFFFF}\par
00017 {\cf21 #define TUI_TEXT_COLOR_FOOT     0x000000}\par
00018 {\cf21 #define TUI_TEXT_COLOR_ERROR    0xEBE7E7}\par
00019 \par
00020 {\cf18 bool} tui();\par
00021 {\cf20 // #bababa - \'F8\'E0\'EF\'EA\'E0}\par
00022 {\cf20 // #d6d2d0 - \'EE\'F1\'ED\'EE\'E2\'E0}\par
00023 {\cf20 // #43ace8 - \'CF\'F3\'ED\'EA\'F2}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
vgafnt.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/io/vgafnt.h}
{\xe \v kernel/include/io/vgafnt.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // This file was generated by bintoc utility}\par
00002 {\cf20 // Binary data from file "a_vga_font.fon"}\par
00003 \par
00004 {\cf21 #pragma once}\par
00005 {\cf21 #include <stdint.h>}\par
00006 \par
00007 {\cf17 extern} uint8_t vgafnt[4096];\par
00008 {\cf17 extern} int32_t vgafnt_size;\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
kernel.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/kernel.h}
{\xe \v kernel/include/kernel.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 \par
00004 \par
00005 {\cf21 #include <stddef.h>}\par
00006 {\cf21 #include <stdint.h>}\par
00007 {\cf21 #include <stdarg.h>}\par
00008 {\cf21 #include <stdbool.h>}\par
00009 \par
00010 {\cf21 #include <libk/stdio.h>}\par
00011 {\cf21 #include <libk/string.h>}\par
00012 {\cf21 #include <libk/stdlib.h>}\par
00013 {\cf21 #include <libk/list.h>}\par
00014 {\cf21 #include <libk/math.h>}\par
00015 \par
00016 {\cf21 #include <multyboot.h>}\par
00017 \par
00018 {\cf21 #include <mem/mem.h>}\par
00019 {\cf21 #include <mem/pmm.h>}\par
00020 {\cf21 #include <mem/vmm.h>}\par
00021 {\cf21 #include <mem/kheap.h>}\par
00022 \par
00023 {\cf21 #include <drivers/vfs.h>}\par
00024 {\cf21 #include <drivers/ramdisk.h>}\par
00025 {\cf21 #include <drivers/keyboard.h>}\par
00026 {\cf21 #include <drivers/pci.h>}\par
00027 {\cf21 #include <drivers/ata.h>}\par
00028 {\cf21 #include <drivers/time.h>}\par
00029 {\cf21 #include <drivers/net.h>}\par
00030 {\cf21 #include <drivers/floppy.h>}\par
00031 \par
00032 {\cf21 #include <io/tui.h>}\par
00033 {\cf21 #include <io/tty.h>}\par
00034 {\cf21 #include <io/vgafnt.h>}\par
00035 {\cf21 #include <io/ports.h>}\par
00036 \par
00037 {\cf21 #include <sys/cpuinfo.h>}\par
00038 {\cf21 #include <sys/system.h>}\par
00039 {\cf21 #include <sys/gdt.h>}\par
00040 {\cf21 #include <sys/idt.h>}\par
00041 {\cf21 #include <sys/tss.h>}\par
00042 {\cf21 #include <sys/syscalls.h>}\par
00043 {\cf21 #include <sys/elf.h>}\par
00044 \par
00045 {\cf21 #define VERSION_MAJOR   0       }{\cf20 // \'C2\'E5\'F0\'F1\'E8\'FF \'FF\'E4\'F0\'E0}\par
00046 {\cf21 #define VERSION_MINOR   2       }{\cf20 // \'CF\'F0\'E5-\'F0\'E5\'EB\'E8\'E7 }\par
00047 {\cf21 #define VERSION_PATCH   12       }{\cf20 // \'CF\'E0\'F2\'F7}\par
00048 {\cf21 #define ARCH_TYPE       "i386"}   {\cf20 // \'C0\'F0\'F5\'E8\'F2\'E5\'EA\'F2\'F3\'F0\'E0}\par
00049 \par
00050 {\cf21 #define COLOR_TEXT      VESA_LIGHT_GREY}\par
00051 {\cf21 #define COLOR_SYS_TEXT  VESA_LIGHT_CYAN}\par
00052 {\cf21 #define COLOR_SYS_PATH  VESA_LIGHT_GREEN}\par
00053 {\cf21 #define COLOR_ERROR     VESA_LIGHT_RED}\par
00054 {\cf21 #define COLOR_ALERT     VESA_LIGHT_YELLOW}\par
00055 \par
00056 {\cf21 #define isDistr         0   }{\cf20 // 0 - \'ED\'E5 \'E4\'E8\'F1\'F2\'F0\'E8\'E1\'F3\'F2\'E8\'E2, 1 - \'E4\'E8\'F1\'F2\'F0\'E8\'E1\'F3\'F2\'E8\'E2}\par
00057 {\cf21 #define DistrName       ""}  {\cf20 // \'C8\'EC\'FF \'E4\'E8\'F1\'F2\'F0\'E8\'E1\'F3\'F2\'E8\'E2\'E0}\par
00058 {\cf21 #define dVERSION_MAJOR  0   }{\cf20 // \'C2\'E5\'F0\'F1\'E8\'FF \'E4\'E8\'F1\'F2\'F0\'E8\'E1\'F3\'F2\'E8\'E2\'E0}\par
00059 {\cf21 #define dVERSION_MINOR  0   }{\cf20 // \'CF\'F0\'E5-\'F0\'E5\'EB\'E8\'E7 \'E4\'E8\'F1\'F2\'F0\'E8\'E1\'F3\'F2\'E8\'E2\'E0}\par
00060 {\cf21 #define dVERSION_PATCH  0   }{\cf20 // \'CF\'E0\'F2\'F7 \'E4\'E8\'F1\'F2\'F0\'E8\'E1\'F3\'F2\'E8\'E2\'E0}\par
00061 \par
00062 {\cf21 #define MULTIBOOT_BOOTLOADER_MAGIC              0x2BADB002}\par
00063 \par
00064 {\cf17 extern} uint32_t os_mode;\par
00065 {\cf17 extern} {\cf18 bool} multi_task;\par
00066 \par
00067 {\cf18 void} shell();\par
00068 {\cf18 void} sysinfo();\par
00069 {\cf18 void} sbf({\cf18 char} *src);\par
00070 {\cf18 void} cat({\cf18 char} *fname);\par
00071 {\cf18 void} cd({\cf18 char} *dname);\par
00072 pid_t add_task();\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
iso646.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/libk/iso646.h}
{\xe \v kernel/include/libk/iso646.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #ifndef __cplusplus}\par
00004 {\cf21 #define and    &&}\par
00005 {\cf21 #define and_eq &=}\par
00006 {\cf21 #define bitand &}\par
00007 {\cf21 #define bitor  |}\par
00008 {\cf21 #define compl  ~}\par
00009 {\cf21 #define not    !}\par
00010 {\cf21 #define not_eq !=}\par
00011 {\cf21 #define or     ||}\par
00012 {\cf21 #define or_eq  |=}\par
00013 {\cf21 #define xor    ^}\par
00014 {\cf21 #define xor_eq ^=}\par
00015 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
list.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/libk/list.h}
{\xe \v kernel/include/libk/list.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #include <stddef.h>}\par
00004 {\cf21 #include <stdint.h>}\par
00005 \par
00006 \par
00007 {\cf17 typedef} {\cf17 struct }list_item list_item_t;\par
00008 \par
00009 \par
00010 {\cf17 typedef} {\cf17 struct }\{\par
00011     list_item_t*    first; {\cf20 // \'D3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'ED\'E0 \'EF\'E5\'F0\'E2\'FB\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 }\par
00012     {\cf18 size_t}          count; {\cf20 // \'D7\'E8\'F1\'EB\'EE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'EE\'E2 \'E2 \'F1\'EF\'E8\'F1\'EA\'E5 }\par
00013 \} list_t;\par
00014 \par
00015 \par
00016 {\cf17 typedef} {\cf17 struct }list_item \{\par
00017     list_item_t*    prev; {\cf20 // \'CF\'F0\'E5\'E4\'FB\'E4\'F3\'F9\'E8\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 \'F1\'EF\'E8\'F1\'EA\'E0 }\par
00018     list_item_t*    next; {\cf20 // \'D1\'EB\'E5\'E4\'F3\'FE\'F9\'E8\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 \'F1\'EF\'E8\'F1\'EA\'E0 }\par
00019     list_t*         list; {\cf20 // \'D1\'EF\'E8\'F1\'EE\'EA \'EA\'EE\'F2\'EE\'F0\'EE\'EC\'F3 \'EF\'F0\'E8\'ED\'E0\'E4\'EB\'E5\'E6\'E8\'F2 \'E4\'E0\'ED\'ED\'FB\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 }\par
00020 \} list_item_t;\par
00021 \par
00022 \par
00023 {\cf18 void} list_init(list_t* list); {\cf20 //\'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'F1\'EF\'E8\'F1\'EA\'E0 }\par
00024 {\cf18 void} list_add(list_t* list, list_item_t* item); {\cf20 // \'C4\'EE\'E1\'E0\'E2\'EB\'E5\'ED\'E8\'E5 \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'E0 \'E2 \'F1\'EF\'E8\'F1\'EE\'EA }\par
00025 {\cf18 void} list_remove(list_item_t* item); {\cf20 // \'D3\'E4\'E0\'EB\'E5\'ED\'E8\'E5 \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'E0 \'E8\'E7 \'F1\'EF\'E8\'F1\'EA\'E0 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
math.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/libk/math.h}
{\xe \v kernel/include/libk/math.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #define LOG10_E 0.4342944819}\par
00004 {\cf21 #define CONST_E 2.718281828459045}\par
00005 \par
00006 {\cf21 #define MIN(_a, _b)                     \\}\par
00007 {\cf21 (\{                              \\}\par
00008 {\cf21     typeof(_a) __a = (_a);                  \\}\par
00009 {\cf21     typeof(_b) __b = (_b);                  \\}\par
00010 {\cf21     __a <= __b ? __a : __b;                 \\}\par
00011 {\cf21 \})}\par
00012 {\cf21 #define MAX(_a, _b)                     \\}\par
00013 {\cf21 (\{                              \\}\par
00014 {\cf21     typeof(_a) __a = (_a);                  \\}\par
00015 {\cf21     typeof(_b) __b = (_b);                  \\}\par
00016 {\cf21     __a >= __b ? __a : __b;                 \\}\par
00017 {\cf21 \})}\par
00018 \par
00019 {\cf20 // Rounding operations (efficient when n is a power of 2)}\par
00020 {\cf20 // Round down to the nearest multiple of n}\par
00021 {\cf21 #define ROUNDDOWN(a, n)                     \\}\par
00022 {\cf21 (\{                              \\}\par
00023 {\cf21     uint32_t __a = (uint32_t) (a);              \\}\par
00024 {\cf21     (typeof(a)) (__a - __a % (n));              \\}\par
00025 {\cf21 \})}\par
00026 {\cf20 // Round up to the nearest multiple of n}\par
00027 {\cf21 #define ROUNDUP(a, n)                       \\}\par
00028 {\cf21 (\{                              \\}\par
00029 {\cf21     uint32_t __n = (uint32_t) (n);              \\}\par
00030 {\cf21     (typeof(a)) (ROUNDDOWN((uint32_t) (a) + __n - 1, __n)); \\}\par
00031 {\cf21 \})}\par
00032 \par
00033 \par
00034 uint32_t pow(uint32_t base, uint32_t power);\par
00035 \par
00036 {\cf18 float} sqrt( {\cf18 float} x );\par
00037 \par
00038 {\cf18 float} powf( {\cf18 float} x, {\cf18 float} y );\par
00039 \par
00040 {\cf18 float} log10({\cf18 float} x);\par
00041 \par
00042 {\cf18 float} log({\cf18 float} x);\par
00043 \par
00044 {\cf18 float} logx({\cf18 float} x, {\cf18 float} base);\par
00045 \par
00046 {\cf18 float} exp({\cf18 float} x);\par
00047 \par
00048 {\cf17 static} {\cf17 const} {\cf18 double} powf_log_table[256] = \{\par
00049                                             0x1p+0, -0x0p+0,    {\cf20 // 1, -log2l(1)}\par
00050                                             0x1.fcp-1,  0x1.72c7ba20f7327p-7,   {\cf20 // 0.992188, -log2l(0.992188)}\par
00051                                             0x1.f80fe03f80fep-1,    0x1.715662c7f3dbcp-6,   {\cf20 // 0.984496, -log2l(0.984496)}\par
00052                                             0x1.f42f42f42f42fp-1,   0x1.13eea2b6545dfp-5,   {\cf20 // 0.976923, -log2l(0.976923)}\par
00053                                             0x1.f05dcd30dadecp-1,   0x1.6e7f0bd9710ddp-5,   {\cf20 // 0.969466, -log2l(0.969466)}\par
00054                                             0x1.ec9b26c9b26cap-1,   0x1.c85f25e12da51p-5,   {\cf20 // 0.962121, -log2l(0.962121)}\par
00055                                             0x1.e8e6fa39be8e7p-1,   0x1.10c8cd0c74414p-4,   {\cf20 // 0.954887, -log2l(0.954887)}\par
00056                                             0x1.e540f4898d5f8p-1,   0x1.3d0c813e48ep-4, {\cf20 // 0.947761, -log2l(0.947761)}\par
00057                                             0x1.e1a8c536fe1a9p-1,   0x1.68fbf5169e028p-4,   {\cf20 // 0.940741, -log2l(0.940741)}\par
00058                                             0x1.de1e1e1e1e1e2p-1,   0x1.949866f0b017bp-4,   {\cf20 // 0.933824, -log2l(0.933824)}\par
00059                                             0x1.daa0b3630957dp-1,   0x1.bfe30e28821cp-4,    {\cf20 // 0.927007, -log2l(0.927007)}\par
00060                                             0x1.d7303b5cc0ed7p-1,   0x1.eadd1b4ef9a1fp-4,   {\cf20 // 0.92029, -log2l(0.92029)}\par
00061                                             0x1.d3cc6e80ebbdbp-1,   0x1.0ac3dc2e0ca0cp-3,   {\cf20 // 0.913669, -log2l(0.913669)}\par
00062                                             0x1.d075075075075p-1,   0x1.1ff2046fb7116p-3,   {\cf20 // 0.907143, -log2l(0.907143)}\par
00063                                             0x1.cd29c244fe2f3p-1,   0x1.34f99517622aep-3,   {\cf20 // 0.900709, -log2l(0.900709)}\par
00064                                             0x1.c9ea5dbf193d5p-1,   0x1.49db19c99a54dp-3,   {\cf20 // 0.894366, -log2l(0.894366)}\par
00065                                             0x1.c6b699f5423cep-1,   0x1.5e971b3a4ee8p-3,    {\cf20 // 0.888112, -log2l(0.888112)}\par
00066                                             0x1.c38e38e38e38ep-1,   0x1.732e1f41ccdbap-3,   {\cf20 // 0.881944, -log2l(0.881944)}\par
00067                                             0x1.c070fe3c070fep-1,   0x1.87a0a8f0ff9b2p-3,   {\cf20 // 0.875862, -log2l(0.875862)}\par
00068                                             0x1.bd5eaf57abd5fp-1,   0x1.9bef38a4ffae5p-3,   {\cf20 // 0.869863, -log2l(0.869863)}\par
00069                                             0x1.ba5713280dee9p-1,   0x1.b01a4c19f6811p-3,   {\cf20 // 0.863946, -log2l(0.863946)}\par
00070                                             0x1.b759f2298375ap-1,   0x1.c4225e7d5e3c6p-3,   {\cf20 // 0.858108, -log2l(0.858108)}\par
00071                                             0x1.b4671655e7f24p-1,   0x1.d807e87fa4521p-3,   {\cf20 // 0.852349, -log2l(0.852349)}\par
00072                                             0x1.b17e4b17e4b18p-1,   0x1.ebcb6065350a2p-3,   {\cf20 // 0.846667, -log2l(0.846667)}\par
00073                                             0x1.ae9f5d3eba7d7p-1,   0x1.ff6d3a16f617fp-3,   {\cf20 // 0.84106, -log2l(0.84106)}\par
00074                                             0x1.abca1af286bcap-1,   0x1.0976f3991af9ep-2,   {\cf20 // 0.835526, -log2l(0.835526)}\par
00075                                             0x1.a8fe53a8fe53bp-1,   0x1.1326eb8c0aba3p-2,   {\cf20 // 0.830065, -log2l(0.830065)}\par
00076                                             0x1.a63bd81a98ef6p-1,   0x1.1cc6bb7e3870fp-2,   {\cf20 // 0.824675, -log2l(0.824675)}\par
00077                                             0x1.a3827a3827a38p-1,   0x1.265698fa26c0ap-2,   {\cf20 // 0.819355, -log2l(0.819355)}\par
00078                                             0x1.a0d20d20d20d2p-1,   0x1.2fd6b881e82d3p-2,   {\cf20 // 0.814103, -log2l(0.814103)}\par
00079                                             0x1.9e2a65187566cp-1,   0x1.39474d95e1649p-2,   {\cf20 // 0.808917, -log2l(0.808917)}\par
00080                                             0x1.9b8b577e61371p-1,   0x1.42a88abb54986p-2,   {\cf20 // 0.803797, -log2l(0.803797)}\par
00081                                             0x1.98f4bac46d7cp-1,    0x1.4bfaa182b7fe3p-2,   {\cf20 // 0.798742, -log2l(0.798742)}\par
00082                                             0x1.9666666666666p-1,   0x1.553dc28dd9724p-2,   {\cf20 // 0.79375, -log2l(0.79375)}\par
00083                                             0x1.93e032e1c9f02p-1,   0x1.5e721d95d124dp-2,   {\cf20 // 0.78882, -log2l(0.78882)}\par
00084                                             0x1.9161f9add3c0dp-1,   0x1.6797e170c5221p-2,   {\cf20 // 0.783951, -log2l(0.783951)}\par
00085                                             0x1.8eeb9533d4065p-1,   0x1.70af3c177f74p-2,    {\cf20 // 0.779141, -log2l(0.779141)}\par
00086                                             0x1.8c7ce0c7ce0c8p-1,   0x1.79b85aaad8878p-2,   {\cf20 // 0.77439, -log2l(0.77439)}\par
00087                                             0x1.8a15b8a15b8a1p-1,   0x1.82b36978f76d5p-2,   {\cf20 // 0.769697, -log2l(0.769697)}\par
00088                                             0x1.87b5f9d4d1bc2p-1,   0x1.8ba09402697edp-2,   {\cf20 // 0.76506, -log2l(0.76506)}\par
00089                                             0x1.855d824ca58e9p-1,   0x1.948004ff12dbfp-2,   {\cf20 // 0.760479, -log2l(0.760479)}\par
00090                                             0x1.830c30c30c30cp-1,   0x1.9d51e662f92a2p-2,   {\cf20 // 0.755952, -log2l(0.755952)}\par
00091                                             0x1.80c1e4bbd595fp-1,   0x1.a6166162e9ec8p-2,   {\cf20 // 0.751479, -log2l(0.751479)}\par
00092                                             0x1.7e7e7e7e7e7e8p-1,   0x1.aecd9e78fdbeap-2,   {\cf20 // 0.747059, -log2l(0.747059)}\par
00093                                             0x1.7c41df1077c42p-1,   0x1.b777c568f9ae2p-2,   {\cf20 // 0.74269, -log2l(0.74269)}\par
00094                                             0x1.7a0be82fa0be8p-1,   0x1.c014fd448fe3ap-2,   {\cf20 // 0.738372, -log2l(0.738372)}\par
00095                                             0x1.77dc7c4cf2aeap-1,   0x1.c8a56c6f80bcap-2,   {\cf20 // 0.734104, -log2l(0.734104)}\par
00096                                             0x1.75b37e875b37fp-1,   0x1.d12938a39d6fp-2,    {\cf20 // 0.729885, -log2l(0.729885)}\par
00097                                             0x1.7390d2a6c405ep-1,   0x1.d9a086f4ad416p-2,   {\cf20 // 0.725714, -log2l(0.725714)}\par
00098                                             0x1.71745d1745d17p-1,   0x1.e20b7bd4365a8p-2,   {\cf20 // 0.721591, -log2l(0.721591)}\par
00099                                             0x1.6f5e02e4850ffp-1,   0x1.ea6a3b152b1e6p-2,   {\cf20 // 0.717514, -log2l(0.717514)}\par
00100                                             0x1.6d4da9b536a6dp-1,   0x1.f2bce7ef7d06bp-2,   {\cf20 // 0.713483, -log2l(0.713483)}\par
00101                                             0x1.6b4337c6cb157p-1,   0x1.fb03a50395dbap-2,   {\cf20 // 0.709497, -log2l(0.709497)}\par
00102                                             0x1.693e93e93e93fp-1,   0x1.019f4a2edc134p-1,   {\cf20 // 0.705556, -log2l(0.705556)}\par
00103                                             0x1.673fa57b0cbabp-1,   0x1.05b6ebbca3d9ap-1,   {\cf20 // 0.701657, -log2l(0.701657)}\par
00104                                             0x1.6546546546546p-1,   0x1.09c8c7a1fd74cp-1,   {\cf20 // 0.697802, -log2l(0.697802)}\par
00105                                             0x1.63528917c80b3p-1,   0x1.0dd4ee107ae0ap-1,   {\cf20 // 0.693989, -log2l(0.693989)}\par
00106                                             0x1.61642c8590b21p-1,   0x1.11db6ef5e7873p-1,   {\cf20 // 0.690217, -log2l(0.690217)}\par
00107                                             0x1.5f7b282135f7bp-1,   0x1.15dc59fdc06b7p-1,   {\cf20 // 0.686486, -log2l(0.686486)}\par
00108                                             0x1.5d9765d9765d9p-1,   0x1.19d7be92a231p-1,    {\cf20 // 0.682796, -log2l(0.682796)}\par
00109                                             0x1.5bb8d015e75bcp-1,   0x1.1dcdabdfad537p-1,   {\cf20 // 0.679144, -log2l(0.679144)}\par
00110                                             0x1.59df51b3bea36p-1,   0x1.21be30d1e0ddbp-1,   {\cf20 // 0.675532, -log2l(0.675532)}\par
00111                                             0x1.580ad602b580bp-1,   0x1.25a95c196bef3p-1,   {\cf20 // 0.671958, -log2l(0.671958)}\par
00112                                             0x1.563b48c20563bp-1,   0x1.298f3c2af6595p-1,   {\cf20 // 0.668421, -log2l(0.668421)}\par
00113                                             0x1.5470961d7ca63p-1,   0x1.2d6fdf40e09c5p-1,   {\cf20 // 0.664921, -log2l(0.664921)}\par
00114                                             0x1.52aaaaaaaaaabp-1,   0x1.314b535c7b89ep-1,   {\cf20 // 0.661458, -log2l(0.661458)}\par
00115                                             0x1.50e97366227cbp-1,   0x1.3521a64737cf3p-1,   {\cf20 // 0.658031, -log2l(0.658031)}\par
00116                                             0x1.4f2cddb0d3225p-1,   0x1.38f2e593cda73p-1,   {\cf20 // 0.654639, -log2l(0.654639)}\par
00117                                             0x1.4d74d74d74d75p-1,   0x1.3cbf1e9f5cf2fp-1,   {\cf20 // 0.651282, -log2l(0.651282)}\par
00118                                             0x1.4bc14e5e0a72fp-1,   0x1.40865e9285f33p-1,   {\cf20 // 0.647959, -log2l(0.647959)}\par
00119                                             0x1.4a1231617641p-1,    0x1.4448b2627ade3p-1,   {\cf20 // 0.64467, -log2l(0.64467)}\par
00120                                             0x1.48676f31219dcp-1,   0x1.480626d20a876p-1,   {\cf20 // 0.641414, -log2l(0.641414)}\par
00121                                             0x1.46c0f6feb6ac6p-1,   0x1.4bbec872a4505p-1,   {\cf20 // 0.638191, -log2l(0.638191)}\par
00122                                             0x1.451eb851eb852p-1,   0x1.4f72a3a555958p-1,   {\cf20 // 0.635, -log2l(0.635)}\par
00123                                             0x1.4380a3065e3fbp-1,   0x1.5321c49bc0c91p-1,   {\cf20 // 0.631841, -log2l(0.631841)}\par
00124                                             0x1.41e6a74981447p-1,   0x1.56cc37590e6c5p-1,   {\cf20 // 0.628713, -log2l(0.628713)}\par
00125                                             0x1.4050b59897548p-1,   0x1.5a7207b2d815ap-1,   {\cf20 // 0.625616, -log2l(0.625616)}\par
00126                                             0x1.3ebebebebebecp-1,   0x1.5e1341520dbp-1, {\cf20 // 0.622549, -log2l(0.622549)}\par
00127                                             0x1.3d30b3d30b3d3p-1,   0x1.61afefb3d5201p-1,   {\cf20 // 0.619512, -log2l(0.619512)}\par
00128                                             0x1.3ba68636adfbp-1,    0x1.65481e2a6477bp-1,   {\cf20 // 0.616505, -log2l(0.616505)}\par
00129                                             0x1.3a2027932b48fp-1,   0x1.68dbd7ddd6e15p-1,   {\cf20 // 0.613527, -log2l(0.613527)}\par
00130                                             0x1.389d89d89d89ep-1,   0x1.6c6b27ccfc698p-1,   {\cf20 // 0.610577, -log2l(0.610577)}\par
00131                                             0x1.371e9f3c04e64p-1,   0x1.6ff618ce24cd7p-1,   {\cf20 // 0.607656, -log2l(0.607656)}\par
00132                                             0x1.35a35a35a35a3p-1,   0x1.737cb58fe5716p-1,   {\cf20 // 0.604762, -log2l(0.604762)}\par
00133                                             0x1.342bad7f64b39p-1,   0x1.76ff0899daa49p-1,   {\cf20 // 0.601896, -log2l(0.601896)}\par
00134                                             0x1.32b78c13521dp-1,    0x1.7a7d1c4d6452p-1,    {\cf20 // 0.599057, -log2l(0.599057)}\par
00135                                             0x1.3146e92a10d38p-1,   0x1.7df6fae65e424p-1,   {\cf20 // 0.596244, -log2l(0.596244)}\par
00136                                             0x1.2fd9b8396ba9ep-1,   0x1.816cae7bd40b1p-1,   {\cf20 // 0.593458, -log2l(0.593458)}\par
00137                                             0x1.2e6fecf2e6fedp-1,   0x1.84de4100b0ce2p-1,   {\cf20 // 0.590698, -log2l(0.590698)}\par
00138                                             0x1.2d097b425ed09p-1,   0x1.884bbc446ae3fp-1,   {\cf20 // 0.587963, -log2l(0.587963)}\par
00139                                             0x1.2ba6574cae996p-1,   0x1.8bb529f3ab8f3p-1,   {\cf20 // 0.585253, -log2l(0.585253)}\par
00140                                             0x1.2a46756e62a46p-1,   0x1.8f1a9398f2d58p-1,   {\cf20 // 0.582569, -log2l(0.582569)}\par
00141                                             0x1.28e9ca3a728eap-1,   0x1.927c029d3798ap-1,   {\cf20 // 0.579909, -log2l(0.579909)}\par
00142                                             0x1.27904a7904a79p-1,   0x1.95d980488409ap-1,   {\cf20 // 0.577273, -log2l(0.577273)}\par
00143                                             0x1.2639eb2639eb2p-1,   0x1.993315c28e8fbp-1,   {\cf20 // 0.574661, -log2l(0.574661)}\par
00144                                             0x1.24e6a171024e7p-1,   0x1.9c88cc134f3c3p-1,   {\cf20 // 0.572072, -log2l(0.572072)}\par
00145                                             0x1.239662b9f91cbp-1,   0x1.9fdaac2391e1cp-1,   {\cf20 // 0.569507, -log2l(0.569507)}\par
00146                                             0x1.2249249249249p-1,   0x1.a328bebd84e8p-1,    {\cf20 // 0.566964, -log2l(0.566964)}\par
00147                                             0x1.20fedcba98765p-1,   0x1.a6730c8d44efap-1,   {\cf20 // 0.564444, -log2l(0.564444)}\par
00148                                             0x1.1fb78121fb781p-1,   0x1.a9b99e21655ebp-1,   {\cf20 // 0.561947, -log2l(0.561947)}\par
00149                                             0x1.1e7307e4ef157p-1,   0x1.acfc7beb75e94p-1,   {\cf20 // 0.559471, -log2l(0.559471)}\par
00150                                             0x1.1d31674c59d31p-1,   0x1.b03bae40852ap-1,    {\cf20 // 0.557018, -log2l(0.557018)}\par
00151                                             0x1.1bf295cc93903p-1,   0x1.b3773d59a05ffp-1,   {\cf20 // 0.554585, -log2l(0.554585)}\par
00152                                             0x1.1ab68a0473c1bp-1,   0x1.b6af315450638p-1,   {\cf20 // 0.552174, -log2l(0.552174)}\par
00153                                             0x1.197d3abc65f4fp-1,   0x1.b9e3923313e58p-1,   {\cf20 // 0.549784, -log2l(0.549784)}\par
00154                                             0x1.18469ee58469fp-1,   0x1.bd1467ddd70a7p-1,   {\cf20 // 0.547414, -log2l(0.547414)}\par
00155                                             0x1.1712ad98b8957p-1,   0x1.c041ba2268731p-1,   {\cf20 // 0.545064, -log2l(0.545064)}\par
00156                                             0x1.15e15e15e15e1p-1,   0x1.c36b90b4ebc3ap-1,   {\cf20 // 0.542735, -log2l(0.542735)}\par
00157                                             0x1.14b2a7c2fee92p-1,   0x1.c691f33049bap-1,    {\cf20 // 0.540426, -log2l(0.540426)}\par
00158                                             0x1.1386822b63cbfp-1,   0x1.c9b4e9169de22p-1,   {\cf20 // 0.538136, -log2l(0.538136)}\par
00159                                             0x1.125ce4feeb7a1p-1,   0x1.ccd479d1a1f94p-1,   {\cf20 // 0.535865, -log2l(0.535865)}\par
00160                                             0x1.1135c81135c81p-1,   0x1.cff0acb3170e3p-1,   {\cf20 // 0.533613, -log2l(0.533613)}\par
00161                                             0x1.10112358e75d3p-1,   0x1.d30988f52c6d3p-1,   {\cf20 // 0.531381, -log2l(0.531381)}\par
00162                                             0x1.0eeeeeeeeeeefp-1,   0x1.d61f15bae4663p-1,   {\cf20 // 0.529167, -log2l(0.529167)}\par
00163                                             0x1.0dcf230dcf231p-1,   0x1.d9315a1076fa2p-1,   {\cf20 // 0.526971, -log2l(0.526971)}\par
00164                                             0x1.0cb1b810ecf57p-1,   0x1.dc405cebb27dcp-1,   {\cf20 // 0.524793, -log2l(0.524793)}\par
00165                                             0x1.0b96a673e2808p-1,   0x1.df4c252c5a3e1p-1,   {\cf20 // 0.522634, -log2l(0.522634)}\par
00166                                             0x1.0a7de6d1d6086p-1,   0x1.e254b99c83339p-1,   {\cf20 // 0.520492, -log2l(0.520492)}\par
00167                                             0x1.096771e4d528cp-1,   0x1.e55a20f0eecf9p-1,   {\cf20 // 0.518367, -log2l(0.518367)}\par
00168                                             0x1.0853408534085p-1,   0x1.e85c61c963f0dp-1,   {\cf20 // 0.51626, -log2l(0.51626)}\par
00169                                             0x1.07414ba8f0741p-1,   0x1.eb5b82b10609bp-1,   {\cf20 // 0.51417, -log2l(0.51417)}\par
00170                                             0x1.06318c6318c63p-1,   0x1.ee578a1eaa83fp-1,   {\cf20 // 0.512097, -log2l(0.512097)}\par
00171                                             0x1.0523fbe3367d7p-1,   0x1.f1507e752c6c8p-1,   {\cf20 // 0.51004, -log2l(0.51004)}\par
00172                                             0x1.04189374bc6a8p-1,   0x1.f4466603be71dp-1,   {\cf20 // 0.508, -log2l(0.508)}\par
00173                                             0x1.030f4c7e7859cp-1,   0x1.f73947063b3fdp-1,   {\cf20 // 0.505976, -log2l(0.505976)}\par
00174                                             0x1.0208208208208p-1,   0x1.fa2927a574422p-1,   {\cf20 // 0.503968, -log2l(0.503968)}\par
00175                                             0x1.0103091b51f5ep-1,   0x1.fd160df77ed7ap-1,   {\cf20 // 0.501976, -log2l(0.501976)}\par
00176                                             0x1p-1, 0x1p+0, {\cf20 // 0.5, -log2l(0.5)}\par
00177                                         \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stdalign.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/libk/stdalign.h}
{\xe \v kernel/include/libk/stdalign.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf20 // #define __alignas_is_defined 1 // TODO: need test}\par
00004 {\cf21 #define __alignof_is_defined 1}\par
00005 \par
00006 {\cf21 #ifndef __cplusplus}\par
00007 {\cf20 // #define alignas _Alignas // TODO: need test}\par
00008 {\cf21 #define alignof _Alignof}\par
00009 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stdbool.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/libk/stdbool.h}
{\xe \v kernel/include/libk/stdbool.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #define __bool_true_false_are_defined 1}\par
00004 \par
00005 {\cf21 #ifndef __cplusplus}\par
00006 {\cf21 #define bool _Bool}\par
00007 {\cf21 #define true 1}\par
00008 {\cf21 #define false 0}\par
00009 {\cf21 #elif defined(__GNUC__) && !defined(__STRICT_ANSI__)}\par
00010 {\cf21 #define _Bool bool}\par
00011 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stdint.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/libk/stdint.h}
{\xe \v kernel/include/libk/stdint.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf17 typedef}  {\cf18 unsigned} {\cf18 int}      size_t;\par
00004 \par
00005 {\cf17 typedef} {\cf18 signed} {\cf18 char}        int8_t;\par
00006 {\cf17 typedef} {\cf18 short}              int16_t;\par
00007 {\cf17 typedef} {\cf18 int}                int32_t;\par
00008 {\cf17 typedef} {\cf18 long} {\cf18 long}          int64_t;\par
00009 {\cf17 typedef} {\cf18 unsigned} {\cf18 char}      uint8_t;\par
00010 {\cf17 typedef} {\cf18 unsigned} {\cf18 short}     uint16_t;\par
00011 {\cf17 typedef} {\cf18 unsigned} {\cf18 int}       uint32_t;\par
00012 {\cf17 typedef} {\cf18 unsigned} {\cf18 long} {\cf18 long} uint64_t;\par
00013 \par
00014 {\cf17 typedef} {\cf18 signed} {\cf18 char}        int_least8_t;\par
00015 {\cf17 typedef} {\cf18 short}              int_least16_t;\par
00016 {\cf17 typedef} {\cf18 int}                int_least32_t;\par
00017 {\cf17 typedef} {\cf18 long} {\cf18 long}          int_least64_t;\par
00018 {\cf17 typedef} {\cf18 unsigned} {\cf18 char}      uint_least8_t;\par
00019 {\cf17 typedef} {\cf18 unsigned} {\cf18 short}     uint_least16_t;\par
00020 {\cf17 typedef} {\cf18 unsigned} {\cf18 int}       uint_least32_t;\par
00021 {\cf17 typedef} {\cf18 unsigned} {\cf18 long} {\cf18 long} uint_least64_t;\par
00022 \par
00023 {\cf20 // typedef signed char        int_fast8_t;}\par
00024 {\cf20 // typedef int                int_fast16_t;}\par
00025 {\cf20 // typedef int                int_fast32_t;}\par
00026 {\cf20 // typedef long long          int_fast64_t;}\par
00027 {\cf20 // typedef unsigned char      uint_fast8_t;}\par
00028 {\cf20 // typedef unsigned int       uint_fast16_t;}\par
00029 {\cf20 // typedef unsigned int       uint_fast32_t;}\par
00030 {\cf20 // typedef unsigned long long uint_fast64_t;}\par
00031 \par
00032 {\cf17 typedef} {\cf18 long} {\cf18 long}          intmax_t;\par
00033 {\cf17 typedef} {\cf18 unsigned} {\cf18 long} {\cf18 long} uintmax_t;\par
00034 \par
00035 {\cf21 #define INT8_MIN           (-127i8 - 1)}\par
00036 {\cf21 #define INT16_MIN          (-32767i16 - 1)}\par
00037 {\cf21 #define INT32_MIN          (-2147483647i32 - 1)}\par
00038 {\cf21 #define INT64_MIN          (-9223372036854775807i64 - 1)}\par
00039 {\cf21 #define INT8_MAX           127i8}\par
00040 {\cf21 #define INT16_MAX          32767i16}\par
00041 {\cf21 #define INT32_MAX          2147483647i32}\par
00042 {\cf21 #define INT64_MAX          9223372036854775807i64}\par
00043 {\cf21 #define UINT8_MAX          0xffui8}\par
00044 {\cf21 #define UINT16_MAX         0xffffui16}\par
00045 {\cf21 #define UINT32_MAX         0xffffffffui32}\par
00046 {\cf21 #define UINT64_MAX         0xffffffffffffffffui64}\par
00047 \par
00048 {\cf21 #define NULL               ((void *)0)}\par
00049 \par
00050 {\cf17 typedef} {\cf18 char}*              caddr_t;\par
00051 {\cf17 typedef} {\cf18 int}                timer_t;\par
00052 {\cf20 //typedef int                pid_t;}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stdio.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/libk/stdio.h}
{\xe \v kernel/include/libk/stdio.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #define EOF -1}\par
00004 {\cf21 #define SEEK_SET 1}\par
00005 {\cf21 #define SEEK_CUR 2}\par
00006 {\cf21 #define SEEK_END 3}\par
00007 \par
00008 {\cf21 #define STDIO_ERR_NO_FOUND      1   }{\cf20 // \'D4\'E0\'E9\'EB \'ED\'E5 \'ED\'E0\'E9\'E4\'E5\'ED}\par
00009 {\cf21 #define STDIO_ERR_MODE_ERROR    2   }{\cf20 // \'D0\'E5\'E6\'E8\'EC \'F0\'E0\'E1\'EE\'F2\'FB \'ED\'E5 \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'B8\'ED}\par
00010 {\cf21 #define STDIO_ERR_SIZE          3   }{\cf20 // \'D0\'E0\'E7\'EC\'E5\'F0 \'F4\'E0\'E9\'EB\'E0 \'E8\'EC\'E5\'E5\'F2 \'ED\'E5\'E4\'EE\'EF\'F3\'F1\'F2\'E8\'EC\'FB\'E9 \'F0\'E0\'E7\'EC\'E5\'F0}\par
00011 {\cf21 #define STDIO_ERR_NO_OPEN       4   }{\cf20 // \'D4\'E0\'E9\'EB \'ED\'E5 \'E1\'FB\'EB \'EE\'F2\'EA\'F0\'FB\'F2}\par
00012 \par
00013 {\cf17 typedef} {\cf17 struct }\{\par
00014     {\cf18 char}* path;\par
00015     int32_t size;\par
00016     uint32_t fmode;\par
00017     {\cf18 size_t} bufSize;\par
00018     {\cf18 char}* buf;\par
00019     {\cf18 bool} open;\par
00020     int64_t pos;\par
00021     uint32_t err;\par
00022 \} FILE;\par
00023 {\cf20 // \'CE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'EF\'F0\'E8\'ED\'F2\'EE\'E2}\par
00024 {\cf18 void} print_str({\cf18 char} str[]);\par
00025 {\cf18 void} putint({\cf17 const} {\cf18 int} i);\par
00026 {\cf18 void} puthex({\cf18 unsigned} {\cf18 int} i);\par
00027 {\cf18 void} putchar({\cf18 unsigned} {\cf18 char} ch);\par
00028 {\cf18 void} print({\cf18 char} *format, va_list args);\par
00029 {\cf18 void} prinf({\cf18 char} *text, ...);\par
00030 {\cf20 // \'D2\'E8\'EF\'FB \'EE\'F2\'EA\'F0\'FB\'F2\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0, \'F2\'E8\'EF \'F4\'EB\'E0\'E3\'EE\'E2 rw \'E8 \'F2.\'E4.}\par
00031 {\cf17 enum} FileOpenMode \{\par
00032     O_READ = 1,\par
00033     O_WRITE = 2,\par
00034     O_CREATE = 4,\par
00035     O_APPEND = 8,\par
00036     O_TRUNC = 16,\par
00037 \};\par
00038 \par
00039 FILE* fopen({\cf17 const} {\cf18 char}* filename, {\cf17 const} {\cf18 char}* mode);\par
00040 {\cf18 void} fclose(FILE *stream);\par
00041 {\cf18 char}* fread(FILE* stream);\par
00042 int64_t ftell(FILE* stream);\par
00043 int32_t fsize(FILE *stream);\par
00044 int64_t fseek(FILE* stream, int64_t offset, uint32_t whence);\par
00045 {\cf18 void} rewind(FILE *stream);\par
00046 {\cf18 void} perror(FILE* stream,{\cf18 char}* s);\par
00047 uint32_t ferror(FILE* stream);\par
00048 {\cf18 void} fsetpos(FILE* stream, int64_t pos);\par
00049 int64_t fgetpos(FILE* stream);\par
00050 {\cf18 void} fdebuginfo(FILE* stream);\par
00051 \par
00052 {\cf20 //size_t fread(FILE* stream, char* ptr, size_t size, size_t nmemb);}\par
00053 {\cf18 size_t} fwrite({\cf17 const} {\cf18 void} *ptr, {\cf18 size_t} size, {\cf18 size_t} count, FILE *stream);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stdlib.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/libk/stdlib.h}
{\xe \v kernel/include/libk/stdlib.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf18 void}* calloc({\cf18 size_t} nmemb, {\cf18 size_t} size);\par
00003 int32_t itoa(int32_t n, {\cf18 char} *buffer);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stdnoreturn.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/libk/stdnoreturn.h}
{\xe \v kernel/include/libk/stdnoreturn.h}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #define __noreturn_is_defined 1}\par
00004 \par
00005 {\cf21 #ifndef __cplusplus}\par
00006 {\cf21 #define noreturn _Noreturn}\par
00007 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
string.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/libk/string.h}
{\xe \v kernel/include/libk/string.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <libk/stdint.h>}\par
00003 \par
00004 {\cf18 size_t} strlen({\cf17 const} {\cf18 char} *str);\par
00005 {\cf18 void} *memcpy({\cf18 void} *destination, {\cf17 const} {\cf18 void} *source, {\cf18 size_t} n);\par
00006 {\cf18 void} *memset({\cf18 void} *destination, {\cf18 int} c, {\cf18 size_t} n);\par
00007 {\cf18 int} strcmp({\cf17 const} {\cf18 char} *str1, {\cf17 const} {\cf18 char} *str2);{\cf18 char} *strcpy({\cf18 char} *dest, {\cf17 const} {\cf18 char} *src);\par
00008 {\cf18 int} memcmp({\cf17 const} {\cf18 void} *s1, {\cf17 const} {\cf18 void} *s2, {\cf18 size_t} n);\par
00009 {\cf18 size_t} str_bksp({\cf18 char} *str, {\cf18 char} c);\par
00010 {\cf18 char} *strpbrk({\cf17 const} {\cf18 char} *s, {\cf17 const} {\cf18 char} *accept);\par
00011 {\cf18 size_t} strspn({\cf17 const} {\cf18 char} *s, {\cf17 const} {\cf18 char} *accept);\par
00012 {\cf18 int} strncmp({\cf17 const} {\cf18 char} *s1, {\cf17 const} {\cf18 char} *s2, {\cf18 size_t} num);\par
00013 {\cf18 char} *strtok({\cf18 char} *s, {\cf17 const} {\cf18 char} *delim);\par
00014 {\cf18 char} *strcat({\cf18 char} *s, {\cf17 const} {\cf18 char} *t);\par
00015 \par
00016 int32_t atoi({\cf17 const} {\cf18 char}*);\par
00017 \par
00018 int32_t memcmp({\cf17 const} {\cf18 void}*, {\cf17 const} {\cf18 void}*, {\cf18 size_t});\par
00019 {\cf18 void}* memmove({\cf18 void}* , {\cf18 void}* , {\cf18 size_t});\par
00020 {\cf18 void} *memset({\cf18 void} *destination, int32_t c, {\cf18 size_t} n);\par
00021 {\cf18 void}* memcpy({\cf18 void}*, {\cf17 const} {\cf18 void}*, {\cf18 size_t});\par
00022 {\cf18 void} substr({\cf18 char}* dest, {\cf18 char}* source, {\cf18 int} from, {\cf18 int} length);\par
00023 {\cf18 char} *strchr({\cf17 const} {\cf18 char} *_s, {\cf18 int} _c);\par
00024 {\cf18 char} *strstr({\cf17 const} {\cf18 char} *_haystack, {\cf17 const} {\cf18 char} *_needle);\par
00025 {\cf18 void} strtolower({\cf18 char}* as);\par
00026 {\cf18 void} strtoupper({\cf18 char}* as);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
kheap.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/mem/kheap.h}
{\xe \v kernel/include/mem/kheap.h}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00002 {\cf21 #include <stdbool.h>}\par
00003 {\cf21 #include <stdint.h>}\par
00004 \par
00005 {\cf17 typedef} {\cf17 struct }__attribute__((packed)) kheap_item \{ \par
00006     {\cf17 struct }kheap_item *next;\par
00007     uint32_t size;\par
00008     {\cf18 unsigned} {\cf18 char} used;\par
00009 \} kheap_item;\par
00010 \par
00011 {\cf18 void} kheap_init();\par
00012 \par
00013 {\cf18 void} *kheap_morecore(uint32_t size);\par
00014 int32_t kheap_free({\cf18 void} *address);\par
00015 {\cf18 void} *kheap_malloc(uint32_t size);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mem.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/mem/mem.h}
{\xe \v kernel/include/mem/mem.h}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <stdint.h>}\par
00003 \par
00004 {\cf20 // \'CA\'EE\'ED\'F1\'F2\'E0\'ED\'F2\'FB \'EA \'E3\'F0\'E0\'ED\'E8\'F6\'E0\'EC \'EF\'E0\'EC\'FF\'F2\'E8}\par
00005 {\cf21 #define KERNEL_START_PADDR ((uint32_t) &kernel_phys_start)}\par
00006 {\cf21 #define KERNEL_END_PADDR   ((uint32_t) &kernel_phys_end)}\par
00007 {\cf21 #define KERNEL_SIZE        (KERNEL_END_PADDR - KERNEL_START_PADDR)}\par
00008 \par
00009 {\cf21 #define KERNEL_START_VADDR ((uint32_t) &kernel_virt_start)}\par
00010 {\cf21 #define KERNEL_END_VADDR   ((uint32_t) &kernel_virt_end)}\par
00011 \par
00012 {\cf21 #define KERNEL_PHYS_MAP_START kernel_phys_map_start}\par
00013 {\cf21 #define KERNEL_PHYS_MAP_END   kernel_phys_map_end}\par
00014 {\cf21 #define KERNEL_PHYS_MAP_SIZE  kernel_phys_map_end - kernel_phys_map_start;}\par
00015 \par
00016 {\cf20 // \'CA\'EE\'ED\'F1\'F2\'E0\'ED\'F2\'FB \'E4\'EB\'FF \'EC\'E5\'ED\'E5\'E4\'E6\'E5\'F0\'E0 \'F4\'E8\'E7\'E8\'F7\'E5\'F1\'EA\'EE\'E9 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00017 {\cf21 #define PHYS_BLOCKS_PER_BYTE 8}\par
00018 {\cf21 #define PHYS_BLOCK_SIZE      4096}\par
00019 \par
00020 {\cf20 // \'CA\'EE\'ED\'F1\'F2\'E0\'ED\'F2\'FB \'E4\'EB\'FF \'EC\'E5\'ED\'E5\'E4\'E6\'E5\'F0\'E0 \'E2\'E8\'F0\'F2\'F3\'E0\'EB\'FC\'ED\'EE\'E9 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00021 {\cf21 #define TEMP_PAGE_ADDR  0xC03FF000 }\par
00022 {\cf21 #define PAGES_PER_TABLE 1024}\par
00023 {\cf21 #define PAGES_PER_DIR   1024}\par
00024 {\cf21 #define PAGE_SIZE       4096}\par
00025 {\cf21 #define PAGE_ENTRIES    1024}\par
00026 \par
00027 {\cf20 // \'CA\'EE\'ED\'F1\'F2\'E0\'ED\'F2\'FB \'E4\'EB\'FF \'EC\'E5\'ED\'E5\'E4\'E6\'E5\'F0\'E0 \'EA\'F3\'F7\'E8 \'FF\'E4\'F0\'E0 }\par
00028 {\cf21 #define KHEAP_START_VADDR 0xC0500000 }{\cf20 // \'C8\'C7\'CC\'C5\'CD\'C8\'D2\'DC \'C5\'D1\'CB\'C8 \'D0\'C0\'C7\'CC\'C5\'D0 \'DF\'C4\'D0\'C0 \'C1\'CE\'CB\'C5\'C5 4MB}\par
00029 \par
00030 {\cf20 // \'CA\'EE\'ED\'F1\'F2\'E0\'ED\'F2\'FB \'E4\'EB\'FF \'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'F2\'E5\'EB\'FC\'F1\'EA\'EE\'E9 \'EA\'F3\'F7\'E8}\par
00031 {\cf21 #define UHEAP_START_VADDR 0x20000000 }\par
00032 \par
00033 {\cf21 #define ALIGN_BLOCK(addr) (addr) - ((addr) % PHYS_BLOCK_SIZE);}\par
00034 \par
00035 {\cf17 extern} uint32_t kernel_phys_start;\par
00036 {\cf17 extern} uint32_t kernel_phys_end;\par
00037 {\cf17 extern} uint32_t kernel_virt_start;\par
00038 {\cf17 extern} uint32_t kernel_virt_end;\par
00039 \par
00040 {\cf17 extern} uint32_t kernel_phys_map_start;\par
00041 {\cf17 extern} uint32_t kernel_phys_map_end;\par
00042 \par
00043 {\cf17 typedef} uint32_t virtual_addr_t;\par
00044 {\cf17 typedef} uint32_t physical_addres_t;\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pmm.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/mem/pmm.h}
{\xe \v kernel/include/mem/pmm.h}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <mem/mem.h>}\par
00002 \par
00003 {\cf18 void} pmm_init({\cf17 struct} multiboot_info *mboot_info);\par
00004 physical_addres_t pmm_alloc_block();\par
00005 {\cf18 void} pmm_free_block(physical_addres_t addr);\par
00006 {\cf18 void} update_phys_memory_bitmap_addres(physical_addres_t addr);\par
00007 \par
00008 uint64_t getInstalledRam();\par
00009 uint64_t getAvailableRam();\par
00010 uint64_t getUsedRam();\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
vmm.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/mem/vmm.h}
{\xe \v kernel/include/mem/vmm.h}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <mem/mem.h>}\par
00002 \par
00003 {\cf21 #include <stdbool.h>}\par
00004 {\cf21 #include <stdint.h>}\par
00005 \par
00006 {\cf17 typedef} uint32_t page_table_entry;\par
00007 {\cf17 typedef} uint32_t page_dir_entry;\par
00008 \par
00009 \par
00010 {\cf17 typedef} {\cf17 struct }__attribute__((aligned(4096))) page_table \{\par
00011     page_table_entry entries[PAGES_PER_TABLE];\par
00012 \} page_table;\par
00013 \par
00014 {\cf17 typedef} {\cf17 struct }__attribute__((aligned(4096))) page_directory \{\par
00015     page_dir_entry entries[PAGES_PER_DIR];\par
00016     {\cf20 // We need a table that contains virtual address, so that we can actually get to the tables}\par
00017     page_table * ref_tables[1024];\par
00018 \} page_directory;\par
00019 \par
00020 \par
00021 \par
00022 {\cf17 enum} PAGE_PTE_FLAGS \{\par
00023     I86_PTE_PRESENT       = 1,\par
00024     I86_PTE_WRITABLE      = 2,\par
00025     I86_PTE_USER          = 4,\par
00026     I86_PTE_WRITETHOUGH   = 8,\par
00027     I86_PTE_NOT_CACHEABLE = 0x10,\par
00028     I86_PTE_ACCESSED      = 0x20,\par
00029     I86_PTE_DIRTY         = 0x40,\par
00030     I86_PTE_PAT           = 0x80,\par
00031     I86_PTE_CPU_GLOBAL    = 0x100,\par
00032     I86_PTE_LV4_GLOBAL    = 0x200,\par
00033     I86_PTE_FRAME         = 0x7FFFF000\par
00034 \};\par
00035 \par
00036 {\cf17 enum} PAGE_PDE_FLAGS \{\par
00037     I86_PDE_PRESENT    = 1,\par
00038     I86_PDE_WRITABLE   = 2,\par
00039     I86_PDE_USER       = 4,\par
00040     I86_PDE_PWT        = 8,\par
00041     I86_PDE_PCD        = 0x10,\par
00042     I86_PDE_ACCESSED   = 0x20,\par
00043     I86_PDE_DIRTY      = 0x40,\par
00044     I86_PDE_4MB        = 0x80,\par
00045     I86_PDE_CPU_GLOBAL = 0x100,\par
00046     I86_PDE_LV4_GLOBAL = 0x200,\par
00047     I86_PDE_FRAME      = 0x7FFFF000\par
00048 \};\par
00049 \par
00050 {\cf21 #define PAGE_ALIGN_DOWN(x)     ((x) & -PAGE_SIZE)}\par
00051 {\cf21 #define PAGE_ALIGN_UP(address) (((address) + PAGE_SIZE - 1) & ~(PAGE_SIZE - 1) )}\par
00052 \par
00053 {\cf21 #define PAGE_DIRECTORY_INDEX(x) (((x) >> 22) & 0x3FF)}\par
00054 {\cf21 #define PAGE_TABLE_INDEX(x)     (((x) >> 12) & 0x3FF)}\par
00055 \par
00056 {\cf21 #define PAGE_GET_TABLE_ADDRESS(x)    (*x & ~0xFFF) }\par
00057 {\cf21 #define PAGE_GET_physical_addres_tESS(x) (*x & ~0xFFF) }\par
00058 \par
00059 {\cf21 #define GET_PDE(v) (page_dir_entry*) (0xFFFFF000 +  (v >> 22) * 4) }\par
00060 {\cf21 #define GET_PTE(v) (page_table_entry*) (0xFFC00000 + (v >> 12) * 4)}\par
00061 \par
00062 {\cf17 extern} page_directory *kernel_page_dir;\par
00063 \par
00064 \par
00065 {\cf18 void} page_table_entry_add_attrib(page_table_entry *entry, uint32_t attrib);\par
00066 {\cf18 void} page_table_entry_del_attrib(page_table_entry *entry, uint32_t attrib); \par
00067 {\cf18 void} page_table_entry_set_frame(page_table_entry *entry, physical_addres_t addr); \par
00068 {\cf18 bool} page_table_entry_is_present(page_table_entry entry);\par
00069 {\cf18 bool} page_table_entry_is_writable(page_table_entry entry);\par
00070 physical_addres_t page_table_entry_frame(page_table_entry entry);\par
00071 \par
00072 {\cf18 void} page_dir_entry_add_attrib(page_dir_entry *entry, uint32_t attrib); \par
00073 {\cf18 void} page_dir_entry_del_attrib(page_dir_entry *entry, uint32_t attrib); \par
00074 {\cf18 void} page_dir_entry_set_frame(page_dir_entry *entry, physical_addres_t addr);\par
00075 {\cf18 bool} page_dir_entry_is_present(page_dir_entry entry);\par
00076 {\cf18 bool} page_dir_entry_is_user(page_dir_entry entry);\par
00077 {\cf18 bool} page_dir_entry_is_4mb(page_dir_entry entry);\par
00078 {\cf18 bool} page_dir_entry_is_writable(page_dir_entry entry);\par
00079 physical_addres_t page_dir_entry_frame(page_dir_entry entry); \par
00080 \par
00081 {\cf18 void} flush_tlb_entry(virtual_addr_t addr);\par
00082 \par
00083 {\cf17 extern} {\cf18 void} enable_paging(physical_addres_t page_dir);\par
00084 \par
00085 {\cf18 void} vmm_init();\par
00086 {\cf18 void} vmm_create_kernel_page_dir();\par
00087 \par
00088 {\cf18 bool} vmm_alloc_page(virtual_addr_t vaddr);\par
00089 {\cf18 bool} vmm_alloc_page_with_userbit(virtual_addr_t vaddr);\par
00090 {\cf18 void} vmm_free_page(virtual_addr_t vaddr);\par
00091 {\cf18 void} vmm_map_page(physical_addres_t paddr, virtual_addr_t vaddr);\par
00092 virtual_addr_t vmm_temp_map_page(physical_addres_t paddr);\par
00093 {\cf18 void} vmm_switch_page_directory(page_directory *page_dir_phys_addr);\par
00094 uint32_t kv2p({\cf18 void} *a);\par
00095 {\cf18 void} vmm_test();\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
multyboot.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/multyboot.h}
{\xe \v kernel/include/multyboot.h}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 \par
00004 {\cf21 #include <stdint.h>}\par
00005 \par
00006 \par
00007 \par
00008 \par
00009 {\cf21 #define MBOOT_FLAG_MEM     0x001}\par
00010 {\cf21 #define MBOOT_FLAG_DEVICE  0x002}\par
00011 {\cf21 #define MBOOT_FLAG_CMDLINE 0x004}\par
00012 {\cf21 #define MBOOT_FLAG_MODS    0x008}\par
00013 {\cf21 #define MBOOT_FLAG_AOUT    0x010}\par
00014 {\cf21 #define MBOOT_FLAG_ELF     0x020}\par
00015 {\cf21 #define MBOOT_FLAG_MMAP    0x040}\par
00016 {\cf21 #define MBOOT_FLAG_CONFIG  0x080}\par
00017 {\cf21 #define MBOOT_FLAG_LOADER  0x100}\par
00018 {\cf21 #define MBOOT_FLAG_APM     0x200}\par
00019 {\cf21 #define MBOOT_FLAG_VBE     0x400}\par
00020 \par
00021 {\cf17 struct }multiboot_info \{\par
00022     uint32_t flags; {\cf20 /* Header flags */}\par
00023     uint32_t mem_lower;\par
00024     uint32_t mem_upper;\par
00025     uint32_t boot_device;\par
00026     uint32_t cmdline;\par
00027     uint32_t mods_count;\par
00028     uint32_t mods_addr;\par
00029     uint32_t num;\par
00030     uint32_t size;\par
00031     uint32_t addr;\par
00032     uint32_t shndx;\par
00033     uint32_t mmap_length;\par
00034     uint32_t mmap_addr;\par
00035     uint32_t drives_length;\par
00036     uint32_t drives_addr;\par
00037     uint32_t config_table;\par
00038     uint32_t boot_loader_name;\par
00039     uint32_t apm_table;\par
00040     uint32_t vbe_control_info;\par
00041     uint32_t vbe_mode_info;\par
00042     uint32_t vbe_mode;\par
00043     uint32_t vbe_interface_seg;\par
00044     uint32_t vbe_interface_off;\par
00045     uint32_t vbe_interface_len;\par
00046 \par
00047     uint64_t framebuffer_addr;\par
00048     uint32_t framebuffer_pitch;\par
00049     uint32_t framebuffer_width;\par
00050     uint32_t framebuffer_height;\par
00051     uint8_t framebuffer_bpp;\par
00052     uint8_t framebuffer_type;\par
00053 \par
00054     {\cf17 union }\{\par
00055         {\cf17 struct }\{\par
00056             uint32_t framebuffer_palette_addr;\par
00057             uint16_t framebuffer_palette_num_colors;\par
00058         \};\par
00059 \par
00060         {\cf17 struct }\{\par
00061             uint8_t framebuffer_red_field_position;\par
00062             uint8_t framebuffer_red_mask_size;\par
00063             uint8_t framebuffer_green_field_position;\par
00064             uint8_t framebuffer_green_mask_size;\par
00065             uint8_t framebuffer_blue_field_position;\par
00066             uint8_t framebuffer_blue_mask_size;\par
00067         \};\par
00068     \};\par
00069 \};\par
00070 \par
00071 {\cf17 typedef} {\cf17 struct }multiboot_info multiboot_info;\par
00072 \par
00073 {\cf17 struct }multiboot_memory_map_entry \{\par
00074     uint32_t size;\par
00075     uint64_t addr;\par
00076     uint64_t len;\par
00077     uint32_t type;\par
00078 \};\par
00079 \par
00080 {\cf17 typedef} {\cf17 struct }multiboot_memory_map_entry multiboot_memory_map_entry;\par
00081 \par
00082 {\cf20 // More full multiboot.h take from DiOS}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cpuinfo.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/sys/cpuinfo.h}
{\xe \v kernel/include/sys/cpuinfo.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #define cpuid(in, a, b, c, d) __asm__("cpuid"}: "=a" (a), \\\par
00003                                                "=b" (b), \\\par
00004                                                "=c" (c), \\\par
00005                                                "=d" (d) : \\\par
00006                                                "a" (in));\par
00007 {\cf18 int} do_intel({\cf18 bool} silent);\par
00008 {\cf18 int} do_amd({\cf18 bool} silent);\par
00009 {\cf18 char}* printregs({\cf18 int} eax, {\cf18 int} ebx, {\cf18 int} ecx, {\cf18 int} edx);\par
00010 {\cf18 int} detect_cpu({\cf18 bool} silent);\par
00011 {\cf18 char}* getNameBrand();\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
elf.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/sys/elf.h}
{\xe \v kernel/include/sys/elf.h}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 \par
00004 {\cf21 #include <stdint.h>}\par
00005 {\cf21 #include <stdbool.h>}\par
00006 \par
00007 \par
00008 {\cf21 #define ELF_ARCH_32BIT (1)}\par
00009 {\cf21 #define ELF_ARCH_64BIT (2)}\par
00010 {\cf21 #define ELF_BYTEORDER_LENDIAN (1)}\par
00011 {\cf21 #define ELF_386_MACHINE (3)}\par
00012 {\cf21 #define SH_UNDEF (0)}\par
00013 {\cf21 #define SEGTYPE_NONE  (0)}\par
00014 {\cf21 #define SEGTYPE_LOAD  (1)}\par
00015 {\cf21 #define SEGTYPE_DLINK (2)}\par
00016 {\cf21 #define SEGTYPE_INTER (3)}\par
00017 {\cf21 #define SEGTYPE_NOTE  (4)}\par
00018 \par
00019 {\cf17 enum} elf_type \{ELF_NONE = 0, ELF_REL = 1, ELF_EXEC = 2\};\par
00020 \par
00021 {\cf17 struct }elf_hdr \{\par
00022     uint8_t     mag_num[4]; {\cf20 //Should be 0x7f, then "ELF" in ASCII. If it isn't exactly like that, we need to throw an error.}\par
00023     uint8_t           arch; {\cf20 //ELF file architecture, can be 32- or 64-bit.}\par
00024     uint8_t     byte_order; {\cf20 //ELF file byte order (little- or big-endian).}\par
00025     uint8_t        elf_ver; {\cf20 //ELF file version.}\par
00026     uint8_t         os_abi; {\cf20 //ABI used by this ELF file. OS-specific, we'll use only System V ABI.}\par
00027     uint8_t        abi_ver; {\cf20 //ABI version}\par
00028     uint8_t      unused[7];\par
00029     uint16_t     file_type; {\cf20 //This contains 0, 1 or 2 - 0 is none, 1 is relocatable file, 2 is executable file.}\par
00030     uint16_t       machine; {\cf20 //Machine type}\par
00031     uint32_t       version; {\cf20 //ELF file version.}\par
00032     uint32_t         entry; {\cf20 //ELF file entry point.}\par
00033     uint32_t         phoff; {\cf20 //Program header table offset in file.}\par
00034     uint32_t         shoff; {\cf20 //Section header table offset in the file.}\par
00035     uint32_t         flags; {\cf20 //ELF file flags.}\par
00036     uint16_t         hsize; {\cf20 //File header size.}\par
00037     uint16_t   ph_ent_size; {\cf20 //Program header entry size.}\par
00038     uint16_t    ph_ent_cnt; {\cf20 //Program header entry count.}\par
00039     uint16_t   sh_ent_size; {\cf20 //Section header entry size.}\par
00040     uint16_t    sh_ent_cnt; {\cf20 //Section header entry count.}\par
00041     uint16_t sh_name_index; {\cf20 //Index in section header table with section names}\par
00042 \} __attribute__((packed));\par
00043 \par
00044 {\cf17 struct }elf_section_header \{\par
00045     uint32_t    name; {\cf20 //Offset in section name table.}\par
00046     uint32_t    type; {\cf20 //Section type.}\par
00047     uint32_t    flags; {\cf20 //Section flags.}\par
00048     uint32_t    addr;\par
00049     uint32_t    offset; {\cf20 //Actual section data offset in the file.}\par
00050     uint32_t    size;\par
00051     uint32_t    link;\par
00052     uint32_t    info;\par
00053     uint32_t    addralign;\par
00054     uint32_t    entsize;\par
00055 \};\par
00056 \par
00057 {\cf17 struct }elf_program_header \{\par
00058     uint32_t type; {\cf20 //Segment type: 0 - null, 1 - load to load_to address, 2 - requires dynamic linking, 3 - use interpreter, 4 - note.}\par
00059     uint32_t data_offset; {\cf20 //Segment data offset in the file.}\par
00060     uint32_t load_to; {\cf20 //Address in (virtual) memory on which segment data should be loaded to.}\par
00061     uint32_t undefined; {\cf20 //Undefined when using System V ABI.}\par
00062     uint32_t size_in_file; {\cf20 //Segment size in file.}\par
00063     uint32_t size_in_mem; {\cf20 //Segment size in memory.}\par
00064     uint32_t flags; {\cf20 //Flags: 1 - executable, 2 - writable, 4 - readable.}\par
00065     uint32_t align; {\cf20 //Alignment, must be power of 2.}\par
00066 \};\par
00067 \par
00068 {\cf17 typedef} {\cf17 struct }elf_program_header elf_program_header_t;\par
00069 {\cf17 typedef} {\cf17 struct }elf_section_header elf_section_header_t;\par
00070 \par
00071 \par
00072 uint8_t elf_check_header({\cf17 struct} elf_hdr *hdr);\par
00073 elf_section_header_t *elf_get_section_header({\cf18 void} *elf_file, int32_t num);\par
00074 elf_program_header_t *elf_get_program_header({\cf18 void} *elf_file, int32_t num);\par
00075 {\cf17 const} {\cf18 char} *elf_get_section_name({\cf18 void} *elf_file, int32_t num);\par
00076 {\cf18 void} elf_hdr_info({\cf17 struct} elf_hdr *hdr);\par
00077 \par
00078 \par
00079 \par
00080 {\cf18 void} *elf_open({\cf17 const} {\cf18 char}*);\par
00081 {\cf18 void} elf_info({\cf17 const} {\cf18 char}*);\par
00082 {\cf18 void} elf_info_short({\cf17 const} {\cf18 char}*);\par
00083 int32_t run_elf_file({\cf17 const} {\cf18 char}*);{\cf20 //, char**, char**, int32_t argc);}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gdt.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/sys/gdt.h}
{\xe \v kernel/include/sys/gdt.h}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 \par
00004 {\cf21 #define GDT_MAX_DESCRIPTORS 6}\par
00005 \par
00006 \par
00007 {\cf18 void} gdt_set_gate(int32_t num, uint32_t base, uint32_t limit, uint8_t access, uint8_t gran);\par
00008 \par
00009 {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 GDT}\par
00010 {\cf18 void} gdt_init();\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
idt.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/sys/idt.h}
{\xe \v kernel/include/sys/idt.h}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 \par
00004 {\cf21 #define IDT_NUM_ENTRIES 256}\par
00005 \par
00006 {\cf21 #define TICKS_PER_SECOND 20}\par
00007 {\cf21 #define TIMER_IDT_INDEX    32}\par
00008 {\cf21 #define KEYBOARD_IDT_INDEX 33}\par
00009 {\cf21 #define SYSCALL_IDT_INDEX  0x80 }{\cf20 //128}\par
00010 {\cf21 #define MOUSE_IDT_INDEX    44 }\par
00011 \par
00012 {\cf21 #define PIC_MASTER_CMD 0x20}\par
00013 {\cf21 #define PIC_MASTER_DATA 0x21}\par
00014 {\cf21 #define PIC_SLAVE_CMD 0xA0}\par
00015 {\cf21 #define PIC_SLAVE_DATA 0xA1}\par
00016 \par
00017 {\cf21 #define PIC_CMD_EOI 0x20}\par
00018 \par
00019 {\cf21 #define SET_IDT_ENTRY(idx)                                                     \\}\par
00020 {\cf21   set_idt_entry(idx, (uint32_t)&interrupt_handler_##idx, 0x08, 0x8E);}\par
00021 \par
00022 {\cf21 #define DECLARE_INTERRUPT_HANDLER(i) void interrupt_handler_##i(void)}\par
00023 \par
00024 {\cf21 #define PIC1            0x20        }{\cf20 /* IO base address for Active PIC */}{\cf21 }\par
00025 {\cf21 #define PIC2            0xA0        }{\cf20 /* IO base address for Passive PIC */}{\cf21 }\par
00026 {\cf21 #define PIC1_COMMAND    PIC1}\par
00027 {\cf21 #define PIC1_DATA       PIC1 + 1}\par
00028 {\cf21 #define PIC2_COMMAND    PIC2}\par
00029 {\cf21 #define PIC2_DATA       PIC2 + 1}\par
00030 {\cf21 #define PIC_EOI         0x20        }{\cf20 /* End-of-interrupt command code */}{\cf21 }\par
00031 {\cf21 #define PIC_READ_IRR    0x0a        }{\cf20 /* OCW3 irq ready next CMD read */}{\cf21 }\par
00032 {\cf21 #define PIC_READ_ISR    0x0b        }{\cf20 /* OCW3 irq service next CMD read */}{\cf21 }\par
00033 \par
00034 {\cf21 #define ICW1_INIT               (0 << 8) | (1 << 4)}\par
00035 {\cf21 #define ICW1_ICW4_NEEDED        1}\par
00036 {\cf21 #define ICW1_CALLADDR_4         1 << 2}\par
00037 \par
00038 \par
00039 {\cf20 // \'D3\'E4\'E5\'F0\'E6\'E8\'E2\'E0\'E5\'F2 \'F0\'E5\'E3\'E8\'F1\'F2\'F0\'FB \'E2\'EE \'E2\'F0\'E5\'EC\'FF \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'FF}\par
00040 {\cf17 typedef} {\cf17 struct }regs \{\par
00041     uint32_t gs, fs, es, ds;                         {\cf20 // \'CF\'EE\'F1\'EB\'E5\'E4\'ED\'E8\'E5 \'EE\'F2\'EF\'F0\'E0\'E2\'EB\'E5\'ED\'ED\'FB\'E5 \'F1\'E5\'E3\'EC\'E5\'ED\'F2\'FB}\par
00042     uint32_t edi, esi, ebp, esp, ebx, edx, ecx, eax; {\cf20 // \'CE\'F2\'EF\'F0\'E0\'E2\'EB\'E5\'ED\'EE pusha}\par
00043     uint32_t idt_index, err_code;                    {\cf20 // \'CE\'F2\'EF\'F0\'E0\'E2\'EB\'E5\'ED\'EE \'E2\'F0\'F3\'F7\'ED\'F3\'FE}\par
00044     uint32_t eip, cs, eflags, useresp, ss;           {\cf20 // \'CE\'F2\'EF\'F0\'E0\'E2\'EB\'E5\'ED\'EE \'E0\'E2\'F2\'EE\'EC\'E0\'F2\'E8\'F7\'E5\'F1\'EA\'E8}\par
00045 \} regs_t;\par
00046 \par
00047 \par
00048 {\cf17 struct }idt_entry \{\par
00049     uint16_t handler_lo;\par
00050     uint16_t sel;\par
00051     uint8_t always0;\par
00052     uint8_t flags;\par
00053     uint16_t handler_hi;\par
00054 \} __attribute__((packed));\par
00055 \par
00056 {\cf17 struct }idt_ptr \{\par
00057     uint16_t limit;\par
00058     uint32_t base;\par
00059 \} __attribute__((packed));\par
00060 \par
00061 \par
00062 {\cf17 typedef} {\cf17 struct }idt_ptr idt_ptr_t;\par
00063 {\cf17 typedef} {\cf17 struct }idt_entry idt_entry_t;\par
00064 \par
00065 {\cf20 // \'D2\'E8\'EF Interrupt_handler_t \'97 \'FD\'F2\'EE \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'ED\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'FE, \'EA\'EE\'F2\'EE\'F0\'E0\'FF \'EF\'EE\'EB\'F3\'F7\'E0\'E5\'F2 struct regs *r \'E8 \'ED\'E8\'F7\'E5\'E3\'EE \'ED\'E5 \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 (void).}\par
00066 {\cf20 // \'D2\'E0\'EA\'E8\'EC \'EE\'E1\'F0\'E0\'E7\'EE\'EC, \'EE\'E1\'F0\'E0\'E1\'EE\'F2\'F7\'E8\'EA \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'FF \'E4\'EE\'EB\'E6\'E5\'ED \'EF\'EE\'EB\'F3\'F7\'E0\'F2\'FC \'F1\'EE\'F1\'F2\'EE\'FF\'ED\'E8\'E5 \'F0\'E5\'E3\'E8\'F1\'F2\'F0\'EE\'E2 \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'EE\'F0\'E0.}\par
00067 {\cf17 typedef} void (*interrupt_handler_t)({\cf17 struct }regs *r);\par
00068 \par
00069 int32_t register_interrupt_handler(uint32_t idt_index, interrupt_handler_t handler);\par
00070 \par
00071 {\cf20 // \'CD\'E0\'F1\'F2\'F0\'EE\'E9\'EA\'E0 idt}\par
00072 {\cf18 void} idt_init();\par
00073 {\cf18 void} IRQ_clear_mask({\cf18 unsigned} {\cf18 char} IRQline);\par
00074 {\cf18 void} outs(uint16_t port, uint16_t data);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
secure.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/sys/secure.h}
{\xe \v kernel/include/sys/secure.h}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf18 void} secure_init(uint8_t level);         {\cf20 // \'D4\'F3\'ED\'EA\'F6\'E8\'FF \'E8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'E8 \'EC\'EE\'E4\'F3\'EB\'FF \'E7\'E0\'F9\'E8\'F2\'FB}\par
00004 {\cf18 bool} secure_check_elf({\cf17 const} {\cf18 char} *name); {\cf20 // \'D4\'F3\'ED\'EA\'F6\'E8\'FF \'EF\'F0\'EE\'E2\'E5\'F0\'EA\'E8 \'E8\'F1\'EF\'EE\'EB\'ED\'FF\'E5\'EC\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
syscalls.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/sys/syscalls.h}
{\xe \v kernel/include/sys/syscalls.h}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <sys/idt.h>}\par
00002 \par
00003 \par
00004 {\cf21 #define SC_CODE_puts            0}\par
00005 {\cf21 #define SC_CODE_getscancode     1}\par
00006 {\cf21 #define SC_CODE_getchar         2}\par
00007 {\cf21 #define SC_CODE_gets            3}\par
00008 {\cf21 #define SC_CODE_malloc          4}\par
00009 {\cf21 #define SC_CODE_free            5}\par
00010 {\cf21 #define SC_CODE_setdev          10}\par
00011 {\cf21 #define SC_CODE_readfile        11}\par
00012 {\cf21 #define SC_CODE_writefile       12}\par
00013 {\cf21 #define SC_CODE_exists          13}\par
00014 {\cf21 #define SC_CODE_filesize        14}\par
00015 {\cf21 #define SC_CODE_rand            20}\par
00016 {\cf21 #define SC_CODE_srand           21}\par
00017 {\cf21 #define SC_CODE_putpixel        32}\par
00018 {\cf21 #define SC_CODE_drawline        33}\par
00019 {\cf21 #define SC_CODE_version         40}\par
00020 {\cf21 #define SC_CODE_newtask         41}\par
00021 {\cf21 #define SC_CODE_ticks           42}\par
00022 {\cf21 #define SC_CODE_getfreq         43}\par
00023 \par
00024 {\cf18 void} syscall_init();\par
00025 {\cf18 void} syscall_handler({\cf17 struct} regs *r);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
system.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/sys/system.h}
{\xe \v kernel/include/sys/system.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf18 void} reboot();\par
00004 {\cf18 void} shutdown();\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tss.h\par \pard\plain 
{\tc\tcl2 \v kernel/include/sys/tss.h}
{\xe \v kernel/include/sys/tss.h}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 \par
00004 {\cf21 #include <stdint.h>}\par
00005 {\cf21 #include <stdbool.h>}\par
00006 \par
00007 {\cf20 // tss \'E2\'F5\'EE\'E4\'ED\'FB\'E5 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB}\par
00008 {\cf17 typedef} {\cf17 struct }tss_entry \{\par
00009     uint32_t prev_tss;\par
00010 \par
00011     uint32_t esp0;\par
00012     uint32_t ss0;\par
00013     uint32_t esp1;\par
00014     uint32_t ss1;\par
00015     uint32_t esp2;\par
00016     uint32_t ss2;\par
00017     uint32_t cr3;\par
00018 \par
00019     uint32_t eip;\par
00020     uint32_t eflags;\par
00021 \par
00022     uint32_t eax;\par
00023     uint32_t ecx;\par
00024     uint32_t edx;\par
00025     uint32_t ebx;\par
00026     uint32_t esp;\par
00027     uint32_t ebp;\par
00028 \par
00029     uint32_t esi;\par
00030     uint32_t edi;\par
00031 \par
00032     uint32_t es;\par
00033     uint32_t cs;\par
00034     uint32_t ss;\par
00035     uint32_t ds;\par
00036     uint32_t fs;\par
00037     uint32_t gs;\par
00038 \par
00039     uint32_t ldt;\par
00040     uint16_t trap;\par
00041     uint16_t iomap_base;\par
00042 \} tss_entry_t;\par
00043 \par
00044 {\cf17 typedef} uint32_t pid_t;\par
00045 \par
00046 {\cf20 // \'C7\'E0\'E4\'E0\'F7\'E0}\par
00047 {\cf17 typedef} {\cf17 struct }\{\par
00048     list_item_t list_item;      {\cf20 // \'DD\'EB\'E5\'EC\'E5\'ED\'F2 \'F1\'EF\'E8\'F1\'EA\'E0 }\par
00049     physical_addres_t  page_dir;{\cf20 // \'CA\'E0\'F2\'E0\'EB\'EE\'E3 \'F1\'F2\'F0\'E0\'ED\'E8\'F6 }\par
00050     {\cf18 size_t}      threads_count;  {\cf20 // \'D7\'E8\'F1\'EB\'EE \'EF\'EE\'F2\'EE\'EA\'EE\'E2 \'E2 \'FD\'F2\'EE\'EC \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'E5 }\par
00051     {\cf18 bool}        suspend;        {\cf20 // \'D4\'EB\'E0\'E3 \'EF\'E0\'F3\'E7\'FB }\par
00052     pid_t    pid;            {\cf20 // \'C8\'E4\'E5\'ED\'F2\'E8\'F4\'E8\'EA\'E0\'F2\'EE\'F0 \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'E0 (PID) }\par
00053     {\cf18 char}        name[256];      {\cf20 // \'C8\'EC\'FF \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'E0 }\par
00054 \par
00055 \} __attribute__((packed)) process_t;\par
00056 \par
00057 \par
00058 {\cf17 typedef} {\cf17 struct }\{\par
00059     list_item_t list_item;   {\cf20 // \'DD\'EB\'E5\'EC\'E5\'ED\'F2 \'F1\'EF\'E8\'F1\'EA\'E0 }\par
00060     process_t*  process;     {\cf20 // \'D0\'EE\'E4\'E8\'F2\'E5\'EB\'FC\'F1\'EA\'E8\'E9 \'EF\'F0\'EE\'F6\'E5\'F1\'F1 }\par
00061     {\cf18 bool}        suspend;     {\cf20 // \'D4\'EB\'E0\'E3 \'EF\'E0\'F3\'E7\'FB }\par
00062     {\cf18 size_t}      stack_size;  {\cf20 // \'D0\'E0\'E7\'EC\'E5\'F0 \'F1\'F2\'E5\'EA\'E0 \'EF\'EE\'F2\'EE\'EA\'E0 }\par
00063     {\cf18 void}*       stack;       {\cf20 // \'D3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'ED\'E0 \'E1\'EB\'EE\'EA \'EF\'E0\'EC\'FF\'F2\'E8 \'EF\'EE\'E4 \'F1\'F2\'E5\'EA }\par
00064     uint32_t    esp;         {\cf20 // \'D3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'F1\'F2\'E5\'EA\'E0     }\par
00065     uint32_t    entry_point; {\cf20 // \'D2\'EE\'F7\'EA\'E0 \'E2\'F5\'EE\'E4\'E0 \'E2 \'EF\'EE\'F2\'EE\'EA }\par
00066     pid_t       id;          {\cf20 // \'C8\'E4\'E5\'ED\'F2\'E8\'F4\'E8\'EA\'E0\'F2\'EE\'F0 \'EF\'EE\'F2\'EE\'EA\'E0 }\par
00067 \} __attribute__((packed)) thread_t;\par
00068 \par
00069 \par
00070 {\cf17 extern} {\cf18 void} tss_flush();\par
00071 {\cf18 void} task_switch();\par
00072 {\cf18 void} tss_init(uint32_t idx, uint32_t kss, uint32_t kesp);\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB kernel/kernel.c\par \pard\plain 
{\tc\tcl2 \v kernel/kernel.c}
{\xe \v kernel/kernel.c}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'F5\'EE\'E4\'ED\'E0\'FF \'F2\'EE\'F7\'EA\'E0 \'FF\'E4\'F0\'E0, \'E8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'E4\'F0\'E0\'E9\'E2\'E5\'F0\'EE\'E2 }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <kernel.h>}\par
{\f2 #include <drivers/ata.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b kernel} (uint32_t magic_number, struct {\b multiboot_info} *mboot_info)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'F5\'EE\'E4\'ED\'E0\'FF \'F2\'EE\'F7\'EA\'E0 \'FF\'E4\'F0\'E0 SynapseOS. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b os_mode} = 1\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'F5\'EE\'E4\'ED\'E0\'FF \'F2\'EE\'F7\'EA\'E0 \'FF\'E4\'F0\'E0, \'E8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'E4\'F0\'E0\'E9\'E2\'E5\'F0\'EE\'E2 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'E2\'F2\'EE\'F0\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C0\'F0\'E5\'ED \'C5\'EB\'F7\'E8\'ED\'FF\'ED ({\f2 a2.dev@yandex.com}) \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'E5\'F0\'F1\'E8\'FF\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.1.13 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C4\'E0\'F2\'E0\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2022-08-13 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'E2\'F2\'EE\'F0\'F1\'F2\'E2\'EE\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Copyright \'C0\'F0\'E5\'ED \'C5\'EB\'F7\'E8\'ED\'FF\'ED (c) 2022 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b kernel.c}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v kernel\:kernel.c}
{\xe \v kernel.c\:kernel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void kernel (uint32_t  {\i magic_number}, struct {\b multiboot_info} *  {\i mboot_info})}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'F5\'EE\'E4\'ED\'E0\'FF \'F2\'EE\'F7\'EA\'E0 \'FF\'E4\'F0\'E0 SynapseOS. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'CF\'F0\'E5\'E4\'F3\'EF\'F0\'E5\'E6\'E4\'E5\'ED\'E8\'FF\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'CE\'F2\'F1\'F3\'F2\'F1\'F2\'E2\'F3\'E5\'F2 \'EF\'F0\'EE\'E2\'E5\'F0\'EA\'E0 multiboot! \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b kernel.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 
{\xe \v os_mode\:kernel.c}
{\xe \v kernel.c\:os_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t os_mode = 1}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b kernel.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
kernel.c\par \pard\plain 
{\tc\tcl2 \v kernel/kernel.c}
{\xe \v kernel/kernel.c}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00010 {\cf20 /*}\par
00011 {\cf20     \'DF\'E4\'F0\'EE SynapseOS}\par
00012 {\cf20 }\par
00013 {\cf20     }\par
00014 {\cf20 */}\par
00015 \par
00016 {\cf21 #include <kernel.h>}\par
00017 {\cf21 #include <drivers/ata.h>}\par
00018 \par
00019 \par
00020 uint32_t os_mode = 1; {\cf20 // 0 - \'EC\'E0\'EB\'EE \'CE\'C7\'D3, 1 - \'EE\'E1\'FB\'F7\'ED\'FB\'E9 \'F0\'E5\'E6\'E8\'EC, 2 - \'F0\'E5\'E6\'E8\'EC \'EF\'EE\'E2\'FB\'F8\'E5\'ED\'ED\'EE\'E9 \'EF\'F0\'EE\'E8\'E7\'E2\'EE\'E4\'E8\'F2\'E5\'EB\'FC\'ED\'EE\'F1\'F2\'E8, 3 - \'F1\'E5\'F0\'E2\'E5\'F0}\par
00021 \par
00022 \par
00027 {\cf18 void} kernel(uint32_t magic_number, {\cf17 struct} multiboot_info *mboot_info) \{\par
00028     {\cf19 if} (magic_number != MULTIBOOT_BOOTLOADER_MAGIC) \{\par
00029         qemu_log({\cf22 "Invalid magic number: %x, valid = %x"}, magic_number, MULTIBOOT_BOOTLOADER_MAGIC);\par
00030     \}\par
00031 \par
00032     tty_init(mboot_info);   {\cf20 // \'CD\'E0\'F1\'F2\'F0\'EE\'E9\'EA\'E0 \'E3\'F0\'E0\'F4\'E8\'EA\'E8}\par
00033 \par
00034     {\cf20 // \'C2\'FB\'E2\'EE\'E4 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'E8 \'EE \'FF\'E4\'F0\'E5}\par
00035     tty_printf({\cf22 "\\t\\tSynapseOS kernel version: %d.%d.%d, Built: %s\\n"}, \par
00036         VERSION_MAJOR, VERSION_MINOR, VERSION_PATCH,    {\cf20 // \'C2\'E5\'F0\'F1\'E8\'FF \'FF\'E4\'F0\'E0 }\par
00037         __TIMESTAMP__                                   {\cf20 // \'C2\'F0\'E5\'EC\'FF \'EE\'EA\'EE\'ED\'F7\'E0\'ED\'E8\'FF \'EA\'EE\'EC\'EF\'E8\'EB\'FF\'F6\'E8\'E8 \'FF\'E4\'F0\'E0}\par
00038         );\par
00039 \par
00040     {\cf20 // \'CF\'F0\'EE\'E2\'E5\'F0\'EA\'E0, \'FF\'E2\'EB\'FF\'E5\'F2\'F1\'FF \'EB\'E8 \'F1\'E1\'EE\'F0\'EA\'E0 \'E4\'E8\'F1\'F2\'F0\'E8\'E1\'F3\'F2\'E8\'E2\'EE\'EC}\par
00041     {\cf19 if} (isDistr) \{\par
00042         {\cf20 //\'C2\'FB\'E2\'EE\'E4 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'E8 \'EE \'E4\'E8\'F1\'F2\'F0\'E8\'E1\'F3\'F2\'E8\'E2\'E5}\par
00043         tty_printf({\cf22 "\\tDistribution \\"%s\\", version %d.%d.%d\\n"},\par
00044             DistrName, dVERSION_MAJOR, dVERSION_MINOR, dVERSION_PATCH\par
00045             );\par
00046     \}\par
00047 \par
00048     gdt_init(); {\cf20 // \\    \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'E8 \'ED\'E0\'F1\'F2\'F0\'EE\'E9\'EA\'E0 \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'E9 }\par
00049     idt_init(); {\cf20 // /}\par
00050     pmm_init(mboot_info);\par
00051 \par
00052     uint32_t initrd_beg = *(uint32_t*) (mboot_info->mods_addr);     {\cf20 // \'C0\'E4\'F0\'E5\'F1 \'ED\'E0\'F7\'E0\'EB\'E0 ramdisk}\par
00053     uint32_t initrd_end = *(uint32_t*) (mboot_info->mods_addr + 4); {\cf20 // \'C0\'E4\'F0\'E5\'F1 \'EA\'EE\'ED\'F6\'E0 ramdisk}\par
00054     qemu_log({\cf22 "initrd_beg = %x initrd_end = %x"},\par
00055         initrd_beg, initrd_end              {\cf20 // \'C2\'FB\'E2\'EE\'E4 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'E8 \'EE \'E0\'E4\'F0\'E5\'F1\'E0\'F5 ramdisk \'E2 \'EE\'F2\'EB\'E0\'E4\'F7\'E8\'EA}\par
00056     );\par
00057 \par
00058     vmm_init();                             {\cf20 // \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'EC\'E5\'ED\'E5\'E4\'E6\'E5\'F0\'E0 \'E2\'E8\'F0\'F2\'F3\'E0\'EB\'FC\'ED\'EE\'E9 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00059 \par
00060     kheap_init();                           {\cf20 // \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'EA\'F3\'F7\'E8 \'FF\'E4\'F0\'E0}\par
00061 \par
00062     init_vbe(mboot_info);                   {\cf20 // \'C0\'EA\'F2\'E8\'E2\'E0\'F6\'E8\'FF \'E3\'F0\'E0\'F4\'E8\'EA\'E8 1024x768}\par
00063 \par
00064     vfs_init();                             {\cf20 // \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'E2\'E8\'F0\'F2\'F3\'E0\'EB\'FC\'ED\'EE\'E9 \'F4\'E0\'E9\'EB\'EE\'E2\'EE\'E9 \'F1\'E8\'F1\'F2\'E5\'EC\'FB}\par
00065 \par
00066     initrd_init(initrd_beg, initrd_end);    {\cf20 // \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF ramdisk}\par
00067 \par
00068     syscall_init();                         {\cf20 // \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'F1\'E8\'F1\'F2\'E5\'EC\'ED\'EE\'E3\'EE api \'E4\'EB\'FF \'EF\'F0\'EE\'E3\'F0\'E0\'EC\'EC}\par
00069 \par
00070     keyboard_install();                     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'E4\'F0\'E0\'E9\'E2\'E5\'F0\'E0 \'EA\'EB\'E0\'E2\'E8\'E0\'F2\'F3\'F0\'FB}\par
00071 \par
00072     timer_install();                        {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 PIT}\par
00073 \par
00074     pci_init();                             {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'E4\'F0\'E0\'E9\'E2\'E5\'F0\'E0 PCI}\par
00075 \par
00076     {\cf17 struct }synapse_time TIME = get_time();\par
00077     tty_printf({\cf22 "Current datetime is: %d/%d/%d %d:%d:%d (unix:%d)\\n"}, TIME.day, TIME.month,\par
00078                                 TIME.year, TIME.hours, TIME.minutes, TIME.seconds,\par
00079                                 synapse_time_to_unix(TIME));\par
00080     tty_puts({\cf22 "Experimental font demo: \\xFF\\x01 \\xFF\\x02 \\xFF\\x03 \\xFF\\x04 \\xFF\\x05 \\xFF\\x06 \\xFF\\x07 \\xFF\\x08 \\xFF\\x09 \\xFF\\x0A \\xFF\\x0B \\xFF\\x0C\\n"});\par
00081     tty_puts({\cf22 "Colors: \\xFF\\x0D\\xFF\\x0E\\xFF\\x0F\\n"});\par
00082     tty_printf({\cf22 "Test: -1=[%d]  \\n"}, -1);\par
00083 \par
00084     {\cf20 // tty_printf("%s", "\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\xFF\\x0C\\n");}\par
00085     {\cf20 // ^--- \'C1\'E5\'E7 %s \'ED\'E5 \'F0\'E0\'E1\'EE\'F2\'E0\'E5\'F2. \'D2\'EE\'EB\'FC\'EA\'EE \'F2\'E0\'EA \'E8\'EB\'E8 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E9\'F2\'E5 tty_puts()}\par
00086 \par
00087     {\cf20 //ata_init();                             // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'E4\'F0\'E0\'E9\'E2\'E5\'F0\'E0 ATA}\par
00088 \par
00089     unit_test(RTL8139_init());              {\cf20 // \'D2\'E5\'F1\'F2\'E8\'F0\'F3\'E5\'EC \'E4\'F0\'E0\'E9\'E2\'E5\'F0 RTL8139}\par
00090 \par
00091     vfs_mount_list();                       {\cf20 // \'C2\'FB\'E2\'EE\'E4\'E8\'EC \'F1\'EF\'E8\'F1\'EE\'EA \'EA\'EE\'F0\'ED\'FF VFS}\par
00092     detect_cpu(1);\par
00093     {\cf20 // while(1)\{}\par
00094     {\cf20 //     asm volatile("hlt");}\par
00095     {\cf20 // \}}\par
00096     {\cf20 //qemu_log("task: %d", create_task());}\par
00097     {\cf20 //init_task_manager();}\par
00098     {\cf20 //create_STFS(0);}\par
00099 \par
00100     {\cf20 //tui();}\par
00101     {\cf20 //tty_puts("ANSI Escape sequence test: \\033[31mHei\\033[32m, \\033[33mmaa\\033[34mil\\033[35mma\\033[36m!\\033[0m\\n");}\par
00102     {\cf19 if} (floppy_install())\{\par
00103         \par
00104     \} {\cf19 else} \{\par
00105         tty_printf({\cf22 "\\nFloppy: ERROR\\n"});\par
00106     \}\par
00107     {\cf20 //tty_printf("\\n%d\\n%s\\n", 101/10, format_string("Hello! %d, %x, %c, %s", 120, 0x90, 'H', "Hi!"));}\par
00108     draw_from_file({\cf22 "/initrd/res/SynapseOSLogo.duke"}, getWidthScreen()-106, 36);\par
00109 \par
00110     shell();                                {\cf20 // \'C0\'EA\'F2\'E8\'E2\'E0\'F6\'E8\'FF \'F2\'E5\'F0\'EC\'E8\'ED\'E0\'EB\'E0}\par
00111     {\cf20 // \'D0\'E0\'E1\'EE\'F2\'E0\'E5\'F2, \'ED\'EE \'ED\'E0\'E4\'EE \'E4\'EE\'E4\'E5\'EB\'E0\'F2\'FC }\par
00112     {\cf20 //run_driver_thread("/initrd/sys/shell.sea");}\par
00113     {\cf20 //run_driver_thread("/initrd/sys/user.sea");}\par
00114     {\cf20 //run_driver_thread("/initrd/sys/interface.sea");}\par
00115     {\cf20 //run_driver_thread("/initrd/sys/kernel.elf");}\par
00116 \}\par
00117 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ata.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/ata.c}
{\xe \v kernel/src/drivers/ata.c}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 {\cf20 // https://wiki.osdev.org/PCI_IDE_Controller}\par
00004 {\cf20 // https://datacadamia.com/io/drive/lba}\par
00005 \par
00006 IDE_CHANNELS g_ide_channels[MAXIMUM_CHANNELS];\par
00007 IDE_DEVICE g_ide_devices[MAXIMUM_IDE_DEVICES];\par
00008 \par
00009 {\cf17 static} {\cf17 volatile} {\cf18 unsigned} {\cf18 char} g_ide_irq_invoked = 0;\par
00010 \par
00011 {\cf17 static} uint8_t ide_read_register(uint8_t channel, uint8_t reg);\par
00012 {\cf17 static} {\cf18 void} ide_write_register(uint8_t channel, uint8_t reg, uint8_t data);\par
00013 \par
00014 \par
00015 uint32_t ide_get_size(int32_t drive)\{\par
00016     {\cf19 return} g_ide_devices[drive].size;\par
00017 \}\par
00018 {\cf17 struct }dma_prdt \{\par
00019     uint32_t prdt_offset;\par
00020     uint16_t prdt_bytes;\par
00021     uint16_t prdt_last;\par
00022 \} __packed;\par
00023 \par
00024 {\cf17 struct }ata_dma_priv \{\par
00025     {\cf18 int} adp_busmaster;\par
00026     {\cf18 int} adp_last_count;\par
00027     {\cf18 char} *adp_dma_area;\par
00028     {\cf17 struct }dma_prdt *adp_dma_prdt;\par
00029 \};\par
00030 \par
00031 \par
00032 {\cf20 // read register value from the given channel}\par
00033 {\cf17 static} uint8_t ide_read_register(uint8_t channel, uint8_t reg) \{\par
00034     uint8_t ret;\par
00035 \par
00036     {\cf20 // write value ata-control to tell irq is ready}\par
00037     {\cf19 if} (reg > 0x07 && reg < 0x0C)\par
00038         ide_write_register(channel, ATA_REG_CONTROL, 0x80 | g_ide_channels[channel].no_intr);\par
00039 \par
00040     {\cf20 // read register from base channel port}\par
00041     {\cf19 if} (reg < 0x08)\par
00042         ret = inb(g_ide_channels[channel].base + reg - 0x00);\par
00043     {\cf19 else} {\cf19 if} (reg < 0x0C)\par
00044         ret = inb(g_ide_channels[channel].base + reg - 0x06);\par
00045     {\cf19 else} {\cf19 if} (reg < 0x0E)\par
00046         ret = inb(g_ide_channels[channel].control + reg - 0x0A);\par
00047     {\cf19 else} {\cf19 if} (reg < 0x16)\par
00048         ret = inb(g_ide_channels[channel].bm_ide + reg - 0x0E);\par
00049 \par
00050     {\cf20 // write value to tell reading is done}\par
00051     {\cf19 if} (reg > 0x07 && reg < 0x0C)\par
00052         ide_write_register(channel, ATA_REG_CONTROL, g_ide_channels[channel].no_intr);\par
00053 \par
00054     {\cf19 return} ret;\par
00055 \}\par
00056 \par
00057 {\cf20 // write data to register to the given channel}\par
00058 {\cf17 static} {\cf18 void} ide_write_register(uint8_t channel, uint8_t reg, uint8_t data) \{\par
00059     {\cf20 // write value ata-control to tell irq is ready}\par
00060     {\cf19 if} (reg > 0x07 && reg < 0x0C)\par
00061         ide_write_register(channel, ATA_REG_CONTROL, 0x80 | g_ide_channels[channel].no_intr);\par
00062 \par
00063     {\cf20 // write data to register ports}\par
00064     {\cf19 if} (reg < 0x08) \{\par
00065         {\cf19 if}(is_com_port(g_ide_channels[channel].base + reg - 0x00))\{ {\cf19 return}; \}\par
00066         outb(g_ide_channels[channel].base + reg - 0x00, data);\par
00067     \} {\cf19 else} {\cf19 if} (reg < 0x0C) \{\par
00068         {\cf19 if}(is_com_port(g_ide_channels[channel].base + reg - 0x06))\{ {\cf19 return}; \}\par
00069         outb(g_ide_channels[channel].base + reg - 0x06, data);\par
00070     \} {\cf19 else} {\cf19 if} (reg < 0x0E) \{\par
00071         {\cf19 if}(is_com_port(g_ide_channels[channel].control + reg - 0x0A))\{ {\cf19 return}; \}\par
00072         outb(g_ide_channels[channel].control + reg - 0x0A, data);\par
00073     \} {\cf19 else} {\cf19 if} (reg < 0x16) \{\par
00074         {\cf19 if}(is_com_port(g_ide_channels[channel].bm_ide + reg - 0x0E))\{ {\cf19 return}; \}\par
00075         outb(g_ide_channels[channel].bm_ide + reg - 0x0E, data);\par
00076     \}\par
00077     {\cf20 // write value to tell reading is done}\par
00078     {\cf19 if} (reg > 0x07 && reg < 0x0C)\par
00079         ide_write_register(channel, ATA_REG_CONTROL, g_ide_channels[channel].no_intr);\par
00080 \}\par
00081 \par
00082 \par
00083 \par
00084 {\cf20 // read collection of value from a channel into given buffer}\par
00085 {\cf18 void} ide_read_buffer(uint8_t channel, uint8_t reg, uint32_t *buffer, uint32_t quads) \{\par
00086     {\cf19 if} (reg > 0x07 && reg < 0x0C)\par
00087         ide_write_register(channel, ATA_REG_CONTROL, 0x80 | g_ide_channels[channel].no_intr);\par
00088 \par
00089     {\cf20 // get value of data-segment to extra segment by savin glast es value}\par
00090     {\cf17 asm} {\cf17 volatile}({\cf22 "pushw %es"});\par
00091     {\cf17 asm} {\cf17 volatile}({\cf22 "movw %ds, %ax"});\par
00092     {\cf17 asm} {\cf17 volatile}({\cf22 "movw %ax, %es"});\par
00093 \par
00094     {\cf19 if} (reg < 0x08)\par
00095         insl(g_ide_channels[channel].base + reg - 0x00, buffer, quads);\par
00096     {\cf19 else} {\cf19 if} (reg < 0x0C)\par
00097         insl(g_ide_channels[channel].base + reg - 0x06, buffer, quads);\par
00098     {\cf19 else} {\cf19 if} (reg < 0x0E)\par
00099         insl(g_ide_channels[channel].control + reg - 0x0A, buffer, quads);\par
00100     {\cf19 else} {\cf19 if} (reg < 0x16)\par
00101         insl(g_ide_channels[channel].bm_ide + reg - 0x0E, buffer, quads);\par
00102 \par
00103     {\cf17 asm} {\cf17 volatile}({\cf22 "popw %es"});\par
00104 \par
00105     {\cf19 if} (reg > 0x07 && reg < 0x0C)\par
00106         ide_write_register(channel, ATA_REG_CONTROL, g_ide_channels[channel].no_intr);\par
00107 \}\par
00108 \par
00109 {\cf18 void} ide_write_buffer(uint8_t channel, uint8_t reg, uint32_t *buffer, uint32_t quads) \{\par
00110     {\cf19 if} (reg > 0x07 && reg < 0x0C)\par
00111         ide_write_register(channel, ATA_REG_CONTROL, 0x80 | g_ide_channels[channel].no_intr);\par
00112 \par
00113     {\cf20 // get value of data-segment to extra segment by savin glast es value}\par
00114     {\cf17 asm} {\cf17 volatile}({\cf22 "pushw %es"});\par
00115     {\cf17 asm} {\cf17 volatile}({\cf22 "movw %ds, %ax"});\par
00116     {\cf17 asm} {\cf17 volatile}({\cf22 "movw %ax, %es"});\par
00117 \par
00118     {\cf19 if} (reg < 0x08)\par
00119         outsl(g_ide_channels[channel].base + reg - 0x00, buffer, quads);\par
00120     {\cf19 else} {\cf19 if} (reg < 0x0C)\par
00121         outsl(g_ide_channels[channel].base + reg - 0x06, buffer, quads);\par
00122     {\cf19 else} {\cf19 if} (reg < 0x0E)\par
00123         outsl(g_ide_channels[channel].control + reg - 0x0A, buffer, quads);\par
00124     {\cf19 else} {\cf19 if} (reg < 0x16)\par
00125         outsl(g_ide_channels[channel].bm_ide + reg - 0x0E, buffer, quads);\par
00126 \par
00127     {\cf17 asm} {\cf17 volatile}({\cf22 "popw %es"});\par
00128 \par
00129     {\cf19 if} (reg > 0x07 && reg < 0x0C)\par
00130         ide_write_register(channel, ATA_REG_CONTROL, g_ide_channels[channel].no_intr);\par
00131 \}\par
00132 \par
00133 {\cf20 // wait until drive is ready, keep polling ide device until it is not busy status}\par
00134 uint8_t ide_polling(uint8_t channel, uint8_t advanced_check) \{\par
00135     {\cf20 // (I) Delay 400 nanosecond for BSY to be set:}\par
00136     {\cf19 for} (int32_t i = 0; i < 4; i++)\par
00137         {\cf20 // Reading the Alternate Status port wastes 100ns; loop four times.}\par
00138         ide_read_register(channel, ATA_REG_ALTSTATUS);\par
00139 \par
00140     {\cf20 // (II) Wait for BSY to be cleared:}\par
00141     {\cf19 while} (ide_read_register(channel, ATA_REG_STATUS) & ATA_SR_BSY)\par
00142         ;  {\cf20 // Wait for BSY to be zero.}\par
00143 \par
00144     {\cf19 if} (advanced_check) \{\par
00145         {\cf20 // Read Status Register}\par
00146         uint8_t state = ide_read_register(channel, ATA_REG_STATUS);\par
00147 \par
00148         {\cf20 // (III) Check For Errors:}\par
00149         {\cf19 if} (state & ATA_SR_ERR)\par
00150             {\cf19 return} 2;  {\cf20 // Error.}\par
00151 \par
00152         {\cf20 // (IV) Check If Device fault:}\par
00153         {\cf19 if} (state & ATA_SR_DF)\par
00154             {\cf19 return} 1;  {\cf20 // Device Fault.}\par
00155 \par
00156         {\cf20 // (V) Check DRQ:}\par
00157         {\cf20 // BSY = 0; DF = 0; ERR = 0 so we should check for DRQ now.}\par
00158         {\cf19 if} ((state & ATA_SR_DRQ) == 0)\par
00159             {\cf19 return} 3;  {\cf20 // DRQ should be set}\par
00160     \}\par
00161 \par
00162     {\cf19 return} 0;  {\cf20 // No Error.}\par
00163 \}\par
00164 \par
00165 uint8_t ide_print_error(uint32_t drive, uint8_t err) \{\par
00166     {\cf19 if} (err == 0)\par
00167         {\cf19 return} err;\par
00168 \par
00169     tty_printf({\cf22 "IDE:"});\par
00170     {\cf19 if} (err == 1) \{\par
00171         tty_printf({\cf22 "- Device Fault\\n"});\par
00172         err = 19;\par
00173     \} {\cf19 else} {\cf19 if} (err == 2) \{\par
00174         uint8_t st = ide_read_register(g_ide_devices[drive].channel, ATA_REG_ERROR);\par
00175         {\cf19 if} (st & ATA_ER_AMNF) \{\par
00176             tty_printf({\cf22 "- No Address Mark Found\\n"});\par
00177             err = 7;\par
00178         \}\par
00179         {\cf19 if} (st & ATA_ER_TK0NF) \{\par
00180             tty_printf({\cf22 "- No Media or Media Error\\n"});\par
00181             err = 3;\par
00182         \}\par
00183         {\cf19 if} (st & ATA_ER_ABRT) \{\par
00184             tty_printf({\cf22 "- Command Aborted\\n"});\par
00185             err = 20;\par
00186         \}\par
00187         {\cf19 if} (st & ATA_ER_MCR) \{\par
00188             tty_printf({\cf22 "- No Media or Media Error\\n"});\par
00189             err = 3;\par
00190         \}\par
00191         {\cf19 if} (st & ATA_ER_IDNF) \{\par
00192             tty_printf({\cf22 "- ID mark not Found\\n"});\par
00193             err = 21;\par
00194         \}\par
00195         {\cf19 if} (st & ATA_ER_MC) \{\par
00196             tty_printf({\cf22 "- No Media or Media Error\\n"});\par
00197             err = 3;\par
00198         \}\par
00199         {\cf19 if} (st & ATA_ER_UNC) \{\par
00200             tty_printf({\cf22 "- Uncorrectable Data Error\\n"});\par
00201             err = 22;\par
00202         \}\par
00203         {\cf19 if} (st & ATA_ER_BBK) \{\par
00204             tty_printf({\cf22 "- Bad Sectors\\n"});\par
00205             err = 13;\par
00206         \}\par
00207     \} {\cf19 else} {\cf19 if} (err == 3) \{\par
00208         tty_printf({\cf22 "- Reads Nothing\\n"});\par
00209         err = 23;\par
00210     \} {\cf19 else} {\cf19 if} (err == 4) \{\par
00211         tty_printf({\cf22 "- Write Protected\\n"});\par
00212         err = 8;\par
00213     \}\par
00214     tty_printf({\cf22 "- [%s %s] %s\\n"},\par
00215            ({\cf17 const} {\cf18 char} *[])\{{\cf22 "Primary"}, {\cf22 "Secondary"}\}[g_ide_devices[drive].channel],\par
00216            ({\cf17 const} {\cf18 char} *[])\{{\cf22 "Master"}, {\cf22 "Slave"}\}[g_ide_devices[drive].drive],\par
00217            g_ide_devices[drive].model);\par
00218 \par
00219     {\cf19 return} err;\par
00220 \}\par
00221 \par
00222 {\cf20 /*}\par
00223 {\cf20 prim_channel_base_addr: Primary channel base address(0x1F0-0x1F7)}\par
00224 {\cf20 prim_channel_control_base_addr: Primary channel control base address(0x3F6)}\par
00225 {\cf20 sec_channel_base_addr: Secondary channel base address(0x170-0x177)}\par
00226 {\cf20 sec_channel_control_addr: Secondary channel control base address(0x376)}\par
00227 {\cf20 bus_master_addr: Bus master address(pass 0 for now)}\par
00228 {\cf20 */}\par
00229 {\cf18 void} ide_init(uint32_t prim_channel_base_addr, uint32_t prim_channel_control_base_addr,\par
00230               uint32_t sec_channel_base_addr, uint32_t sec_channel_control_addr,\par
00231               uint32_t bus_master_addr) \{\par
00232     int32_t i, j, k, count = 0;\par
00233     {\cf18 unsigned} {\cf18 char} ide_buf[2048] = \{0\};\par
00234 \par
00235     {\cf20 // 1- Detect I/O Ports which interface IDE Controller:}\par
00236     {\cf20 // (checking the addr is removed for simplicity, just assigning all ports)}\par
00237     g_ide_channels[ATA_PRIMARY].base = prim_channel_base_addr;\par
00238     g_ide_channels[ATA_PRIMARY].control = prim_channel_control_base_addr;\par
00239     g_ide_channels[ATA_SECONDARY].base = sec_channel_base_addr;\par
00240     g_ide_channels[ATA_SECONDARY].control = sec_channel_control_addr;\par
00241     g_ide_channels[ATA_PRIMARY].bm_ide = bus_master_addr;\par
00242     g_ide_channels[ATA_SECONDARY].bm_ide = bus_master_addr;\par
00243 \par
00244     {\cf20 // 2- Disable IRQs:}\par
00245     ide_write_register(ATA_PRIMARY, ATA_REG_CONTROL, 2);\par
00246     ide_write_register(ATA_SECONDARY, ATA_REG_CONTROL, 2);\par
00247 \par
00248     {\cf20 // 3- Detect ATA-ATAPI Devices:}\par
00249     {\cf19 for} (i = 0; i < 2; i++) \{\par
00250         {\cf19 for} (j = 0; j < 2; j++) \{\par
00251             uint8_t err = 0, type = IDE_ATA, status;\par
00252             g_ide_devices[count].reserved = 0;  {\cf20 // Assuming that no drive here.}\par
00253 \par
00254             {\cf20 // (I) Select Drive:}\par
00255             ide_write_register(i, ATA_REG_HDDEVSEL, 0xA0 | (j << 4));  {\cf20 // Select Drive.}\par
00256             {\cf20 //sleep(1); // Wait 1ms for drive select to work.}\par
00257 \par
00258             {\cf20 // (II) Send ATA Identify Command:}\par
00259             ide_write_register(i, ATA_REG_COMMAND, ATA_CMD_IDENTIFY);\par
00260             {\cf20 //sleep(1); // This function should be implemented in your OS. which waits for 1 ms.}\par
00261             {\cf20 // it is based on System Timer Device Driver.}\par
00262 \par
00263             {\cf20 // (III) Polling:}\par
00264             {\cf19 if} (ide_read_register(i, ATA_REG_STATUS) == 0) {\cf19 continue};  {\cf20 // If Status = 0, No Device.}\par
00265 \par
00266             {\cf19 while} (1) \{\par
00267                 status = ide_read_register(i, ATA_REG_STATUS);\par
00268                 {\cf19 if} ((status & ATA_SR_ERR)) \{\par
00269                     err = 1;\par
00270                     {\cf19 break};\par
00271                 \}                                                            {\cf20 // If Err, Device is not ATA.}\par
00272                 {\cf19 if} (!(status & ATA_SR_BSY) && (status & ATA_SR_DRQ)) {\cf19 break};  {\cf20 // Everything is right.}\par
00273             \}\par
00274 \par
00275             {\cf20 // (IV) Probe for ATAPI Devices:}\par
00276 \par
00277             {\cf19 if} (err != 0) \{\par
00278                 {\cf18 unsigned} {\cf18 char} cl = ide_read_register(i, ATA_REG_LBA1);\par
00279                 {\cf18 unsigned} {\cf18 char} ch = ide_read_register(i, ATA_REG_LBA2);\par
00280 \par
00281                 {\cf19 if} (cl == 0x14 && ch == 0xEB)\par
00282                     type = IDE_ATAPI;\par
00283                 {\cf19 else} {\cf19 if} (cl == 0x69 && ch == 0x96)\par
00284                     type = IDE_ATAPI;\par
00285                 {\cf19 else}\par
00286                     {\cf19 continue};  {\cf20 // Unknown Type (may not be a device).}\par
00287 \par
00288                 ide_write_register(i, ATA_REG_COMMAND, ATA_CMD_IDENTIFY_PACKET);\par
00289                 {\cf20 //sleep(1);}\par
00290             \}\par
00291 \par
00292             {\cf20 // (V) Read Identification Space of the Device:}\par
00293             ide_read_buffer(i, ATA_REG_DATA, (uint32_t *)ide_buf, 128);\par
00294 \par
00295             {\cf20 // (VI) Read Device Parameters:}\par
00296             g_ide_devices[count].reserved = 1;\par
00297             g_ide_devices[count].type = type;\par
00298             g_ide_devices[count].channel = i;\par
00299             g_ide_devices[count].drive = j;\par
00300             g_ide_devices[count].signature = *(({\cf18 unsigned} {\cf18 short} *)(ide_buf + ATA_IDENT_DEVICETYPE));\par
00301             g_ide_devices[count].features = *(({\cf18 unsigned} {\cf18 short} *)(ide_buf + ATA_IDENT_CAPABILITIES));\par
00302             g_ide_devices[count].command_sets = *((uint32_t *)(ide_buf + ATA_IDENT_COMMANDSETS));\par
00303 \par
00304             {\cf20 // (VII) Get Size:}\par
00305             {\cf19 if} (g_ide_devices[count].command_sets & (1 << 26))\par
00306                 {\cf20 // Device uses 48-Bit Addressing:}\par
00307                 g_ide_devices[count].size = *((uint32_t *)(ide_buf + ATA_IDENT_MAX_LBA_EXT));\par
00308             {\cf19 else}\par
00309                 {\cf20 // Device uses CHS or 28-bit Addressing:}\par
00310                 g_ide_devices[count].size = *((uint32_t *)(ide_buf + ATA_IDENT_MAX_LBA));\par
00311 \par
00312             {\cf20 // (VIII) String indicates model of device (like Western Digital HDD and SONY DVD-RW...):}\par
00313             {\cf19 for} (k = 0; k < 40; k += 2) \{\par
00314                 g_ide_devices[count].model[k] = ide_buf[ATA_IDENT_MODEL + k + 1];\par
00315                 g_ide_devices[count].model[k + 1] = ide_buf[ATA_IDENT_MODEL + k];\par
00316             \}\par
00317             g_ide_devices[count].model[40] = {\cf23 '\\0'};  {\cf20 // Terminate String.}\par
00318             {\cf20 // remove trailing spaces in model string}\par
00319             {\cf19 for}(k = 39; k >= 0; k--) \{\par
00320                 {\cf18 char} ch = g_ide_devices[count].model[k];\par
00321                 {\cf19 if}(ch == {\cf23 ' '})\par
00322                     g_ide_devices[count].model[k] = {\cf23 '\\0'};\par
00323                 {\cf19 else}\par
00324                     {\cf19 break};\par
00325             \}\par
00326 \par
00327             count++;\par
00328         \}\par
00329     \}\par
00330 \par
00331     {\cf20 // 4- Print32_t Summary:}\par
00332     {\cf19 for} (i = 0; i < 5; i++)\par
00333         {\cf19 if} (g_ide_devices[i].reserved == 1) \{\par
00334             tty_printf({\cf22 "%d:-\\n"}, i);\par
00335             tty_printf({\cf22 "  model: %s\\n"}, g_ide_devices[i].model);\par
00336             tty_printf({\cf22 "  type: %s\\n"}, ({\cf17 const} {\cf18 char} *[])\{{\cf22 "ATA"}, {\cf22 "ATAPI"}\}[g_ide_devices[i].type]);\par
00337             tty_printf({\cf22 "  drive: %u, channel: %u\\n"}, g_ide_devices[i].drive, g_ide_devices[i].channel);\par
00338             tty_printf({\cf22 "  base: 0x%x, control: 0x%x\\n"}, g_ide_channels[i].base, g_ide_channels[i].control);\par
00339             tty_printf({\cf22 "  size: %u sectors, %u bytes\\n"}, g_ide_devices[i].size, g_ide_devices[i].size * ATA_SECTOR_SIZE);\par
00340             tty_printf({\cf22 "  signature: 0x%x, features: %d\\n"}, g_ide_devices[i].signature, g_ide_devices[i].features);\par
00341         \}\par
00342 \}\par
00343 \par
00344 uint8_t ide_ata_access(uint8_t direction, uint8_t drive, uint32_t lba, uint8_t num_sectors, uint32_t buffer) \{\par
00345     uint8_t lba_mode {\cf20 /* 0: CHS, 1:LBA28, 2: LBA48 */}, dma {\cf20 /* 0: No DMA, 1: DMA */}, cmd;\par
00346     uint8_t lba_io[6];\par
00347     uint32_t channel = g_ide_devices[drive].channel;  {\cf20 // Read the Channel.}\par
00348     uint32_t slavebit = g_ide_devices[drive].drive;   {\cf20 // Read the Drive [Master/Slave]}\par
00349     uint32_t bus = g_ide_channels[channel].base;      {\cf20 // Bus Base, like 0x1F0 which is also data port.}\par
00350     uint32_t words = 256;                             {\cf20 // Almost every ATA drive has a sector-size of 512-byte.}\par
00351     uint16_t cyl, i;\par
00352     uint8_t head, sect, err;\par
00353 \par
00354     ide_write_register(channel, ATA_REG_CONTROL, g_ide_channels[channel].no_intr = (g_ide_irq_invoked = 0x0) + 0x02);\par
00355 \par
00356     {\cf20 // (I) Select one from LBA28, LBA48 or CHS;}\par
00357     {\cf19 if} (lba >= 0x10000000) \{  {\cf20 // Sure Drive should support LBA in this case, or you are}\par
00358                               {\cf20 // giving a wrong LBA.}\par
00359         {\cf20 // LBA48:}\par
00360         lba_mode = LBA_MODE_48;\par
00361         lba_io[0] = (lba & 0x000000FF) >> 0;\par
00362         lba_io[1] = (lba & 0x0000FF00) >> 8;\par
00363         lba_io[2] = (lba & 0x00FF0000) >> 16;\par
00364         lba_io[3] = (lba & 0xFF000000) >> 24;\par
00365         lba_io[4] = 0;                                   {\cf20 // LBA28 is integer, so 32-bits are enough to access 2TB.}\par
00366         lba_io[5] = 0;                                   {\cf20 // LBA28 is integer, so 32-bits are enough to access 2TB.}\par
00367         head = 0;                                        {\cf20 // Lower 4-bits of HDDEVSEL are not used here.}\par
00368     \} {\cf19 else} {\cf19 if} (g_ide_devices[drive].features & 0x200) \{  {\cf20 // Drive supports LBA?}\par
00369         {\cf20 // LBA28:}\par
00370         lba_mode = LBA_MODE_28;\par
00371         lba_io[0] = (lba & 0x00000FF) >> 0;\par
00372         lba_io[1] = (lba & 0x000FF00) >> 8;\par
00373         lba_io[2] = (lba & 0x0FF0000) >> 16;\par
00374         lba_io[3] = 0;  {\cf20 // These Registers are not used here.}\par
00375         lba_io[4] = 0;  {\cf20 // These Registers are not used here.}\par
00376         lba_io[5] = 0;  {\cf20 // These Registers are not used here.}\par
00377         head = (lba & 0xF000000) >> 24;\par
00378     \} {\cf19 else} \{\par
00379         {\cf20 // CHS:}\par
00380         lba_mode = LBA_MODE_CHS;\par
00381         sect = (lba % 63) + 1;\par
00382         cyl = (lba + 1 - sect) / (16 * 63);\par
00383         lba_io[0] = sect;\par
00384         lba_io[1] = (cyl >> 0) & 0xFF;\par
00385         lba_io[2] = (cyl >> 8) & 0xFF;\par
00386         lba_io[3] = 0;\par
00387         lba_io[4] = 0;\par
00388         lba_io[5] = 0;\par
00389         head = (lba + 1 - sect) % (16 * 63) / (63);  {\cf20 // Head number is written to HDDEVSEL lower 4-bits.}\par
00390     \}\par
00391 \par
00392     {\cf20 // (II) See if drive supports DMA or not;}\par
00393     dma = 0;  {\cf20 // We don't support DMA}\par
00394 \par
00395     {\cf20 // (III) Wait if the drive is busy;}\par
00396     {\cf19 while} (ide_read_register(channel, ATA_REG_STATUS) & ATA_SR_BSY) \{\par
00397     \}  {\cf20 // Wait if busy.}\par
00398 \par
00399     {\cf20 // (IV) Select Drive from the controller;}\par
00400     {\cf19 if} (lba_mode == LBA_MODE_CHS)\par
00401         ide_write_register(channel, ATA_REG_HDDEVSEL, 0xA0 | (slavebit << 4) | head);  {\cf20 // Drive & CHS.}\par
00402     {\cf19 else}\par
00403         ide_write_register(channel, ATA_REG_HDDEVSEL, 0xE0 | (slavebit << 4) | head);  {\cf20 // Drive & LBA}\par
00404 \par
00405     {\cf20 // (V) Write Parameters;}\par
00406     {\cf19 if} (lba_mode == LBA_MODE_48) \{\par
00407         ide_write_register(channel, ATA_REG_SECCOUNT1, 0);\par
00408         ide_write_register(channel, ATA_REG_LBA3, lba_io[3]);\par
00409         ide_write_register(channel, ATA_REG_LBA4, lba_io[4]);\par
00410         ide_write_register(channel, ATA_REG_LBA5, lba_io[5]);\par
00411     \}\par
00412     ide_write_register(channel, ATA_REG_SECCOUNT0, num_sectors);\par
00413     ide_write_register(channel, ATA_REG_LBA0, lba_io[0]);\par
00414     ide_write_register(channel, ATA_REG_LBA1, lba_io[1]);\par
00415     ide_write_register(channel, ATA_REG_LBA2, lba_io[2]);\par
00416 \par
00417     {\cf20 // (VI) Select the command and send it;}\par
00418     {\cf19 if} (lba_mode == LBA_MODE_CHS && dma == 0 && direction == ATA_READ) cmd = ATA_CMD_READ_PIO;\par
00419     {\cf19 if} (lba_mode == LBA_MODE_28 && dma == 0 && direction == ATA_READ) cmd = ATA_CMD_READ_PIO;\par
00420     {\cf19 if} (lba_mode == LBA_MODE_48 && dma == 0 && direction == ATA_READ) cmd = ATA_CMD_READ_PIO_EXT;\par
00421     {\cf19 if} (lba_mode == LBA_MODE_CHS && dma == 1 && direction == ATA_READ) cmd = ATA_CMD_READ_DMA;\par
00422     {\cf19 if} (lba_mode == LBA_MODE_28 && dma == 1 && direction == ATA_READ) cmd = ATA_CMD_READ_DMA;\par
00423     {\cf19 if} (lba_mode == LBA_MODE_48 && dma == 1 && direction == ATA_READ) cmd = ATA_CMD_READ_DMA_EXT;\par
00424     {\cf19 if} (lba_mode == LBA_MODE_CHS && dma == 0 && direction == ATA_WRITE) cmd = ATA_CMD_WRITE_PIO;\par
00425     {\cf19 if} (lba_mode == LBA_MODE_28 && dma == 0 && direction == ATA_WRITE) cmd = ATA_CMD_WRITE_PIO;\par
00426     {\cf19 if} (lba_mode == LBA_MODE_48 && dma == 0 && direction == ATA_WRITE) cmd = ATA_CMD_WRITE_PIO_EXT;\par
00427     {\cf19 if} (lba_mode == LBA_MODE_CHS && dma == 1 && direction == ATA_WRITE) cmd = ATA_CMD_WRITE_DMA;\par
00428     {\cf19 if} (lba_mode == LBA_MODE_28 && dma == 1 && direction == ATA_WRITE) cmd = ATA_CMD_WRITE_DMA;\par
00429     {\cf19 if} (lba_mode == LBA_MODE_48 && dma == 1 && direction == ATA_WRITE) cmd = ATA_CMD_WRITE_DMA_EXT;\par
00430     ide_write_register(channel, ATA_REG_COMMAND, cmd);  {\cf20 // Send the Command.}\par
00431 \par
00432     {\cf19 if} (dma) \{\par
00433         tty_printf({\cf22 "DMA!!!"});\par
00434         {\cf19 if} (direction == ATA_READ) \{\par
00435             {\cf20 // DMA Read}\par
00436             \par
00437         \} {\cf19 else} \{\par
00438             {\cf20 // DMA write}\par
00439         \}\par
00440     \} {\cf19 else} {\cf19 if} (direction == ATA_READ) \{\par
00441         {\cf20 // PIO Read.}\par
00442         {\cf19 for} (i = 0; i < num_sectors; i++) \{\par
00443             {\cf19 if} ((err = ide_polling(channel, 1)))\par
00444                 {\cf19 return} err;  {\cf20 // Polling, set error and exit if there is.}\par
00445 \par
00446             {\cf20 // save es segment and repeat insw(read stream of shorts) instruction util no of sectors are read into buffer}\par
00447             {\cf17 asm} {\cf17 volatile}({\cf22 "pushw %es"});\par
00448             {\cf17 asm} {\cf17 volatile}({\cf22 "rep insw"}\par
00449                 :\par
00450                 : {\cf22 "c"}(words), {\cf22 "d"}(bus), {\cf22 "D"}(buffer));  {\cf20 // Receive Data.}\par
00451             {\cf17 asm} {\cf17 volatile}({\cf22 "popw %es"});\par
00452             buffer += (words * 2);\par
00453         \}\par
00454     \} {\cf19 else} \{\par
00455         {\cf20 // PIO Write.}\par
00456         {\cf19 for} (i = 0; i < num_sectors; i++) \{\par
00457             ide_polling(channel, 0);  {\cf20 // Polling.}\par
00458             {\cf20 // save es segment and repeat outsw(write stream of shorts) instruction util no of sectors are written to ide device}\par
00459             {\cf17 asm} {\cf17 volatile}({\cf22 "pushw %ds"});\par
00460             {\cf17 asm} {\cf17 volatile}({\cf22 "rep outsw"} ::{\cf22 "c"}(words), {\cf22 "d"}(bus), {\cf22 "S"}(buffer));  {\cf20 // Send Data}\par
00461             {\cf17 asm} {\cf17 volatile}({\cf22 "popw %ds"});\par
00462             buffer += (words * 2);\par
00463         \}\par
00464         {\cf20 // send the flush commands}\par
00465         ide_write_register(channel, ATA_REG_COMMAND, ({\cf18 char}[])\{ATA_CMD_CACHE_FLUSH, ATA_CMD_CACHE_FLUSH, ATA_CMD_CACHE_FLUSH_EXT\}[lba_mode]);\par
00466         ide_polling(channel, 0);  {\cf20 // Polling.}\par
00467     \}\par
00468 \par
00469     {\cf19 return} 0;  {\cf20 // Easy, isn't it?}\par
00470 \}\par
00471 \par
00472 {\cf18 void} ide_wait_irq() \{\par
00473     {\cf19 while} (!g_ide_irq_invoked)\par
00474         ;\par
00475     g_ide_irq_invoked = 0;\par
00476 \}\par
00477 {\cf18 void} ide_irq() \{\par
00478     g_ide_irq_invoked = 1;\par
00479 \}\par
00480 \par
00481 {\cf20 // start from lba = 0}\par
00482 int32_t ide_read_sectors(uint8_t drive, uint8_t num_sectors, uint32_t lba, uint32_t buffer) \{\par
00483     {\cf20 // 1: Check if the drive presents:}\par
00484     {\cf19 if} (drive > MAXIMUM_IDE_DEVICES || g_ide_devices[drive].reserved == 0) \{\par
00485         tty_printf({\cf22 "IDE ERROR: Drive not found\\n"});\par
00486         {\cf19 return} -1;\par
00487     \}\par
00488     {\cf20 // 2: Check if inputs are valid:}\par
00489     {\cf19 else} {\cf19 if} (((lba + num_sectors) > g_ide_devices[drive].size) && (g_ide_devices[drive].type == IDE_ATA)) \{\par
00490         tty_printf({\cf22 "IDE ERROR: LBA address(0x%x) is greater than the available drive sectors(0x%x)\\n"}, lba, g_ide_devices[drive].size);\par
00491         {\cf19 return} -2;\par
00492     \}\par
00493     {\cf20 // 3: Read in PIO Mode through Polling & IRQs:}\par
00494     {\cf19 else} \{\par
00495         uint8_t err;\par
00496         {\cf19 if} (g_ide_devices[drive].type == IDE_ATA)\par
00497             err = ide_ata_access(ATA_READ, drive, lba, num_sectors, buffer);\par
00498         {\cf20 // print32_t if any error in reading}\par
00499         {\cf19 return} ide_print_error(drive, err);\par
00500     \}\par
00501     {\cf19 return} 0;\par
00502 \}\par
00503 \par
00504 {\cf20 // start from lba = 0}\par
00505 int32_t ide_write_sectors(uint8_t drive, uint8_t num_sectors, uint32_t lba, uint32_t buffer) \{\par
00506     {\cf20 // 1: Check if the drive presents:}\par
00507     {\cf19 if} (drive > MAXIMUM_IDE_DEVICES || g_ide_devices[drive].reserved == 0) \{\par
00508         tty_printf({\cf22 "IDE ERROR: Drive not found\\n"});\par
00509         {\cf19 return} -1;\par
00510     \}\par
00511     {\cf20 // 2: Check if inputs are valid:}\par
00512     {\cf19 else} {\cf19 if} (((lba + num_sectors) > g_ide_devices[drive].size) && (g_ide_devices[drive].type == IDE_ATA)) \{\par
00513         tty_printf({\cf22 "IDE ERROR: LBA address(0x%x) is greater than the available drive sectors(0x%x)\\n"}, lba, g_ide_devices[drive].size);\par
00514         {\cf19 return} -2;\par
00515     \} {\cf19 else} \{\par
00516         uint8_t err;\par
00517         {\cf19 if} (g_ide_devices[drive].type == IDE_ATA)\par
00518             err = ide_ata_access(ATA_WRITE, drive, lba, num_sectors, buffer);\par
00519         {\cf20 // print32_t if any error in writing}\par
00520         {\cf19 return} ide_print_error(drive, err);\par
00521     \}\par
00522     {\cf19 return} 0;\par
00523 \}\par
00524 \par
00525 {\cf18 void} ata_init() \{\par
00526     ide_init(0x1F0, 0x3F6, 0x170, 0x376, 0x000);\par
00527 \par
00528     {\cf20 /*for(int32_t i = 0; i < MAXIMUM_IDE_DEVICES; i++) \{}\par
00529 {\cf20         tty_printf("%d ide_device: [%s]\\n", i, g_ide_devices[i].model);}\par
00530 {\cf20     \}*/}\par
00531     qemu_log({\cf22 "ATA installed"});\par
00532 \}\par
00533 \par
00534 int32_t ata_get_drive_by_model({\cf17 const} {\cf18 char} *model) \{\par
00535     int32_t i;\par
00536     {\cf19 for}(i = 0; i < MAXIMUM_IDE_DEVICES; i++) \{\par
00537         {\cf19 if}(strcmp(({\cf17 const} {\cf18 char}*)g_ide_devices[i].model, ({\cf18 char} *)model) == 0)\par
00538             {\cf19 return} i;\par
00539     \}\par
00540     {\cf19 return} -1;\par
00541 \}\par
00542 \par
00543 {\cf18 int} ata_status_wait({\cf18 int} io_base, {\cf18 int} timeout) \{\par
00544     {\cf18 int} status;\par
00545 \par
00546     {\cf19 if} (timeout > 0) \{\par
00547         {\cf18 int} i = 0;\par
00548         {\cf19 while} ((status = inb(io_base + ATA_REG_STATUS)) & ATA_SR_BSY && (i < timeout)) i++;\par
00549     \} {\cf19 else} \{\par
00550         {\cf19 while} ((status = inb(io_base + ATA_REG_STATUS)) & ATA_SR_BSY);\par
00551     \}\par
00552     {\cf19 return} status;\par
00553 \}\par
00554 \par
00555 {\cf18 void} ata_io_wait(int32_t io_base) \{\par
00556     inb(io_base + ATA_REG_ALTSTATUS);\par
00557     inb(io_base + ATA_REG_ALTSTATUS);\par
00558     inb(io_base + ATA_REG_ALTSTATUS);\par
00559     inb(io_base + ATA_REG_ALTSTATUS);\par
00560 \}\par
00561 \par
00562 int32_t ata_wait(int32_t io, int32_t adv) \{\par
00563     uint8_t status = 0;\par
00564 \par
00565     ata_io_wait(io);\par
00566 \par
00567     status = ata_status_wait(io, -1);\par
00568 \par
00569     {\cf19 if} (adv) \{\par
00570         status = inb(io + ATA_REG_STATUS);\par
00571         {\cf19 if} (status & ATA_SR_ERR) {\cf19 return} 1;\par
00572         {\cf19 if} (status & ATA_SR_DF)  {\cf19 return} 1;\par
00573         {\cf19 if} (!(status & ATA_SR_DRQ)) {\cf19 return} 1;\par
00574     \}\par
00575 \par
00576     {\cf19 return} 0;\par
00577 \}\par
00578 \par
00579 {\cf18 int} ata_read_one_sector_dma({\cf17 struct} ata_dma_priv *adp, {\cf18 char} *buf, {\cf18 size_t} lba) \{\par
00580     uint16_t io = ATA_PRIMARY_IO;\par
00581     uint8_t  dr = ATA_MASTER;\par
00582     {\cf20 /* XXX: io & dr need to be dynamic once multiple ATA devices}\par
00583 {\cf20      * are implemented}\par
00584 {\cf20      */}\par
00585 \par
00586     uint8_t cmd = 0xE0;\par
00587     {\cf18 int} errors = 0;\par
00588     uint8_t slavebit = 0x00;\par
00589 \par
00590     ata_wait(io, 0);\par
00591 \par
00592     {\cf20 /* set up DMA transfer by sending STOP */}\par
00593     outb(adp->adp_busmaster, 0x00);\par
00594 \par
00595     {\cf20 /* send the PRDT */}\par
00596     outl(adp->adp_busmaster + 0x04, kv2p(adp->adp_dma_prdt));\par
00597 \par
00598     {\cf20 /* enable ERR & IRQ status */}\par
00599     outb(adp->adp_busmaster + 0x02,\par
00600                 inb(adp->adp_busmaster + 0x02) | 0x04 | 0x02);\par
00601 \par
00602     {\cf20 /* set direction */}\par
00603     outb(adp->adp_busmaster, 0x08);\par
00604 \par
00605     {\cf20 /* wait till the device is ready */}\par
00606     {\cf19 while} (1) \{\par
00607         uint8_t status = inb(io + ATA_REG_STATUS);\par
00608         {\cf19 if} (!(status & ATA_SR_BSY)) {\cf19 break};\par
00609     \}\par
00610 \par
00611     {\cf20 //printk("ata: lba: %d\\n", lba);}\par
00612     outb(io + ATA_REG_CONTROL, 0x00);\par
00613 \par
00614     outb(io + ATA_REG_HDDEVSEL, (cmd | (uint8_t)((lba >> 24 & 0x0F))));\par
00615     ata_io_wait(io);\par
00616     outb(io + ATA_REG_FEATURES, 0x00);\par
00617     outb(io + ATA_REG_SECCOUNT0, 1);\par
00618     outb(io + ATA_REG_LBA0, (uint8_t)(lba));\par
00619     outb(io + ATA_REG_LBA1, (uint8_t)(lba >> 8));\par
00620     outb(io + ATA_REG_LBA2, (uint8_t)(lba >> 16));\par
00621 \par
00622     {\cf20 /* wait again */}\par
00623     {\cf20 //printk("about to wait 1\\n");}\par
00624     {\cf19 while} (1) \{\par
00625         uint8_t status = inb(io + ATA_REG_STATUS);\par
00626         {\cf19 if} (!(status & ATA_SR_BSY) && (status & ATA_SR_DRDY)) {\cf19 break};\par
00627     \}\par
00628     {\cf20 //printk("finished wait 1\\n");}\par
00629 \par
00630     outb(io + ATA_REG_COMMAND, ATA_CMD_READ_DMA);\par
00631 \par
00632     {\cf20 //printk("about to wait 2\\n");}\par
00633     ata_io_wait(io);\par
00634     {\cf20 //printk("finished wait 2\\n");}\par
00635 \par
00636     outb(adp->adp_busmaster, 0x08 | 0x01);\par
00637 \par
00638     {\cf20 //printk("about to wait 3\\n");}\par
00639     {\cf19 while} (1) \{\par
00640         {\cf18 int} status = inb(adp->adp_busmaster + 0x02);\par
00641         {\cf18 int} dstatus = inb(io + ATA_REG_STATUS);\par
00642         {\cf19 if} (!(status & 0x04)) \{\par
00643             {\cf19 continue};\par
00644         \}\par
00645         {\cf19 if} (!(dstatus & ATA_SR_BSY)) \{\par
00646             {\cf19 break};\par
00647         \}\par
00648     \}\par
00649     {\cf20 //printk("finished wait 3\\n");}\par
00650 \par
00651     memcpy(buf, adp->adp_dma_area, 512);\par
00652 \par
00653     outb(adp->adp_busmaster+ 0x2, inb(adp->adp_busmaster + 0x02) | 0x04 | 0x02);\par
00654 \par
00655     {\cf19 return} 0;\par
00656 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cmos.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/cmos.c}
{\xe \v kernel/src/drivers/cmos.c}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 {\cf21 #define CURRENT_YEAR        2022    }{\cf20 // Change this each year!}\par
00004  \par
00005 int32_t century_register = 0x00;     {\cf20 // Set by ACPI table parsing code if possible}\par
00006  \par
00007 {\cf18 unsigned} {\cf18 char} second;\par
00008 {\cf18 unsigned} {\cf18 char} minute;\par
00009 {\cf18 unsigned} {\cf18 char} hour;\par
00010 {\cf18 unsigned} {\cf18 char} day;\par
00011 {\cf18 unsigned} {\cf18 char} month;\par
00012 uint32_t year;\par
00013 {\cf18 unsigned} {\cf18 char} century;\par
00014 \par
00015 {\cf18 unsigned} {\cf18 char} last_second;\par
00016 {\cf18 unsigned} {\cf18 char} last_minute;\par
00017 {\cf18 unsigned} {\cf18 char} last_hour;\par
00018 {\cf18 unsigned} {\cf18 char} last_day;\par
00019 {\cf18 unsigned} {\cf18 char} last_month;\par
00020 {\cf18 unsigned} {\cf18 char} last_year;\par
00021 {\cf18 unsigned} {\cf18 char} last_century;\par
00022 {\cf18 unsigned} {\cf18 char} registerB;\par
00023 \par
00024 {\cf17 enum} \{\par
00025     cmos_address = 0x70,\par
00026     cmos_data    = 0x71\par
00027 \};\par
00028  \par
00029 int32_t get_update_in_progress_flag() \{\par
00030     outb(cmos_address, 0x0A);\par
00031     {\cf19 return} (inb(cmos_data) & 0x80);\par
00032 \}\par
00033  \par
00034 {\cf18 unsigned} {\cf18 char} get_RTC_register(int32_t reg) \{\par
00035     outb(cmos_address, reg);\par
00036     {\cf19 return} inb(cmos_data);\par
00037 \}\par
00038  \par
00039 {\cf18 void} read_rtc() \{\par
00040 \par
00041  \par
00042     {\cf20 // Note: This uses the "read registers until you get the same values twice in a row" technique}\par
00043     {\cf20 //     to avoid getting dodgy/inconsistent values due to RTC updates}\par
00044  \par
00045     {\cf19 while} (get_update_in_progress_flag());          {\cf20 // Make sure an update isn't in progress}\par
00046     second = get_RTC_register(0x00);\par
00047     minute = get_RTC_register(0x02);\par
00048     hour = get_RTC_register(0x04);\par
00049     day = get_RTC_register(0x07);\par
00050     month = get_RTC_register(0x08);\par
00051     year = get_RTC_register(0x09);\par
00052     {\cf19 if}(century_register != 0) \{\par
00053         century = get_RTC_register(century_register);\par
00054     \}\par
00055  \par
00056     {\cf19 do} \{\par
00057         last_second = second;\par
00058         last_minute = minute;\par
00059         last_hour = hour;\par
00060         last_day = day;\par
00061         last_month = month;\par
00062         last_year = year;\par
00063         last_century = century;\par
00064  \par
00065         {\cf19 while} (get_update_in_progress_flag());       {\cf20 // Make sure an update isn't in progress}\par
00066         second = get_RTC_register(0x00);\par
00067         minute = get_RTC_register(0x02);\par
00068         hour = get_RTC_register(0x04);\par
00069         day = get_RTC_register(0x07);\par
00070         month = get_RTC_register(0x08);\par
00071         year = get_RTC_register(0x09);\par
00072         {\cf19 if}(century_register != 0) \{\par
00073             century = get_RTC_register(century_register);\par
00074         \}\par
00075     \} {\cf19 while}( (last_second != second) || (last_minute != minute) || (last_hour != hour) ||\par
00076            (last_day != day) || (last_month != month) || (last_year != year) ||\par
00077            (last_century != century) );\par
00078  \par
00079     registerB = get_RTC_register(0x0B);\par
00080  \par
00081     {\cf20 // Convert BCD to binary values if necessary}\par
00082  \par
00083     {\cf19 if} (!(registerB & 0x04)) \{\par
00084         second = (second & 0x0F) + ((second / 16) * 10);\par
00085         minute = (minute & 0x0F) + ((minute / 16) * 10);\par
00086         hour = ( (hour & 0x0F) + (((hour & 0x70) / 16) * 10) ) | (hour & 0x80);\par
00087         day = (day & 0x0F) + ((day / 16) * 10);\par
00088         month = (month & 0x0F) + ((month / 16) * 10);\par
00089         year = (year & 0x0F) + ((year / 16) * 10);\par
00090         {\cf19 if}(century_register != 0) \{\par
00091             century = (century & 0x0F) + ((century / 16) * 10);\par
00092         \}\par
00093     \}\par
00094  \par
00095     {\cf20 // Convert 12 hour clock to 24 hour clock if necessary}\par
00096  \par
00097     {\cf19 if} (!(registerB & 0x02) && (hour & 0x80)) \{\par
00098         hour = ((hour & 0x7F) + 12) % 24;\par
00099     \}\par
00100  \par
00101     {\cf20 // Calculate the full (4-digit) year}\par
00102  \par
00103     {\cf19 if}(century_register != 0) \{\par
00104         year += century * 100;\par
00105     \} {\cf19 else} \{\par
00106         year += (CURRENT_YEAR / 100) * 100;\par
00107         {\cf19 if}(year < CURRENT_YEAR) year += 100;\par
00108     \}\par
00109 \}\par
00110 \par
00111 {\cf18 int} isleap({\cf18 int} year) \{\par
00112     {\cf19 return} year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);\par
00113 \}\par
00114 \par
00115 {\cf17 struct }synapse_time get_time() \{\par
00116     read_rtc();\par
00117     {\cf17 struct }synapse_time time = \{\par
00118         second, minute, hour, day, month, year, century\par
00119     \};\par
00120     {\cf19 return} time;\par
00121 \}\par
00122 \par
00123 {\cf18 unsigned} {\cf18 int} synapse_time_to_unix({\cf17 struct} synapse_time ktime) \{\par
00124     {\cf18 unsigned} {\cf18 int} t = 0;\par
00125     {\cf18 unsigned} {\cf18 char} cmdt = (isleap(ktime.year)?synapse_months_leap[ktime.month-1]:synapse_months[ktime.month-1]);\par
00126 \par
00127     t += ktime.seconds;\par
00128     t += ktime.minutes*60;\par
00129     t += ktime.hours*60*60;\par
00130     t += ktime.day*60*60*24;\par
00131     t += ktime.month*60*60*24*cmdt;\par
00132     t -= 33555600; {\cf20 // WHAT A MAGIC???}\par
00133     t += (ktime.year-1970)*60*60*24*cmdt*12;\par
00134     {\cf19 return} t;\par
00135 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ac97.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/experimental/ac97.c}
{\xe \v kernel/src/drivers/experimental/ac97.c}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // AC'97 Driver by NDRAEY}\par
00002 \par
00003 {\cf21 #include <kernel.h>}\par
00004 \par
00005 {\cf21 #include "../../../include/libk/stdbool.h"}\par
00006 {\cf21 #include "../../../include/libk/stdint.h"}\par
00007 {\cf21 #include "../../../include/libk/stdio.h"}\par
00008 {\cf21 #include <io/ports.h>}\par
00009 \par
00010 {\cf18 void} ac97_init() \{\par
00011     {\cf18 int} retval = pci_read(\par
00012         pci_get_device(0x8086, 0x2415, -1),\par
00013         PCI_BAR0\par
00014     );\par
00015 \par
00016     tty_printf({\cf22 "[AC'97] Returned value: %d\\n"}, retval);\par
00017 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
floppy.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/experimental/floppy.c}
{\xe \v kernel/src/drivers/experimental/floppy.c}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00009 {\cf21 #include <kernel.h>}\par
00010 \par
00011 {\cf17 static} {\cf17 volatile} {\cf18 bool} done = {\cf17 false};\par
00012 {\cf17 static} {\cf18 bool} dchange = {\cf17 false};\par
00013 {\cf17 static} {\cf18 bool} motor = {\cf17 false};\par
00014 {\cf17 static} {\cf18 int} mtick = 0;\par
00015 {\cf17 static} {\cf17 volatile} {\cf18 int} tmout = 0;\par
00016 {\cf17 static} uint8_t status[7] = \{ 0 \};\par
00017 {\cf17 static} uint8_t statsz = 0;\par
00018 {\cf17 static} uint8_t sr0 = 0;\par
00019 {\cf17 static} uint8_t fdc_track = 0xff;\par
00020 \par
00021 {\cf17 typedef} {\cf17 struct }floppy_info\{\par
00022     int8_t *type_name;\par
00023     int8_t heads;\par
00024     int8_t tracks;\par
00025     int8_t sectors;\par
00026     uint16_t sector_size;\par
00027     int8_t gap_len;\par
00028 \} floppy_info_t;\par
00029 \par
00030 \par
00031 {\cf17 static} floppy_info_t floppy_drive_types[] = \{\par
00032     \{{\cf22 "NONE"},            0,  0,  0,   0,    0\},\par
00033     \{{\cf22 "360KB 5.25\\""},    2, 40,  9, 512, 0x2A\},\par
00034     \{{\cf22 "1.2MB 5.25\\""},    2, 80, 15, 512, 0x2A\},\par
00035     \{{\cf22 "720KB 3.5\\""},     2, 80,  9, 512, 0x1B\},\par
00036     \{{\cf22 "1.44MB 3.5\\""},    2, 80, 18, 512, 0x1B\},\par
00037     \{{\cf22 "2.88MB 3.5\\""},    2, 80, 36, 512, 0x1B\}\par
00038 \};\par
00039 \par
00040 \par
00045 {\cf18 void} floppy_handler(regs_t *r) \{\par
00046     tty_printf({\cf22 "\\nInterrupt!\\n"});\par
00047     done = {\cf17 true};\par
00048 \}\par
00049 \par
00050 \par
00058 {\cf18 bool} floppy_wait({\cf18 bool} sensei) \{\par
00059     {\cf19 while} (!done) \{\par
00060         {\cf17 asm} {\cf17 volatile}({\cf22 "hlt"});\par
00061     \}\par
00062 \}\par
00063 \par
00064 \par
00065 \par
00070 {\cf18 void} floppy_reset() \{\par
00071     qemu_log({\cf22 "FDC_DOR 0"});\par
00072     {\cf20 // \'CE\'F1\'F2\'E0\'ED\'E0\'E2\'EB\'E8\'E2\'E0\'E5\'EC \'EC\'EE\'F2\'EE\'F0 \'E8 \'E2\'FB\'EA\'EB\'FE\'F7\'E0\'E5\'EC IRQ/DMA}\par
00073     outb(FDC_DOR,0);\par
00074    \par
00075     mtick = 0;\par
00076     motor = {\cf17 false};\par
00077 \par
00078     qemu_log({\cf22 "FDC_DRS 0"});\par
00079     {\cf20 // C\'EA\'EE\'F0\'EE\'F1\'F2\'FC \'EF\'E5\'F0\'E5\'E4\'E0\'F7\'E8 \'E4\'E0\'ED\'ED\'FB\'F5 \'EF\'F0\'EE\'E3\'F0\'E0\'EC\'EC\'FB (500K/s) }\par
00080     outb(FDC_DRS,0);\par
00081 \par
00082     qemu_log({\cf22 "FDC_DOR 0x0c"});\par
00083     {\cf20 // \'D1\'ED\'EE\'E2\'E0 \'F0\'E0\'E7\'F0\'E5\'F8\'E0\'E5\'EC \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'FF}\par
00084     {\cf20 //outb(FDC_DOR, 0x0C);}\par
00085 \par
00086     {\cf20 // \'C6\'E4\'E5\'EC \'EF\'EE\'EA\'E0 \'EF\'EE\'EB\'F3\'F7\'E8\'EC \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'E5}\par
00087     done = {\cf17 false};\par
00088     qemu_log({\cf22 "floppy_wait 1"});\par
00089     floppy_wait({\cf17 true});\par
00090 \}\par
00091 \par
00092 \par
00098 {\cf18 bool} floppy_install() \{\par
00099     qemu_log({\cf22 "Installing Floppy driver..."});\par
00100 \par
00101     {\cf20 /* }\par
00102 {\cf20         \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FE \'EE \'EA\'EE\'ED\'F2\'F0\'EE\'EB\'EB\'E5\'F0\'E0\'F5 Floppy \'F7\'E5\'F0\'E5\'E7 CMOS, }\par
00103 {\cf20         \'CD\'EE\'EC\'E5\'F0 \'EF\'EE\'F0\'F2\'E0 = 0x70, 0x71, }\par
00104 {\cf20         \'D0\'E5\'E3\'E8\'F1\'F2\'F0 = 0x10 }\par
00105 {\cf20     */}\par
00106     outb(0x70, 0x10);\par
00107     uint8_t drives = inb(0x71);\par
00108 \par
00109     tty_printf({\cf22 "Floppy drives:\\n"});\par
00110     {\cf19 if} ((drives >> 4) > 0) \{\par
00111         tty_printf({\cf22 "\\t-A: [%s]\\n"}, floppy_drive_types[drives >> 4].type_name);\par
00112     \}\par
00113 \par
00114     {\cf19 if} ((drives & 0xf) > 0) \{\par
00115         tty_printf({\cf22 "\\t-B: [%s]\\n"}, floppy_drive_types[drives & 0xf].type_name);\par
00116     \}\par
00117     qemu_log({\cf22 "Setup interrupts"});\par
00118     {\cf20 // \'D2\'E0\'EA \'EA\'E0\'EA floppy \'E8\'EC\'E5\'E5\'F2 IRQ - 6, \'E0 IRQ \'ED\'E0\'F7\'E8\'ED\'E0\'FE\'F2\'F1\'FF \'F1 33(\'EA\'EB\'E0\'E2\'E8\'E0\'F2\'F3\'F0\'E0), \'F2\'EE \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'E5 \'E1\'F3\'E4\'E5\'F2 32 + 6 = 38}\par
00119     register_interrupt_handler(32 + 6, &floppy_handler);\par
00120 \par
00121     qemu_log({\cf22 "IRQ_clear_mask"});\par
00122     {\cf20 // \'D7\'F2\'EE\'E1\'FB \'EF\'F0\'E8\'ED\'E8\'EC\'E0\'F2\'FC \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'FF \'EA\'EE\'ED\'F2\'F0\'EE\'EB\'EB\'E5\'F0\'E0, \'EE\'F7\'E8\'F1\'F2\'E8\'EC \'EC\'E0\'F1\'EA\'F3 IRQ}\par
00123     IRQ_clear_mask(6);\par
00124 \par
00125     qemu_log({\cf22 "floppy_reset"});\par
00126     {\cf20 //floppy_reset();}\par
00127 \par
00128     {\cf19 return} {\cf17 true};\par
00129 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mouse.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/experimental/mouse.c}
{\xe \v kernel/src/drivers/experimental/mouse.c}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // From https://github.com/rgimad/EOS/blob/master/kernel/devices/mouse.c}\par
00002 \par
00003 {\cf21 #include <drivers/mouse.h>}\par
00004 {\cf21 #include <kernel.h>}\par
00005 \par
00006 uint8_t mouse_ready = 0;\par
00007 int32_t mouse_x  = 0;\par
00008 int32_t mouse_y  = 0;\par
00009 \par
00010 uint8_t mouse_b1 = 0;\par
00011 uint8_t mouse_b2 = 0;\par
00012 uint8_t mouse_b3 = 0;\par
00013 uint8_t mouse_b4 = 0;\par
00014 uint8_t mouse_b5 = 0;\par
00015 \par
00016 {\cf18 unsigned} {\cf18 int} xmax;\par
00017 {\cf18 unsigned} {\cf18 int} ymax;\par
00018 \par
00019 {\cf18 int} mouse_wheel = 0;\par
00020 \par
00021 {\cf20 // This shouldn't be used outside of mouse driver.}\par
00022 {\cf17 typedef} {\cf17 struct }mouse_flags_byte \{\par
00023     {\cf18 unsigned} {\cf18 int} left_button   : 1;\par
00024     {\cf18 unsigned} {\cf18 int} right_button  : 1;\par
00025     {\cf18 unsigned} {\cf18 int} middle_button : 1;\par
00026 \par
00027     {\cf18 unsigned} {\cf18 int} always1 : 1;\par
00028 \par
00029     {\cf18 unsigned} {\cf18 int} x_sign : 1;\par
00030     {\cf18 unsigned} {\cf18 int} y_sign : 1;\par
00031 \par
00032     {\cf18 unsigned} {\cf18 int} x_overflow : 1;\par
00033     {\cf18 unsigned} {\cf18 int} y_overflow : 1;\par
00034 \} __attribute__((packed)) mouse_flags_byte;\par
00035 \par
00036 {\cf17 struct }dev_ps2m_mouse_packet \{\par
00037     int16_t movement_x;\par
00038     int16_t movement_y;\par
00039     uint8_t button_l;\par
00040     uint8_t button_m;\par
00041     uint8_t button_r;\par
00042 \} ps2m_buffer;\par
00043 \par
00044 {\cf18 void} mouse_parse_packet({\cf17 const} {\cf18 char} *buf, uint8_t has_wheel, uint8_t has_5_buttons) \{\par
00045     mouse_flags_byte *mfb = (mouse_flags_byte*) (buf);\par
00046     {\cf19 if} (mfb->x_overflow || mfb->y_overflow || !mfb->always1) \{\par
00047         {\cf19 return};\par
00048     \}\par
00049 \par
00050     {\cf18 int} offx = (int16_t) (0xff00 * mfb->x_sign) | buf[1];\par
00051     {\cf18 int} offy = (int16_t) (0xff00 * mfb->y_sign) | buf[2];\par
00052     mouse_x += offx;\par
00053     mouse_y -= offy;\par
00054     mouse_b1 = mfb->left_button;\par
00055     mouse_b2 = mfb->right_button;\par
00056     mouse_b3 = mfb->middle_button;\par
00057     ps2m_buffer.movement_x = offx;\par
00058     ps2m_buffer.movement_y = offy;\par
00059     ps2m_buffer.button_l = mouse_b1;\par
00060     ps2m_buffer.button_r = mouse_b2;\par
00061     ps2m_buffer.button_m = mouse_b3;\par
00062 \par
00063     {\cf19 if} (has_wheel) \{\par
00064         {\cf20 // Parse wheel (byte 3, bits 0-3)}\par
00065         mouse_wheel += (char) ((!!(buf[3] & 0x8)) * 0xf8 | (buf[3] & 0x7));\par
00066         {\cf19 if} (has_5_buttons) \{\par
00067             mouse_b4 = !!(buf[3] & 0x10);\par
00068             mouse_b4 = !!(buf[3] & 0x20);\par
00069             {\cf20 // parse buttons 4-5 (byte 3, bits 4-5)}\par
00070         \}\par
00071     \}\par
00072 \}\par
00073 \par
00074 {\cf18 void} mouse_handler(__attribute__((unused)) {\cf17 struct} regs *r) \{\par
00075     uint8_t status = inb(0x64);\par
00076     {\cf19 if} ((status & 1) == 0 || (status >> 5 & 1) == 0) \{\par
00077         {\cf19 return};\par
00078     \}\par
00079 \par
00080     {\cf17 static} {\cf18 int} recbyte = 0;\par
00081     {\cf17 static} {\cf18 char} mousebuf[16];\par
00082 \par
00083     mousebuf[recbyte++] = inb(0x60);\par
00084     {\cf19 if} (recbyte == 3) \{\par
00085         recbyte = 0;\par
00086         mouse_parse_packet(mousebuf, 0, 0);\par
00087 \par
00088         {\cf19 if} (mouse_x < 0) mouse_x = 0;\par
00089         {\cf19 if} (mouse_y < 0) mouse_y = 0;\par
00090         {\cf19 if} (mouse_x > xmax) mouse_x = xmax;\par
00091         {\cf19 if} (mouse_y > ymax) mouse_y = ymax;\par
00092     \}\par
00093 \}\par
00094 \par
00095 {\cf18 int} mouse_getx() \{ {\cf19 return} mouse_x; \}\par
00096 {\cf18 int} mouse_gety() \{ {\cf19 return} mouse_y; \}\par
00097 {\cf18 int} mouse_getb1() \{ {\cf19 return} mouse_b1; \}\par
00098 {\cf18 int} mouse_getb2() \{ {\cf19 return} mouse_b2; \}\par
00099 {\cf18 int} mouse_getb3() \{ {\cf19 return} mouse_b3; \}\par
00100 {\cf18 int} mouse_getb4() \{ {\cf19 return} mouse_b4; \}\par
00101 {\cf18 int} mouse_getb5() \{ {\cf19 return} mouse_b5; \}\par
00102 \par
00103 {\cf18 void} mouse_wait(uint8_t a_type) \{\par
00104     uint32_t _time_out = 100000;\par
00105     {\cf19 if} (a_type == 0) \{\par
00106         {\cf19 while} (_time_out--) \{\par
00107             {\cf19 if} ((inb(0x64) & 1) == 1) \{\par
00108                 {\cf19 return};\par
00109             \}\par
00110         \}\par
00111         {\cf19 return};\par
00112     \} {\cf19 else} \{\par
00113         {\cf19 while} (_time_out--) \{ {\cf20 //Signal}\par
00114             {\cf19 if} ((inb(0x64) & 2) == 0) \{\par
00115                 {\cf19 return};\par
00116             \}\par
00117         \}\par
00118         {\cf19 return};\par
00119     \}\par
00120 \}\par
00121 \par
00122 {\cf18 void} mouse_write(uint8_t a_write) \{\par
00123     mouse_wait(1);\par
00124     outb(0x64, 0xD4);\par
00125     mouse_wait(1);\par
00126     outb(0x60, a_write);\par
00127 \}\par
00128 \par
00129 uint8_t mouse_read() \{\par
00130     mouse_wait(0);\par
00131     {\cf19 return} inb(0x60);\par
00132 \}\par
00133 \par
00134 {\cf18 void} mouse_install() \{\par
00135     uint8_t _status;  {\cf20 //unsigned char}\par
00136 \par
00137     {\cf20 // Enable the auxiliary mouse device}\par
00138     mouse_wait(1);\par
00139     outb(0x64, 0xA8);\par
00140 \par
00141     {\cf20 // Enable the interrupts}\par
00142     mouse_wait(1);\par
00143     outb(0x64, 0x20);\par
00144     mouse_wait(0);\par
00145     _status = (inb(0x60) | 2);\par
00146     mouse_wait(1);\par
00147     outb(0x64, 0x60);\par
00148     mouse_wait(1);\par
00149     outb(0x60, _status);\par
00150 \par
00151     {\cf20 // Tell the mouse to use default settings}\par
00152     mouse_write(0xF6);\par
00153     mouse_read(); {\cf20 // Acknowledge}\par
00154 \par
00155     {\cf20 // Enable the mouse}\par
00156     mouse_write(0xF4);\par
00157     mouse_read(); {\cf20 // Acknowledge}\par
00158 \par
00159     {\cf20 // Set cursor coordinates in middle of the screen}\par
00160     mouse_x = 0;\par
00161     mouse_y = 0;\par
00162 \par
00163     register_interrupt_handler(MOUSE_IDT_INDEX, &mouse_handler);\par
00164     mouse_ready = 1;\par
00165 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sb16.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/experimental/sb16.c}
{\xe \v kernel/src/drivers/experimental/sb16.c}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*    \'C4\'F0\'E0\'E9\'E2\'E5\'F0 SoundBlaster 16}\par
00002 {\cf20  *}\par
00003 {\cf20  *    By Andrey(David) Pavlenko aka NDRAEY}\par
00004 {\cf20  */} \par
00005 \par
00006 {\cf20 // \'CD\'E0\'EC \'ED\'F3\'E6\'ED\'EE \'EC\'E5\'F1\'F2\'EE \'E2 \'EF\'F0\'E5\'E4\'E5\'EB\'E0\'F5 0x00100000 - 0x00FFFFFF}\par
00007 {\cf20 // SoundBlaster 16 \'F0\'E0\'E1\'EE\'F2\'E0\'E5\'F2 \'F2\'EE\'EB\'FC\'EA\'EE \'F1 \'ED\'E8\'EC\'E8.}\par
00008 {\cf20 // \'C2\'EE\'E7\'FC\'EC\'E5\'EC \'E3\'E4\'E5-\'ED\'E8\'E1\'F3\'E4\'FC \'E0\'E4\'F0\'E5\'F1 \'F1 \'E4\'EB\'E8\'ED\'EE\'E9 8192 \'E1\'E0\'E9\'F2}\par
00009 \par
00010 {\cf21 #define LOAD        0x00100000 }{\cf20 // This address causes the error!}\par
00011 {\cf21 #define LOAD_LENGTH 8192}\par
00012 \par
00013 {\cf18 char} can_play_audio = 0;\par
00014 {\cf21 #include <drivers/experimental/sb16.h>}\par
00015 {\cf21 #include <libk/string.h>}\par
00016 {\cf18 char}* driver_memory = ({\cf18 char}*)LOAD;\par
00017 \par
00018 {\cf18 char} sb16_init() \{\par
00019     {\cf18 char} audio = sb16_dsp_reset();\par
00020     {\cf19 if}(audio==0xFFFFFFFF) \{\par
00021         {\cf19 return} 0;\par
00022     \}{\cf19 else}\{\par
00023         vmm_alloc_page(LOAD);\par
00024         can_play_audio=1;\par
00025         {\cf19 return} 1;\par
00026     \}\par
00027 \}\par
00028 \par
00029 {\cf18 void} sb16_dsp_write({\cf18 char} cmd) \{\par
00030     {\cf19 while}(inb(DSP_WRITE) & 128);\par
00031     outb(DSP_WRITE, cmd);\par
00032 \}\par
00033 \par
00034 {\cf18 char} sb16_can_play_audio() \{\par
00035     {\cf19 return} can_play_audio;\par
00036 \}\par
00037 \par
00038 {\cf18 char} sb16_dsp_reset() \{\par
00039     outb(DSP_RESET, 1);\par
00040     {\cf19 for}({\cf18 char} _ = 0; _<32; _++) \{{\cf17 asm} {\cf17 volatile}({\cf22 ""});\}\par
00041     outb(DSP_RESET, 0);\par
00042 \par
00043     {\cf19 return} inb(DSP_READ);\par
00044 \}\par
00045 \par
00046 {\cf18 void} sb16_set_irq({\cf18 char} irq) \{\par
00047     outb(DSP_MIXER_PORT, 0x80);\par
00048     outb(DSP_MIXER_DATA, irq);\par
00049 \}\par
00050 \par
00051 {\cf18 void} sb16_turn_speaker_on() \{\par
00052     {\cf20 //outb(DSP_WRITE, 0xD1);}\par
00053     sb16_dsp_write(0xD1);\par
00054 \}\par
00055 \par
00056 {\cf20 /*}\par
00057 {\cf20 void sb16_program_dma8(char channel, int address, short length) \{}\par
00058 {\cf20     length -= 1;}\par
00059 {\cf20     outb(0x0A, 4+(channel%4));}\par
00060 {\cf20     outb(0x0C, 1);}\par
00061 {\cf20     outb(0x0B, 0x58+(channel%4));}\par
00062 {\cf20     char page = address>>16;}\par
00063 {\cf20     char lop  = address%(address>>8);}\par
00064 {\cf20     char hip  = (address>>8)%(page<<8);}\par
00065 {\cf20     outb(0x83, page);}\par
00066 {\cf20     outb(0x02, lop);}\par
00067 {\cf20     outb(0x02, hip);}\par
00068 {\cf20     char lol = length%((length>>8)<<8);}\par
00069 {\cf20     char hil = (length>>8);}\par
00070 {\cf20     outb(0x03, lol);}\par
00071 {\cf20     outb(0x03, hil);}\par
00072 {\cf20     outb(0x0A, channel%4);}\par
00073 {\cf20 \}}\par
00074 {\cf20 */}\par
00075 \par
00076 {\cf18 void} sb16_program_dma16({\cf18 char} channel, {\cf18 int} address, {\cf18 short} length) \{\par
00077     length -= 1;\par
00078     outb(0xD4, 4+(channel%4)); {\cf20 // Channel}\par
00079     outb(0xD8, 1); {\cf20 // Flip-flop}\par
00080     outb(0xD6, 0b10110000); {\cf20 // 16-bit sound, no FIFO}\par
00081     {\cf18 char} page = (address&0xFF0000)>>16;  {\cf20 // 0x[AA]BBCC}\par
00082     {\cf18 char} lop  = address&0x0000FF;        {\cf20 // 0xAABB[CC]}\par
00083     {\cf18 char} hip  = (address&0x00FF00)>>8;   {\cf20 // 0xAA[BB]CC}\par
00084     outb(0x8B, page);\par
00085     outb(0xC4, lop);\par
00086     outb(0xC4, hip);\par
00087     {\cf18 char} lol = (length&0x00FF);\par
00088     {\cf18 char} hil = (length&0xFF00)>>8;\par
00089     outb(0xC6, lol);\par
00090     outb(0xC6, hil);\par
00091     outb(0xD4, channel);\par
00092 \}\par
00093 \par
00094 {\cf18 char} sb16_calculate_time_constant({\cf18 char} channels, {\cf18 short} sampling_rate) \{\par
00095     {\cf19 return} 65536-(256000000/(channels*sampling_rate));\par
00096 \}\par
00097 \par
00098 {\cf18 void} sb16_program({\cf18 short} sampling_rate, {\cf18 char} channels, {\cf18 char} eightbit, {\cf18 char} sign, {\cf18 short} length) \{\par
00099     length -= 1;\par
00100     {\cf20 /*}\par
00101 {\cf20     outb(DSP_WRITE, 0x40);}\par
00102 {\cf20     outb(DSP_WRITE, sb16_calculate_time_constant(channels, sampling_rate));}\par
00103 {\cf20     outb(DSP_WRITE, eightbit?0xC0:0xB0);}\par
00104 {\cf20     outb(DSP_WRITE, (channels>=1?0b00100000:0)|(sign>=1?0b00010000:0));}\par
00105 {\cf20     outb(DSP_WRITE, length&0x00FF);}\par
00106 {\cf20     outb(DSP_WRITE, (length&0xFF00)>>8);}\par
00107 {\cf20     */}\par
00108 \par
00109     sb16_dsp_write(0x40);\par
00110     {\cf20 // sb16_dsp_write(sb16_calculate_time_constant(channels, sampling_rate));}\par
00111     sb16_dsp_write(109);\par
00112     sb16_dsp_write(eightbit?0xC0:0xB0);\par
00113     sb16_dsp_write((channels>=1?0b00100000:0)|(sign>=1?0b00010000:0));\par
00114     sb16_dsp_write(length&0x00FF);\par
00115     sb16_dsp_write((length&0xFF00)>>8);\par
00116     \par
00117 \}\par
00118 \par
00119 {\cf18 void} sb16_set_master_volume({\cf18 char} left, {\cf18 char} right) \{\par
00120     outb(DSP_MIXER_PORT, DSP_M_MAST_VOLU);\par
00121     outb(DSP_MIXER_DATA, right|(left<<4));\par
00122 \}\par
00123 \par
00124 {\cf20 // WARNING: This causes the #PF: Page Fault!}\par
00125 {\cf18 void} sb16_play_audio({\cf18 char} *data, {\cf18 short} sampling_rate, {\cf18 char} channels, {\cf18 char} eightbit, {\cf18 char} sign, {\cf18 int} length) \{\par
00126     {\cf20 // 1. Reset DSP}\par
00127     sb16_dsp_reset();\par
00128     {\cf18 int} loaded = 0;\par
00129     {\cf18 int} address = ({\cf18 void}*)data;\par
00130 \par
00131     {\cf20 // 3. Set master volume}\par
00132     sb16_set_master_volume(0xC, 0xC);\par
00133     {\cf20 // 4. Turn speaker on}\par
00134     sb16_turn_speaker_on();\par
00135     {\cf20 // 6, 7, 8, 9, 10}\par
00136     sb16_program(sampling_rate, channels, eightbit, sign, LOAD_LENGTH);\par
00137     \par
00138     {\cf20 // Load sound data to memory}\par
00139     {\cf19 while}(loaded<length-1) \{\par
00140         memcpy(driver_memory, data, LOAD_LENGTH);\par
00141         sb16_program_dma16(channels, driver_memory, LOAD_LENGTH);\par
00142         loaded+=LOAD_LENGTH;\par
00143         data+=LOAD_LENGTH;\par
00144     \}\par
00145 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
keyboard.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/keyboard.c}
{\xe \v kernel/src/drivers/keyboard.c}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 {\cf20 /*}\par
00003 {\cf20   0 - none}\par
00004 {\cf20   1 - shell}\par
00005 {\cf20   2 - getchar}\par
00006 {\cf20   3 - gets}\par
00007 {\cf20   4 - getcode}\par
00008 {\cf20 */}\par
00009 int32_t input_type = 1, SHIFT = 0, string_mem_counter = 0;\par
00010 {\cf18 char} keycode, last_char; \par
00011 {\cf18 char} string_mem[256];\par
00012 {\cf18 char} last_string[256];\par
00013 int32_t lastkey = 0;        {\cf20 // ID \'EF\'EE\'F1\'EB\'E5\'E4\'ED\'E5\'E9 \'ED\'E0\'E6\'E0\'F2\'EE\'E9 \'EA\'ED\'EE\'EF\'EA\'E8}\par
00014 int32_t lastkeyinset;   {\cf20 // \'CF\'EE\'F1\'EB\'E5\'E4\'ED\'E8\'E9 \'F2\'E8\'EA \'ED\'E0\'E6\'E0\'F2\'E8\'FF \'EA\'ED\'EE\'EF\'EA\'E8}\par
00015 int32_t enabledKeyboard = 0;\par
00016 \par
00017 {\cf20 // \'D1\'EC\'E5\'ED\'E0 \'F1\'EE\'F1\'F2\'EE\'FF\'ED\'E8\'FF \'E4\'EB\'FF \'E2\'FB\'E2\'EE\'E4\'E0 \'ED\'E0 \'FD\'EA\'F0\'E0\'ED \'EA\'EB\'E0\'E2\'E8\'E0\'F2\'F3\'F0\'FB}\par
00018 {\cf18 void} changeStageKeyboard(int32_t s)\{\par
00019     enabledKeyboard = s;\par
00020 \}\par
00021 int32_t keyLastInset()\{\par
00022     {\cf19 if} (lastkeyinset+5 > timer_get_ticks())\{\par
00023         {\cf19 return} lastkey;\par
00024     \}\par
00025     {\cf19 return} 0;\par
00026 \}\par
00027 \par
00028 {\cf18 unsigned}  {\cf18 char} keyboard_map[] = \{\par
00029     0, \par
00030     27, {\cf20 //`}\par
00031     {\cf23 '1'}, {\cf23 '2'},  {\cf23 '3'}, {\cf23 '4'},  {\cf23 '5'}, {\cf23 '6'},  {\cf23 '7'}, {\cf23 '8'},  {\cf23 '9'},  {\cf23 '0'}, \par
00032     {\cf23 '-'}, {\cf23 '='},  \par
00033     {\cf23 '\\b'},   {\cf20 /*  Backspace  */}\par
00034     {\cf23 '\\t'},           {\cf20 /*  Tab  */}\par
00035     {\cf23 'q'}, {\cf23 'w'},  {\cf23 'e'}, {\cf23 'r'},    {\cf20 /*  19 */}\par
00036     {\cf23 't'}, {\cf23 'y'},  {\cf23 'u'}, {\cf23 'i'},  {\cf23 'o'}, {\cf23 'p'},  {\cf23 '['}, {\cf23 ']'},  {\cf23 '\\n'},   {\cf20 /*  Enter  key  */}\par
00037     0,          {\cf20 /*  29 - Control */}\par
00038     {\cf23 'a'}, {\cf23 's'},  {\cf23 'd'}, {\cf23 'f'},  {\cf23 'g'}, {\cf23 'h'},  {\cf23 'j'}, {\cf23 'k'},  {\cf23 'l'}, {\cf23 ';'},   {\cf20 /*  39 */}\par
00039     {\cf23 '\\''},  {\cf23 '`'}, \par
00040     -2,     {\cf20 /*  Left shift 42 */}\par
00041     {\cf23 '\\\\'},  {\cf23 'z'}, {\cf23 'x'},  {\cf23 'c'}, {\cf23 'v'},  {\cf23 'b'}, {\cf23 'n'},          {\cf20 /*  49 */}\par
00042     {\cf23 'm'}, {\cf23 ','},  {\cf23 '.'}, {\cf23 '/'},  \par
00043     -2,             {\cf20 /*  Right  shift  54*/}\par
00044     {\cf23 '*'},\par
00045     0,  {\cf20 /*  Alt  */}\par
00046     {\cf23 ' '},    {\cf20 /*  Space  bar  */}\par
00047     -1, {\cf20 /*  Caps lock  */}\par
00048     0,  {\cf20 /*  59 - F1  key  ...  >  */}\par
00049     0, 0,  0, 0,  0, 0,  0, 0,\par
00050     0,  {\cf20 /*  <  ...  F10  */}\par
00051     0,  {\cf20 /*  69 - Num lock*/}\par
00052     0,  {\cf20 /*  Scroll Lock  */}\par
00053     0,  {\cf20 /*  Home key */}\par
00054     0,  {\cf20 /*  Up Arrow */}\par
00055     0,  {\cf20 /*  Page Up  */}\par
00056     {\cf23 '-'},\par
00057     0,  {\cf20 /*  Left Arrow */}\par
00058     0,\par
00059     0,  {\cf20 /*  Right  Arrow  */}\par
00060     {\cf23 '+'},\par
00061     0,  {\cf20 /*  79 - End key*/}\par
00062     0,  {\cf20 /*  Down Arrow */}\par
00063     0,  {\cf20 /*  Page Down  */}\par
00064     0,  {\cf20 /*  Insert Key */}\par
00065     0,  {\cf20 /*  Delete Key */}\par
00066     0, 0,  0,\par
00067     0,  {\cf20 /*  F11  Key  */}\par
00068     0,  {\cf20 /*  F12  Key  */}\par
00069     0,  {\cf20 /*  All  other  keys are undefined */}\par
00070 \};\par
00071 \par
00072 {\cf18 unsigned}  {\cf18 char} keyboard_map_shifted[] = \{\par
00073     0, \par
00074     27, {\cf20 //`}\par
00075     {\cf23 '!'}, {\cf23 '@'},  {\cf23 '#'}, {\cf23 '$'},  {\cf23 '%'}, {\cf23 '^'},  {\cf23 '&'}, {\cf23 '*'},  {\cf23 '('},  {\cf23 ')'}, \par
00076     {\cf23 '_'}, {\cf23 '+'},  \par
00077     {\cf23 '\\b'},   {\cf20 /*  Backspace  */}\par
00078     {\cf23 '\\t'},           {\cf20 /*  Tab  */}\par
00079     {\cf23 'Q'}, {\cf23 'W'},  {\cf23 'E'}, {\cf23 'R'},    {\cf20 /*  19 */}\par
00080     {\cf23 'T'}, {\cf23 'Y'},  {\cf23 'U'}, {\cf23 'I'},  {\cf23 'O'}, {\cf23 'P'},  {\cf23 '\{'}, {\cf23 '\}'},  {\cf23 '\\n'},   {\cf20 /*  Enter  key  */}\par
00081     0,          {\cf20 /*  29 - Control */}\par
00082     {\cf23 'A'}, {\cf23 'S'},  {\cf23 'D'}, {\cf23 'F'},  {\cf23 'G'}, {\cf23 'H'},  {\cf23 'J'}, {\cf23 'K'},  {\cf23 'L'}, {\cf23 ':'},   {\cf20 /*  39 */}\par
00083     {\cf23 '"'},  {\cf23 '`'}, \par
00084     1,      {\cf20 /*  Left shift */}\par
00085     {\cf23 '|'},  {\cf23 'Z'}, {\cf23 'X'},  {\cf23 'C'}, {\cf23 'V'},  {\cf23 'B'}, {\cf23 'N'},           {\cf20 /*  49 */}\par
00086     {\cf23 'M'}, {\cf23 '<'},  {\cf23 '>'}, {\cf23 '?'},  \par
00087     1,              {\cf20 /*  Right  shift  */}\par
00088     {\cf23 '*'},\par
00089     0,  {\cf20 /*  Alt  */}\par
00090     {\cf23 ' '},    {\cf20 /*  Space  bar  */}\par
00091     -1, {\cf20 /*  Caps lock  */}\par
00092     0,  {\cf20 /*  59 - F1  key  ...  >  */}\par
00093     0, 0,  0, 0,  0, 0,  0, 0,\par
00094     0,  {\cf20 /*  <  ...  F10  */}\par
00095     0,  {\cf20 /*  69 - Num lock*/}\par
00096     0,  {\cf20 /*  Scroll Lock  */}\par
00097     0,  {\cf20 /*  Home key */}\par
00098     0,  {\cf20 /*  Up Arrow */}\par
00099     0,  {\cf20 /*  Page Up  */}\par
00100     {\cf23 '-'},\par
00101     0,  {\cf20 /*  Left Arrow */}\par
00102     0,\par
00103     0,  {\cf20 /*  Right  Arrow  */}\par
00104     {\cf23 '+'},\par
00105     0,  {\cf20 /*  79 - End key*/}\par
00106     0,  {\cf20 /*  Down Arrow */}\par
00107     0,  {\cf20 /*  Page Down  */}\par
00108     0,  {\cf20 /*  Insert Key */}\par
00109     0,  {\cf20 /*  Delete Key */}\par
00110     0, 0,  0,\par
00111     0,  {\cf20 /*  F11  Key  */}\par
00112     0,  {\cf20 /*  F12  Key  */}\par
00113     0,  {\cf20 /*  All  other  keys are undefined */}\par
00114 \};\par
00115 \par
00116 \par
00117 \par
00118 {\cf18 void} keyboard_install({\cf18 void}) \{\par
00119     input_type = 1;\par
00120     register_interrupt_handler(33, &keyboard_handler_main);\par
00121     IRQ_clear_mask(33 - 32); {\cf20 // - 32 \'EF\'EE\'F2\'EE\'EC\'F3 \'F7\'F2\'EE \'EF\'EE\'F1\'EB\'E5 \'F0\'E5\'EC\'E0\'EF\'EF\'E8\'ED\'E3\'E0 \'ED\'EE\'EC\'E5\'F0\'E0 \'F1\'EC\'E5\'F9\'E0\'FE\'F2\'F1\'FF \'ED\'E0 32}\par
00122     qemu_log({\cf22 "Keyboard installed"});\par
00123 \}\par
00124 \par
00125 {\cf18 void} keyboard_handler_main({\cf17 struct} regs *r) \{\par
00126 \par
00127     {\cf18 unsigned} {\cf18 char} status;\par
00128 \par
00129     {\cf20 // \'C7\'E0\'EF\'E8\'F1\'FC EOI }\par
00130     outb(0x20, 0x20);\par
00131 \par
00132     status = inb(KEYBOARD_STATUS_PORT);\par
00133 \par
00134     {\cf20 // \'CF\'F0\'EE\'E2\'E5\'F0\'FF\'E5\'EC \'F1\'F2\'E0\'F2\'F3\'F1 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'FF \'ED\'E8\'E6\'ED\'E8\'E9 \'E1\'E8\'F2}\par
00135     {\cf19 if} (status & 0x01) \{\par
00136         {\cf19 if} (enabledKeyboard == 2)\{\par
00137             {\cf19 return};\par
00138         \}\par
00139         keycode = inb(KEYBOARD_DATA_PORT);\par
00140         lastkey = keycode;\par
00141         lastkeyinset = timer_get_ticks();\par
00142         {\cf20 //qemu_log("KEY %d", keycode);}\par
00143 \par
00144         {\cf19 if} (input_type == 0) \{\par
00145             {\cf19 return};\par
00146         \}\par
00147         {\cf19 if} (keycode == 72) \{\par
00148             {\cf19 if} (enabledKeyboard == 1)\{\par
00149                 tty_printf({\cf22 "72!"});\par
00150             \}\par
00151             {\cf20 // \'CE\'F7\'E8\'F1\'F2\'EA\'E0 \'F1\'F2\'F0\'EE\'EA\'EE\'E2\'EE\'E9 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00152             \par
00153             {\cf19 while} (string_mem_counter != 0) \{\par
00154                 string_mem_counter--;\par
00155                 string_mem[string_mem_counter] = 0;\par
00156                 tty_backspace();\par
00157             \}\par
00158 \par
00159             {\cf19 if} (enabledKeyboard == 1)\{\par
00160                 tty_printf({\cf22 "string_mem_counter = %d\\n"}, string_mem_counter);\par
00161             \}\par
00162             string_mem_counter = strlen(last_string);  \par
00163             strcpy(string_mem, last_string); \par
00164             {\cf19 if} (enabledKeyboard == 1)\{\par
00165                 tty_printf({\cf22 "last_string = [%s]\\n"}, last_string);\par
00166                 tty_printf(last_string);\par
00167             \}\par
00168             {\cf19 return};\par
00169         \}  \par
00170         {\cf19 if} (input_type == 2) \{\par
00171             {\cf19 if} (keycode < 0)\{\par
00172                 {\cf19 return};\par
00173             \}\par
00174             {\cf19 if} (keycode == 42) \{\par
00175                 SHIFT = 1;\par
00176                 {\cf19 return};\par
00177             \} {\cf19 else} \{\par
00178                 {\cf19 if} (SHIFT) \{\par
00179                     last_char =  keyboard_map_shifted[({\cf18 unsigned} char) keycode];\par
00180                 \} {\cf19 else} \{\par
00181                     last_char = keyboard_map[({\cf18 unsigned} char) keycode];\par
00182                 \}\par
00183                 SHIFT = 0;\par
00184             \}\par
00185             input_type = -2;\par
00186             \par
00187             {\cf19 return};\par
00188         \}\par
00189         \par
00190         {\cf19 if} (keycode == 28) \{\par
00191             input_type = -3;\par
00192             {\cf19 return};\par
00193         \}\par
00194         {\cf19 if} (keycode == -100)\{\par
00195             memset(string_mem, 0, 256);\par
00196             string_mem_counter = 0;\par
00197             {\cf19 return};\par
00198         \}\par
00199 \par
00200         {\cf19 if} (keycode == 42) \{\par
00201             SHIFT = 1;\par
00202             {\cf19 return};\par
00203         \}\par
00204         {\cf19 if} (keycode < 0)\{\par
00205             {\cf19 return};\par
00206         \}\par
00207         {\cf19 if} (SHIFT) \{\par
00208             last_char =  keyboard_map_shifted[({\cf18 unsigned} char) keycode];\par
00209         \} {\cf19 else} \{\par
00210             last_char = keyboard_map[({\cf18 unsigned} char) keycode];\par
00211         \}\par
00212         SHIFT = 0;\par
00213         \par
00214         {\cf19 if} (input_type == 2) \{\par
00215             input_type = 0;\par
00216             \par
00217             {\cf19 return};\par
00218         \}\par
00219         {\cf19 if} (input_type == 4) \{\par
00220             input_type = 0;\par
00221             \par
00222             {\cf19 return};\par
00223         \}\par
00224         {\cf20 // \'CA\'E5\'E9\'EA\'EE\'E4 14 \'FD\'F2\'EE \'E1\'E5\'EA\'F1\'EF\'E5\'E9\'F1}\par
00225         {\cf19 if} (keycode == 14) \{\par
00226 \par
00227             {\cf19 if} (string_mem_counter != 0) \{\par
00228                 string_mem_counter--;\par
00229                 string_mem[string_mem_counter] = 0;\par
00230 \par
00231                 tty_backspace();\par
00232             \}\par
00233             {\cf19 return};\par
00234         \}\par
00235         {\cf19 if} (input_type == 3) \{\par
00236             {\cf20 //qemu_log("getch: %d ", keycode);}\par
00237             input_type = -2;\par
00238         \}\par
00239 \par
00240         {\cf19 if} (keycode == ENTER_KEY_CODE) \{\par
00241             {\cf19 if} (enabledKeyboard == 1)\{\par
00242                 tty_printf({\cf22 "\\nlast_string[%s]string_mem[%s]"}, last_string, string_mem);\par
00243             \}\par
00244             strcpy(last_string, string_mem);\par
00245             {\cf19 if} (enabledKeyboard == 1)\{\par
00246                 tty_printf({\cf22 "\\nlast_string[%s]string_mem[%s]\\n"}, last_string, string_mem);\par
00247             \}\par
00248             {\cf19 if} (input_type == 1) \{\par
00249                 string_mem_counter = 0;\par
00250                 memset(string_mem, 0, 256);\par
00251             \}\par
00252             {\cf19 return};\par
00253         \}\par
00254 \par
00255 \par
00256         {\cf19 if} (string_mem_counter >= 256) \{\par
00257             tty_printf({\cf22 "\\nBuffer string_mem is full!!"});\par
00258             {\cf19 return};\par
00259         \}\par
00260 \par
00261         string_mem[string_mem_counter] = last_char;\par
00262         string_mem_counter++;\par
00263 \par
00264         {\cf19 if} (keycode < 0) \{\par
00265             {\cf19 return};\par
00266         \}\par
00267         {\cf19 if} (enabledKeyboard == 1)\{\par
00268             tty_putchar(last_char);\par
00269         \}\par
00270         qemu_log({\cf22 "key = %c (index %d)"}, keyboard_map[({\cf18 unsigned} {\cf18 char}) keycode], ({\cf18 unsigned} {\cf18 char}) keycode);\par
00271     \}\par
00272 \}\par
00273 \par
00274 int32_t keyboard_getchar() \{\par
00275     input_type = 2;\par
00276 \par
00277     {\cf19 while} (input_type != -2) \{\par
00278         {\cf17 asm} {\cf17 volatile}({\cf22 "hlt"});\par
00279         {\cf20 //keyboard_handler_main();}\par
00280     \}\par
00281 \par
00282     input_type = 1;\par
00283     tty_putchar(last_char);\par
00284 \par
00285     {\cf19 return} last_char;\par
00286 \}\par
00287 \par
00288 \par
00289 int32_t keyboard_getscancode() \{\par
00290     {\cf17 struct }regs *r;\par
00291 \par
00292     input_type = 4;\par
00293 \par
00294     keyboard_handler_main(r);\par
00295 \par
00296     {\cf19 for} (int32_t i = 512; i != 0; i--)\{\par
00297         {\cf19 if} (keycode == -100)\{\par
00298             keyboard_handler_main(r);\par
00299         \} {\cf19 else} \{\par
00300             qemu_log({\cf22 "keyboard_getscancode %d, after^ %d "}, keycode, i);\par
00301             {\cf19 return} keycode;\par
00302         \}\par
00303     \}\par
00304     \par
00305     qemu_log({\cf22 "keyboard_getscancode %d "}, keycode);\par
00306     {\cf19 return} keycode;\par
00307 \}\par
00308 \par
00309 \par
00310 {\cf18 char} *keyboard_gets() \{\par
00311     input_type = 3;\par
00312     {\cf20 //qemu_log("2");}\par
00313 \par
00314     {\cf19 while} (input_type != -3) \{\par
00315         {\cf20 //qemu_log("3");}\par
00316         {\cf17 asm} {\cf17 volatile}({\cf22 "hlt"});\par
00317         {\cf20 //keyboard_handler_main();}\par
00318     \}\par
00319     {\cf20 //tty_printf("\\nstring [%s]", string_mem);}\par
00320     \par
00321     {\cf19 return} string_mem;\par
00322 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
arp.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/network/arp.c}
{\xe \v kernel/src/drivers/network/arp.c}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 arp_table_entry_t arp_table[512];\par
00005 {\cf18 int} arp_table_size;\par
00006 {\cf18 int} arp_table_curr;\par
00007 \par
00008 uint8_t broadcast_mac_address[] = \{0xff, 0xff, 0xff, 0xff, 0xff, 0xff\};\par
00009 \par
00010 {\cf18 void} arp_handle_packet(arp_packet_t * arp_packet, {\cf18 int} len) \{\par
00011     {\cf18 char} dst_hardware_addr[6];\par
00012     {\cf18 char} dst_protocol_addr[4];\par
00013 \par
00014     {\cf20 // \'D1\'EE\'F5\'F0\'E0\'ED\'E5\'FF\'E5\'EC \'ED\'E5\'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E4\'E0\'ED\'ED\'FB\'E5 \'EF\'E0\'EA\'E5\'F2\'E0}\par
00015     memcpy(dst_hardware_addr, arp_packet->src_hardware_addr, 6);\par
00016     memcpy(dst_protocol_addr, arp_packet->src_protocol_addr, 4);\par
00017 \}\par
00018 \par
00019 {\cf18 void} arp_send_packet(uint8_t * dst_hardware_addr, uint8_t * dst_protocol_addr) \{\par
00020 \}\par
00021 \par
00022 {\cf18 void} arp_lookup_add(uint8_t * ret_hardware_addr, uint8_t * ip_addr) \{\par
00023 \}\par
00024 \par
00025 {\cf18 int} arp_lookup(uint8_t * ret_hardware_addr, uint8_t * ip_addr) \{\par
00026 \}\par
00027 \par
00028 {\cf18 void} arp_init() \{\par
00029     uint8_t broadcast_ip[4];\par
00030     uint8_t broadcast_mac[6];\par
00031 \par
00032     memset(broadcast_ip, 0xff, 4);\par
00033     memset(broadcast_mac, 0xff, 6);\par
00034 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dhcp.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/network/dhcp.c}
{\xe \v kernel/src/drivers/network/dhcp.c}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 {\cf18 char} ip_addr[4];\par
00004 {\cf18 int} is_ip_allocated;\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ethernet.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/network/ethernet.c}
{\xe \v kernel/src/drivers/network/ethernet.c}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 {\cf18 int} ethernet_send_packet(uint8_t * dst_mac_addr, uint8_t * data, {\cf18 int} len, uint16_t protocol) \{\par
00005     {\cf19 return} len;\par
00006 \}\par
00007 \par
00008 {\cf18 void} ethernet_handle_packet(ethernet_frame_t * packet, {\cf18 int} len) \{\par
00009 \}\par
00010 \par
00011 {\cf18 void} ethernet_init() \{\par
00012 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ip.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/network/ip.c}
{\xe \v kernel/src/drivers/network/ip.c}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 uint8_t my_ip[] = \{10, 0, 2, 14\};\par
00005 uint8_t test_target_ip[] = \{10, 0, 2, 15\};\par
00006 uint8_t zero_hardware_addr[] = \{0,0,0,0,0,0\};\par
00007 \par
00008 \par
00009 {\cf18 void} get_ip_str({\cf18 char} * ip_str, uint8_t * ip) \{\par
00010     tty_printf({\cf22 "%s %d.%d.%d.%d"}, ip_str, ip[0], ip[1], ip[2], ip[3]);\par
00011 \}\par
00012 \par
00013 \par
00014 uint16_t ip_calculate_checksum(ip_packet_t * packet) \{\par
00015     {\cf18 int} array_size = {\cf17 sizeof}(ip_packet_t) / 2;\par
00016     uint16_t * array = (uint16_t*)packet;\par
00017     uint8_t * array2 = (uint8_t*)packet;\par
00018     uint32_t sum = 0;\par
00019     {\cf19 for}({\cf18 int} i = 0; i < array_size; i++) \{\par
00020         sum += flip_short(array[i]);\par
00021     \}\par
00022     uint32_t carry = sum >> 16;\par
00023     sum = sum & 0x0000ffff;\par
00024     sum = sum + carry;\par
00025     uint16_t ret = ~sum;\par
00026     {\cf19 return} ret;\par
00027 \}\par
00028 \par
00029 {\cf18 void} ip_send_packet(uint8_t * dst_ip, {\cf18 void} * data, {\cf18 int} len) \{\par
00030 \}\par
00031 \par
00032 \par
00033 {\cf18 void} ip_handle_packet(ip_packet_t * packet) \{\par
00034     \par
00035 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
net_utils.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/network/net_utils.c}
{\xe \v kernel/src/drivers/network/net_utils.c}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 uint16_t flip_short(uint16_t short_int) \{\par
00004     uint32_t first_byte = *((uint8_t*)(&short_int));\par
00005     uint32_t second_byte = *((uint8_t*)(&short_int) + 1);\par
00006     {\cf19 return} (first_byte << 8) | (second_byte);\par
00007 \}\par
00008 \par
00009 uint32_t flip_long(uint32_t long_int) \{\par
00010     uint32_t first_byte = *((uint8_t*)(&long_int));\par
00011     uint32_t second_byte = *((uint8_t*)(&long_int) + 1);\par
00012     uint32_t third_byte = *((uint8_t*)(&long_int)  + 2);\par
00013     uint32_t fourth_byte = *((uint8_t*)(&long_int) + 3);\par
00014     {\cf19 return} (first_byte << 24) | (second_byte << 16) | (third_byte << 8) | (fourth_byte);\par
00015 \}\par
00016 \par
00017 {\cf20 /*}\par
00018 {\cf20  * Flip two parts within a byte}\par
00019 {\cf20  * For example, 0b11110000 will be 0b00001111 instead}\par
00020 {\cf20  * This is necessary because endiness is also relevant to byte, where there are two fields in one byte.}\par
00021 {\cf20  * number_bits: number of bits of the less significant field}\par
00022 {\cf20  * */}\par
00023 uint8_t flip_byte(uint8_t {\cf18 byte}, {\cf18 int} num_bits) \{\par
00024     uint8_t t = {\cf18 byte} << (8 - num_bits);\par
00025     {\cf19 return} t | ({\cf18 byte} >> num_bits);\par
00026 \}\par
00027 \par
00028 uint8_t htonb(uint8_t {\cf18 byte}, {\cf18 int} num_bits) \{\par
00029     {\cf19 return} flip_byte({\cf18 byte}, num_bits);\par
00030 \}\par
00031 \par
00032 uint8_t ntohb(uint8_t {\cf18 byte}, {\cf18 int} num_bits) \{\par
00033     {\cf19 return} flip_byte({\cf18 byte}, 8 - num_bits);\par
00034 \}\par
00035 \par
00036 \par
00037 uint16_t htons(uint16_t hostshort) \{\par
00038     {\cf19 return} flip_short(hostshort);\par
00039 \}\par
00040 \par
00041 uint32_t htonl(uint32_t hostlong) \{\par
00042     {\cf19 return} flip_long(hostlong);\par
00043 \}\par
00044 \par
00045 uint16_t ntohs(uint16_t netshort) \{\par
00046     {\cf19 return} flip_short(netshort);\par
00047 \}\par
00048 \par
00049 uint32_t ntohl(uint32_t netlong) \{\par
00050     {\cf19 return} flip_long(netlong);\par
00051 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RTL8139.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/network/RTL8139.c}
{\xe \v kernel/src/drivers/network/RTL8139.c}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 RTL8139_dev_t RTL8139_device;\par
00005 pci_dev_t pci_RTL8139_device;\par
00006 int32_t RTL8139_io_addres = 0; \par
00007 uint32_t RTL8139_ret;\par
00008 uint32_t RTL8139_raw_mac[2];\par
00009 \par
00010 \par
00011 {\cf20 // \'D7\'E5\'F2\'FB\'F0\'E5 \'F0\'E5\'E3\'E8\'F1\'F2\'F0\'E0 TXAD, \'E2\'FB \'E4\'EE\'EB\'E6\'ED\'FB \'EA\'E0\'E6\'E4\'FB\'E9 \'F0\'E0\'E7 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'F2\'FC \'E4\'F0\'F3\'E3\'EE\'E9 \'E4\'EB\'FF \'EE\'F2\'EF\'F0\'E0\'E2\'EA\'E8 \'EF\'E0\'EA\'E5\'F2\'E0 (\'ED\'E0\'EF\'F0\'E8\'EC\'E5\'F0, \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'F2\'FC \'EF\'E5\'F0\'E2\'FB\'E9, \'E2\'F2\'EE\'F0\'EE\'E9... \'F7\'E5\'F2\'E2\'E5\'F0\'F2\'FB\'E9 \'E8 \'EE\'E1\'F0\'E0\'F2\'ED\'EE \'EA \'EF\'E5\'F0\'E2\'EE\'EC\'F3)}\par
00012 uint8_t TSAD_array[4] = \{0x20, 0x24, 0x28, 0x2C\};\par
00013 uint8_t TSD_array[4] = \{0x10, 0x14, 0x18, 0x1C\};\par
00014 {\cf20 /*}\par
00015 {\cf20 static struct board board_tbl[] = \{}\par
00016 {\cf20     \{"RealTek", "RealTek RTL8139+", BUSTYPE_PCI, PCI_UNITCODE(0x10ec, 0x8139), 0xffffffff, 0, 0, 0x20, 0xff, RTL8139D_CAPS\},}\par
00017 {\cf20     \{"RealTek", "RealTek RTL8139C Fast Ethernet", BUSTYPE_PCI, PCI_UNITCODE(0x10ec, 0x8139), 0xffffffff, 0, 0, 0x10, 0xff, RTL8139_CAPS\},}\par
00018 {\cf20     \{"RealTek", "RealTek RTL8129 Fast Ethernet", BUSTYPE_PCI, PCI_UNITCODE(0x10ec, 0x8129), 0xffffffff, 0, 0, 0, 0, RTL8129_CAPS\},}\par
00019 {\cf20     \{"RealTek", "RealTek RTL8139 Fast Ethernet", BUSTYPE_PCI, PCI_UNITCODE(0x10ec, 0x8139), 0xffffffff, 0, 0, 0, 0, RTL8139_CAPS\},}\par
00020 {\cf20     \{"RealTek", "RealTek RTL8139B PCI",  BUSTYPE_PCI, PCI_UNITCODE(0x10ec, 0x8138), 0xffffffff, 0, 0, 0, 0, RTL8139_CAPS\},}\par
00021 {\cf20     \{"Accton", "Accton EN-1207D Fast Ethernet Adapter", BUSTYPE_PCI, PCI_UNITCODE(0x1113, 0x1211), 0xffffffff, PCI_UNITCODE(0x1113, 0x9211), 0xffffffff, 0, 0, RTL8139_CAPS\},}\par
00022 {\cf20     \{"SMC", "SMC1211TX EZCard 10/100 (RealTek RTL8139)", BUSTYPE_PCI, PCI_UNITCODE(0x1113, 0x1211), 0xffffffff, 0, 0, 0, 0, RTL8139_CAPS\},}\par
00023 {\cf20     \{"D-Link", "D-Link DFE-538TX (RTL8139)", BUSTYPE_PCI, PCI_UNITCODE(0x1186, 0x1300), 0xffffffff, 0, 0, 0, 0, RTL8139_CAPS\},}\par
00024 {\cf20     \{"LevelOne", "LevelOne FPC-0106Tx (RTL8139)", BUSTYPE_PCI, PCI_UNITCODE(0x018a, 0x0106), 0xffffffff, 0, 0, 0, 0, RTL8139_CAPS\},}\par
00025 {\cf20     \{"Compaq", "Compaq HNE-300 (RTL8139c)", BUSTYPE_PCI, PCI_UNITCODE(0x021b, 0x8139), 0xffffffff, 0, 0, 0, 0, RTL8139_CAPS\},}\par
00026 {\cf20     \{"Generic", "Generic RTL8139", BUSTYPE_PCI, 0, 0, 0, 0, 0, 0, RTL8139_CAPS\},}\par
00027 {\cf20     \{NULL,\},}\par
00028 {\cf20 \};*/}\par
00029 \par
00030 {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 MAC \'E0\'E4\'F0\'E5\'F1\'E0}\par
00031 {\cf18 void} RTL8139_read_mac_addr() \{\par
00032 \par
00033     RTL8139_raw_mac[0] = inl(RTL8139_device.io_base + 0x00);\par
00034     RTL8139_raw_mac[1] = ins(RTL8139_device.io_base + 0x04);\par
00035 \par
00036     RTL8139_device.mac_addr[0] = RTL8139_raw_mac[0] >> 0;\par
00037     RTL8139_device.mac_addr[1] = RTL8139_raw_mac[0] >> 8;\par
00038     RTL8139_device.mac_addr[2] = RTL8139_raw_mac[0] >> 16;\par
00039     RTL8139_device.mac_addr[3] = RTL8139_raw_mac[0] >> 24;\par
00040 \par
00041     RTL8139_device.mac_addr[4] = RTL8139_raw_mac[1] >> 0;\par
00042     RTL8139_device.mac_addr[5] = RTL8139_raw_mac[1] >> 8;\par
00043 \par
00044     tty_printf({\cf22 "MAC Address: %v:%v:%v:%v:%v:%v\\n"}, \par
00045         RTL8139_device.mac_addr[0], RTL8139_device.mac_addr[1], RTL8139_device.mac_addr[2], \par
00046         RTL8139_device.mac_addr[3], RTL8139_device.mac_addr[4], RTL8139_device.mac_addr[5]\par
00047         );\par
00048 \}\par
00049 \par
00050 \par
00051 {\cf20 // \'CF\'E5\'F0\'E5\'E7\'E0\'E3\'F0\'F3\'E6\'E0\'E5\'F2 RTL8139}\par
00052 {\cf18 void} RTL8139_reset() \{\par
00053     outb(RTL8139_device.io_base + 0x37, 0x10);\par
00054     {\cf19 while}((inb(RTL8139_device.io_base + 0x37) & 0x10) != 0);\par
00055 \}\par
00056 \par
00057 \par
00058 {\cf20 // \'D1\'EE\'F5\'F0\'E0\'ED\'FF\'E5\'F2 MAC \'E0\'E4\'F0\'E5\'F1\'F1 \'E2 src_mac_addr}\par
00059 {\cf18 void} RTL8139_get_mac_addr(uint8_t src_mac_addr[6])\{\par
00060     memcpy(src_mac_addr, RTL8139_device.mac_addr, 6);\par
00061 \}\par
00062 \par
00063 \par
00064 {\cf20 // \'CE\'F2\'EF\'F0\'E0\'E2\'EA\'E0 \'EF\'E0\'EA\'E5\'F2\'E0}\par
00065 {\cf18 void} RTL8139_send_packet() \{\par
00066 \par
00067 \}\par
00068 \par
00069 \par
00070 {\cf20 // \'CF\'F0\'E8\'E5\'EC \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'E9}\par
00071 {\cf18 void} RTL8139_handler({\cf17 struct} regs *r)\{\par
00072     tty_printf({\cf22 "RTL8139 interupt %d\\n"}, r->idt_index);\par
00073 \par
00074     uint16_t status = ins(RTL8139_device.io_base + 0x3e);   {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'F1\'F2\'E0\'F2\'F3\'F1\'E0}\par
00075 \par
00076     {\cf19 if}(status & (1<<2)) \{                                   {\cf20 // \'D3\'F1\'EF\'E5\'F8\'ED\'EE(?) \'EE\'F2\'EF\'F0\'E0\'E2\'EB\'E5\'ED\'EE}\par
00077         tty_printf({\cf22 "RTL8139: Sent\\n"});\par
00078     \}\par
00079     {\cf19 if} (status & (1<<0)) \{                                  {\cf20 // \'CF\'F0\'E8\'ED\'FF\'F2\'EE \'EE\'F2\'EF\'F0\'E0\'E2\'EB\'E5\'ED\'EE}\par
00080         tty_printf({\cf22 "RTL8139: Received\\n"});\par
00081         {\cf20 //receive_packet();}\par
00082     \}\par
00083     \par
00084     outs(RTL8139_device.io_base + 0x3E, 0x5);               {\cf20 // \'C3\'EE\'E2\'EE\'F0\'E8\'EC \'F1\'E5\'F2\'E5\'E2\'F3\'F5\'E5 \'F7\'F2\'EE\'E1 \'E4\'E0\'EB\'FC\'F8\'E5 \'F0\'E0\'E1\'EE\'F2\'E0\'EB\'E0}\par
00085 \}\par
00086 \par
00087 \par
00088 {\cf20 // \'CD\'E0\'F1\'F2\'F0\'E0\'E8\'E2\'E0\'E5\'F2 RTL8139}\par
00089 {\cf18 int} RTL8139_init() \{\par
00090     outb(RTL8139_io_addres + 0x52, 0x0);                {\cf20 // \'C2\'EA\'EB\'FE\'F7\'E0\'E5\'EC RTL}\par
00091 \par
00092     RTL8139_ret = pci_read(                           {\cf20 // \'C8\'F9\'E5\'EC \'F1\'F0\'E5\'E4\'E8 \'F3\'F1\'F2\'F0\'EE\'E9\'F1\'F2\'E2}\par
00093             pci_get_device(RTL8139_VENDOR_ID, RTL8139_ret_ID, -1), \par
00094             PCI_BAR0\par
00095             );\par
00096 \par
00097     {\cf19 if}(RTL8139_ret == 0) \{\par
00098         qemu_log({\cf22 "RTL8139 can't install"});\par
00099         {\cf19 return} -1;\par
00100     \}\par
00101 \par
00102     pci_RTL8139_device = pci_get_device(RTL8139_VENDOR_ID, RTL8139_ret_ID, -1);\par
00103 \par
00104     RTL8139_device.bar_type = RTL8139_ret & 0x1;\par
00105     \par
00106     RTL8139_device.io_base = RTL8139_ret & (~0x3);    {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'E1\'E0\'E7\'F3 \'E2\'E2\'EE\'E4\'E0-\'E2\'FB\'E2\'EE\'E4\'E0 \'E8\'EB\'E8 \'E1\'E0\'E7\'F3 \'EF\'E0\'EC\'FF\'F2\'E8, \'E8\'E7\'E2\'EB\'E5\'EA\'E0\'FF \'F1\'F2\'E0\'F0\'F8\'E8\'E5 28/30 \'E1\'E8\'F2}\par
00107     RTL8139_device.mem_base = RTL8139_ret & (~0xf);\par
00108     tty_printf({\cf22 "RTL8139 use %s, base: %x\\n"}, (RTL8139_device.bar_type == 0)? {\cf22 "mem based"}:{\cf22 "port based"}, (RTL8139_device.bar_type != 0)?RTL8139_device.io_base:RTL8139_device.mem_base);\par
00109     \par
00110     RTL8139_device.tx_cur = 0;                        {\cf20 // \'D3\'F1\'F2\'E0\'ED\'E0\'E2\'EB\'E8\'E2\'E0\'E5\'EC \'F2\'E5\'EA\'F3\'F9\'E8\'E9 TSAD}\par
00111 \par
00112     {\cf20 // \'C2\'EA\'EB\'FE\'F7\'E0\'E5\'EC \'E4\'EB\'FF PCI}\par
00113     uint32_t pci_command_reg = pci_read(pci_RTL8139_device, PCI_COMMAND);\par
00114     {\cf19 if}(!(pci_command_reg & (1 << 2))) \{\par
00115         pci_command_reg |= (1 << 2);\par
00116         pci_write(pci_RTL8139_device, PCI_COMMAND, pci_command_reg);\par
00117     \}\par
00118     {\cf20 // \'CE\'F2\'EF\'F0\'E0\'E2\'EB\'FF\'E5\'EC 0x00 \'E2 \'F0\'E5\'E3\'E8\'F1\'F2\'F0 CONFIG_1 (0x52), \'F7\'F2\'EE\'E1\'FB \'F3\'F1\'F2\'E0\'ED\'EE\'E2\'E8\'F2\'FC LWAKE + LWPTN \'EA\'E0\'EA \'E0\'EA\'F2\'E8\'E2\'ED\'FB\'E9. (\'C2\'EA\'EB\'FE\'F7\'E0\'E5\'EC)}\par
00119     outb(RTL8139_device.io_base + 0x52, 0x0);\par
00120 \par
00121     RTL8139_reset();    {\cf20 // \'CF\'E5\'F0\'E5\'E7\'E0\'EF\'F3\'F1\'EA}\par
00122 \par
00123     {\cf20 // \'C2\'FB\'E4\'E5\'EB\'FF\'E5\'EC \'E1\'F3\'F4\'F4\'E5\'F0}\par
00124     RTL8139_device.rx_buffer = kheap_malloc(8192 + 16 + 1500);\par
00125     memset(RTL8139_device.rx_buffer, 0x0, 8192 + 16 + 1500);\par
00126     outl(RTL8139_device.io_base + 0x30, (uint32_t)kv2p(RTL8139_device.rx_buffer));\par
00127 \par
00128     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'E0\'E2\'EB\'E8\'E2\'E0\'E5\'F2 \'E1\'E8\'F2\'FB TOK \'E8 ROK \'E2 \'E2\'FB\'F1\'EE\'EA\'E8\'E9 \'F3\'F0\'EE\'E2\'E5\'ED\'FC}\par
00129     outs(RTL8139_device.io_base + 0x3C, 0x0005);\par
00130 \par
00131     {\cf20 // (1 << 7) \'97 \'FD\'F2\'EE \'E1\'E8\'F2 WRAP, 0xf \'97 \'FD\'F2\'EE AB+AM+APM+AAP. Ps. \'FF \'ED\'E8\'F7\'E5\'E3\'EE \'ED\'E5 \'EF\'EE\'ED\'FF\'EB \'F2\'F3\'F2}\par
00132     outl(RTL8139_device.io_base + 0x44, 0xf | (1 << 7));\par
00133 \par
00134     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'E0\'E2\'EB\'E8\'E2\'E0\'E5\'F2 \'E1\'E8\'F2\'FB RE \'E8 TE \'E2 \'E2\'FB\'F1\'EE\'EA\'E8\'E9 \'F3\'F0\'EE\'E2\'E5\'ED\'FC}\par
00135     outb(RTL8139_device.io_base + 0x37, 0x0C);\par
00136     RTL8139_read_mac_addr();\par
00137 \par
00138     {\cf20 // \'D0\'E5\'E3\'E8\'F1\'F2\'F0\'E0\'F6\'E8\'FF \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'E9}\par
00139     uint32_t irq_num = pci_read(pci_RTL8139_device, PCI_INTERRUPT_LINE);\par
00140     register_interrupt_handler(32 + irq_num, &RTL8139_handler);\par
00141     IRQ_clear_mask(irq_num);\par
00142     qemu_log({\cf22 "RTL8139 installed, idt: %d, irq: %d"}, 32 + irq_num, irq_num);\par
00143     \par
00144 \par
00145     {\cf19 return} 1;\par
00146 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
udp.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/network/udp.c}
{\xe \v kernel/src/drivers/network/udp.c}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 uint16_t udp_calculate_checksum(udp_packet_t * packet) \{\par
00005     {\cf19 return} 0;\par
00006 \}\par
00007 \par
00008 {\cf18 void} udp_send_packet(uint8_t * dst_ip, uint16_t src_port, uint16_t dst_port, {\cf18 void} * data, {\cf18 int} len) \{\par
00009 \}\par
00010 \par
00011 {\cf18 void} udp_handle_packet(udp_packet_t * packet) \{\par
00012 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pci.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/pci.c}
{\xe \v kernel/src/drivers/pci.c}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 pci_dev_t dev_zero = \{0\};\par
00004 uint32_t pci_size_map[100];\par
00005 \par
00006 \par
00007 uint16_t pci_read_word(uint16_t bus, uint16_t slot, uint16_t func, uint16_t offset) \{\par
00008     uint64_t address;\par
00009     uint64_t lbus = (uint64_t)bus;\par
00010     uint64_t lslot = (uint64_t)slot;\par
00011     uint64_t lfunc = (uint64_t)func;\par
00012     uint16_t tmp = 0;\par
00013     address = (uint64_t)((lbus << 16) | (lslot << 11) |\par
00014               (lfunc << 8) | (offset & 0xfc) | ((uint32_t)0x80000000));\par
00015     outl(0xCF8, address);\par
00016     tmp = (uint16_t)(\par
00017         (inl(0xCFC) >> ((offset & 2) * 8)) {\cf20 //& 0xffff}\par
00018         );\par
00019     {\cf19 return} (tmp);\par
00020 \}\par
00021 \par
00022 \par
00023 uint16_t getVendorID(uint16_t bus, uint16_t device, uint16_t function) \{\par
00024         uint32_t r0 = pci_read_word(bus,device,function,0);\par
00025         {\cf19 return} r0;\par
00026 \}\par
00027 \par
00028 \par
00029 uint16_t getDeviceID(uint16_t bus, uint16_t device, uint16_t function) \{\par
00030         uint32_t r0 = pci_read_word(bus,device,function,2);\par
00031         {\cf19 return} r0;\par
00032 \}\par
00033 \par
00034 \par
00035 uint32_t pci_read(pci_dev_t dev, uint32_t field) \{\par
00036     {\cf20 // Only most significant 6 bits of the field}\par
00037     dev.field_num = (field & 0xFC) >> 2;\par
00038     dev.enable = 1;\par
00039     outl(PCI_CONFIG_ADDRESS, dev.bits);\par
00040 \par
00041     {\cf20 // What size is this field supposed to be ?}\par
00042     uint32_t size = pci_size_map[field];\par
00043     {\cf19 if}(size == 1) \{\par
00044         {\cf20 // Get the first byte only, since it's in little endian, it's actually the 3rd byte}\par
00045         uint8_t t = inb(PCI_CONFIG_DATA + (field & 3));\par
00046         {\cf19 return} t;\par
00047     \}\par
00048     {\cf19 else} {\cf19 if}(size == 2) \{\par
00049         uint16_t t = ins(PCI_CONFIG_DATA + (field & 2));\par
00050         {\cf19 return} t;\par
00051     \}\par
00052     {\cf19 else} {\cf19 if}(size == 4)\{\par
00053         {\cf20 // Read entire 4 bytes}\par
00054         uint32_t t = inl(PCI_CONFIG_DATA);\par
00055         {\cf19 return} t;\par
00056     \}\par
00057     {\cf19 return} 0xffff;\par
00058 \}\par
00059 \par
00060 \par
00061 uint32_t get_secondary_bus(pci_dev_t dev) \{\par
00062     {\cf19 return} pci_read(dev, PCI_SECONDARY_BUS);\par
00063 \}\par
00064 \par
00065 {\cf20 // FIXME: PCI \'ED\'E5 \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'FF\'E5\'F2 AC'97 (class = 0x04, subclass = 0x01)}\par
00066 {\cf18 void} checkAllBuses() \{\par
00067     {\cf19 for} (uint16_t bus = 0; bus < 256; bus++) \{\par
00068         {\cf19 for} (uint8_t device = 0; device < 32; device++) \{\par
00069             {\cf19 for} (uint8_t function = 1; function < 8; function++) \{\par
00070                 uint16_t {\cf18 id} = getDeviceID(bus, device, function);\par
00071                 {\cf19 if} ({\cf18 id} != 0 & {\cf18 id} != 65535 ) \{    \par
00072                     tty_printf({\cf22 "\\t%d->"}, bus);\par
00073                     qemu_log({\cf22 "%d->"}, bus);\par
00074 \par
00075                     {\cf19 switch} ({\cf18 id}) \{\par
00076                         {\cf19 case} 0x7010:\par
00077                             tty_printf({\cf22 "82371SB PIIX3 IDE [Natoma/Triton II]\\n"});\par
00078                             qemu_log({\cf22 "82371SB PIIX3 IDE [Natoma/Triton II] "});\par
00079                             {\cf19 break};\par
00080                         {\cf19 case} 0x7111:\par
00081                             tty_printf({\cf22 "82371AB/EB/MB PIIX4 IDE\\n"});\par
00082                             qemu_log({\cf22 "82371AB/EB/MB PIIX4 IDE "});\par
00083                             {\cf19 break};\par
00084                         {\cf19 case} 0x7113:\par
00085                             tty_printf({\cf22 "82371AB/EB/MB PIIX4 ACPI \\n"});\par
00086                             qemu_log({\cf22 "82371AB/EB/MB PIIX4 ACPI "});\par
00087                             {\cf19 break};\par
00088                         {\cf19 case} 0x5513:\par
00089                             tty_printf({\cf22 "5513 IDE Controller \\n"});\par
00090                             qemu_log({\cf22 "5513 IDE Controller "});\par
00091                             {\cf19 break};\par
00092                         {\cf19 case} 0x7001:\par
00093                             tty_printf({\cf22 "USB 1.1 Controller \\n"});\par
00094                             qemu_log({\cf22 "USB 1.1 Controller "});\par
00095                             {\cf19 break};\par
00096                         {\cf19 case} 0x7002:\par
00097                             tty_printf({\cf22 "USB 2.0 Controller \\n"});\par
00098                             qemu_log({\cf22 "USB 2.0 Controller "});\par
00099                             {\cf19 break};\par
00100                         {\cf19 case} 0xAA28:\par
00101                             tty_printf({\cf22 "RV620 HDMI Audio [Radeon HD 3450/3470/3550/3570] \\n"});\par
00102                             qemu_log({\cf22 "RV620 HDMI Audio [Radeon HD 3450/3470/3550/3570] "});\par
00103                             {\cf19 break};\par
00104                         {\cf19 case} 0xA012:\par
00105                             tty_printf({\cf22 "Atom Processor D4xx/D5xx/N4xx/N5xx Integrated Graphics Controller \\n"});\par
00106                             qemu_log({\cf22 "Atom Processor D4xx/D5xx/N4xx/N5xx Integrated Graphics Controller "});\par
00107                             {\cf19 break};\par
00108                         {\cf19 case} 0x27D2:\par
00109                             tty_printf({\cf22 "NM10/ICH7 Family PCI Express Port 2 \\n"});\par
00110                             qemu_log({\cf22 "NM10/ICH7 Family PCI Express Port 2 "});\par
00111                             {\cf19 break};\par
00112                         {\cf19 case} 0x27D6:\par
00113                             tty_printf({\cf22 "NM10/ICH7 Family PCI Express Port 4 \\n"});\par
00114                             qemu_log({\cf22 "NM10/ICH7 Family PCI Express Port 4 "});\par
00115                             {\cf19 break};\par
00116                         {\cf19 case} 0x27C9:\par
00117                             tty_printf({\cf22 "NM10/ICH7 Family USB UHCI Controller #2 \\n"});\par
00118                             qemu_log({\cf22 "NM10/ICH7 Family USB UHCI Controller #2 "});\par
00119                             {\cf19 break};\par
00120                         {\cf19 case} 0x27CA:\par
00121                             tty_printf({\cf22 "NM10/ICH7 Family USB UHCI Controller #3 \\n"});\par
00122                             qemu_log({\cf22 "NM10/ICH7 Family USB UHCI Controller #3 "});\par
00123                             {\cf19 break};\par
00124                         {\cf19 case} 0x27CB:\par
00125                             tty_printf({\cf22 "NM10/ICH7 Family USB UHCI Controller #4 \\n"});\par
00126                             qemu_log({\cf22 "NM10/ICH7 Family USB UHCI Controller #4 "});\par
00127                             {\cf19 break};\par
00128                         {\cf19 case} 0x27CC:\par
00129                             tty_printf({\cf22 "NM10/ICH7 Family USB2 EHCI Controller \\n"});\par
00130                             qemu_log({\cf22 "NM10/ICH7 Family USB2 EHCI Controller "});\par
00131                             {\cf19 break};\par
00132                         {\cf19 case} 0x27C1:\par
00133                             tty_printf({\cf22 "NM10/ICH7 Family SATA Controller [AHCI mode] \\n"});\par
00134                             qemu_log({\cf22 "NM10/ICH7 Family SATA Controller [AHCI mode] \\n"});\par
00135                             {\cf19 break};\par
00136                         {\cf19 case} 0x27DA:\par
00137                             tty_printf({\cf22 "NM10/ICH7 Family SMBus Controller \\n"});\par
00138                             qemu_log({\cf22 "NM10/ICH7 Family SMBus Controller \\n"});\par
00139                             {\cf19 break};\par
00140                         {\cf19 case} 0x1360:\par
00141                             tty_printf({\cf22 "RTL8139 Ethernet \\n"});\par
00142                             qemu_log({\cf22 "RTL8139 Ethernet "});\par
00143                             {\cf19 break};\par
00144                         {\cf19 case} 0x1300:\par
00145                             tty_printf({\cf22 "RTL8139 Ethernet \\n"});\par
00146                             qemu_log({\cf22 "RTL8139 Ethernet "});\par
00147                             {\cf19 break};\par
00148                         {\cf19 case} 0x24D5:\par
00149                             tty_printf({\cf22 "ICH5 AC'97 \\n"});\par
00150                             qemu_log({\cf22 "ICH5 AC'97 "});\par
00151                         {\cf19 case} 0x24C5:\par
00152                             tty_printf({\cf22 "Realtek AC'97 \\n"});\par
00153                             qemu_log({\cf22 "Realtek AC'97 "});\par
00154                         {\cf19 case} 0x2668:\par
00155                             tty_printf({\cf22 "Intel High Definition Audio \\n"});\par
00156                             qemu_log({\cf22 "Intel High Definition Audio "});\par
00157                         {\cf19 case} 0x27D8:\par
00158                             tty_printf({\cf22 "Intel High Definition Audio \\n"});\par
00159                             qemu_log({\cf22 "Intel High Definition Audio "});\par
00160                         {\cf19 default}:\par
00161                             tty_printf({\cf22 "device %x \\n"}, getDeviceID(bus, device, function));\par
00162                             qemu_log({\cf22 "device %x "}, getDeviceID(bus, device, function));\par
00163                             {\cf19 break};\par
00164                     \}\par
00165                     {\cf19 switch} (getVendorID(bus, device, function)) \{\par
00166                         {\cf19 case} 0x8086:\par
00167                             tty_printf({\cf22 "Intel Corporation\\n"});\par
00168                             qemu_log({\cf22 "Intel Corporation"});\par
00169                             {\cf19 break};\par
00170                         {\cf19 case} 0x1002:\par
00171                             tty_printf({\cf22 "Advanced Micro Devices, Inc. [AMD/ATI]\\n"});\par
00172                             qemu_log({\cf22 "Advanced Micro Devices, Inc. [AMD/ATI]"});\par
00173                             {\cf19 break};\par
00174                         {\cf19 case} 0x1039:\par
00175                             tty_printf({\cf22 "Silicon Integrated Systems [SiS]\\n"});\par
00176                             qemu_log({\cf22 "Silicon Integrated Systems [SiS]"});\par
00177                             {\cf19 break};\par
00178                         {\cf19 case} 0x0B05:\par
00179                             tty_printf({\cf22 "ASUSTek Computer, Inc.\\n"});\par
00180                             qemu_log({\cf22 "ASUSTek Computer, Inc."});\par
00181                             {\cf19 break};\par
00182                         {\cf19 case} 0x80EE:\par
00183                             tty_printf({\cf22 "VirtualBox internal"});\par
00184                             qemu_log({\cf22 "VirtualBox internal"});\par
00185                             {\cf19 break};\par
00186                         {\cf19 case} 0x1234:\par
00187                             tty_printf({\cf22 "QEMU internal"});\par
00188                             qemu_log({\cf22 "QEMU internal"});\par
00189                             {\cf19 break};\par
00190                         {\cf19 default}:\par
00191                             tty_printf({\cf22 "vendor %x\\n"}, getVendorID(bus, device, function));\par
00192                             qemu_log({\cf22 "vendor %x"}, getVendorID(bus, device, function));\par
00193                             {\cf19 break};\par
00194                     \}\par
00195                 \}\par
00196             \}\par
00197         \}\par
00198     \}\par
00199 \}\par
00200 \par
00201 \par
00202 uint32_t get_device_type(pci_dev_t dev) \{\par
00203     uint32_t t = pci_read(dev, PCI_CLASS) << 8;\par
00204     {\cf19 return} t | pci_read(dev, PCI_SUBCLASS);\par
00205 \}\par
00206 \par
00207 \par
00208 pci_dev_t pci_scan_function(uint16_t vendor_id, uint16_t device_id, uint32_t bus, uint32_t device, uint32_t function, int32_t device_type) \{\par
00209     pci_dev_t dev = \{0\};\par
00210 \par
00211     dev.bus_num = bus;\par
00212     dev.device_num = device;\par
00213     dev.function_num = function;\par
00214     {\cf20 // If it's a PCI Bridge device, get the bus it's connected to and keep searching}\par
00215     {\cf19 if}(get_device_type(dev) == PCI_TYPE_BRIDGE) \{\par
00216         pci_scan_bus(vendor_id, device_id, get_secondary_bus(dev), device_type);\par
00217     \}\par
00218     {\cf20 // If type matches, we've found the device, just return it}\par
00219     {\cf19 if}(device_type == -1 || device_type == get_device_type(dev)) \{\par
00220         uint32_t devid  = pci_read(dev, PCI_DEVICE_ID);\par
00221         uint32_t vendid = pci_read(dev, PCI_VENDOR_ID);\par
00222         {\cf19 if}(devid == device_id && vendor_id == vendid)\par
00223             {\cf19 return} dev;\par
00224     \}\par
00225     {\cf19 return} dev_zero;\par
00226 \}\par
00227 \par
00228 \par
00229 uint32_t pci_reach_end(pci_dev_t dev) \{\par
00230     uint32_t t = pci_read(dev, PCI_HEADER_TYPE);\par
00231     {\cf19 return} !t;\par
00232 \}\par
00233 \par
00234 \par
00235 pci_dev_t pci_scan_device(uint16_t vendor_id, uint16_t device_id, uint32_t bus, uint32_t device, int32_t device_type) \{\par
00236     pci_dev_t dev = \{0\};\par
00237     dev.bus_num = bus;\par
00238     dev.device_num = device;\par
00239 \par
00240     {\cf19 if}(pci_read(dev,PCI_VENDOR_ID) == PCI_NONE)\par
00241         {\cf19 return} dev_zero;\par
00242 \par
00243     pci_dev_t t = pci_scan_function(vendor_id, device_id, bus, device, 0, device_type);\par
00244     {\cf19 if}(t.bits)\par
00245         {\cf19 return} t;\par
00246 \par
00247     {\cf19 if}(pci_reach_end(dev))\par
00248         {\cf19 return} dev_zero;\par
00249 \par
00250     {\cf19 for}(int32_t function = 1; function < FUNCTION_PER_DEVICE; function++) \{\par
00251         {\cf19 if}(pci_read(dev,PCI_VENDOR_ID) != PCI_NONE) \{\par
00252             t = pci_scan_function(vendor_id, device_id, bus, device, function, device_type);\par
00253             {\cf19 if}(t.bits)\par
00254                 {\cf19 return} t;\par
00255         \}\par
00256     \}\par
00257     {\cf19 return} dev_zero;\par
00258 \}\par
00259 \par
00260 pci_dev_t pci_scan_bus(uint16_t vendor_id, uint16_t device_id, uint32_t bus, int32_t device_type) \{\par
00261     {\cf19 for}(int32_t device = 0; device < DEVICE_PER_BUS; device++) \{\par
00262         pci_dev_t t = pci_scan_device(vendor_id, device_id, bus, device, device_type);\par
00263         {\cf19 if}(t.bits)\par
00264             {\cf19 return} t;\par
00265     \}\par
00266     {\cf19 return} dev_zero;\par
00267 \}\par
00268 \par
00269 \par
00270 pci_dev_t pci_get_device(uint16_t vendor_id, uint16_t device_id, int32_t device_type) \{\par
00271     pci_dev_t t = pci_scan_bus(vendor_id, device_id, 0, device_type);\par
00272 \par
00273     {\cf19 if}(t.bits)\{\par
00274         {\cf19 return} t;\par
00275     \}\par
00276 \par
00277     {\cf20 // Handle multiple pci host controllers}\par
00278 \par
00279     {\cf19 if}(pci_reach_end(dev_zero)) \{\par
00280         qemu_log({\cf22 "PCI Get device failed"});\par
00281     \}\par
00282 \par
00283     {\cf19 for}(int32_t function = 1; function < FUNCTION_PER_DEVICE; function++) \{\par
00284         pci_dev_t dev = \{0\};\par
00285         dev.function_num = function;\par
00286 \par
00287         {\cf19 if}(pci_read(dev, PCI_VENDOR_ID) == PCI_NONE)\par
00288             {\cf19 break};\par
00289         \par
00290         t = pci_scan_bus(vendor_id, device_id, function, device_type);\par
00291         \par
00292         {\cf19 if}(t.bits)\{\par
00293             {\cf19 return} t;\par
00294         \}\par
00295     \}\par
00296     qemu_log({\cf22 "dev zero!"});\par
00297     {\cf19 return} dev_zero;\par
00298 \}\par
00299 \par
00300 {\cf18 void} pci_write(pci_dev_t dev, uint32_t field, uint32_t value) \{\par
00301     dev.field_num = (field & 0xFC) >> 2;\par
00302     dev.enable = 1;\par
00303     {\cf20 // Tell where we want to write}\par
00304     outl(PCI_CONFIG_ADDRESS, dev.bits);\par
00305     {\cf20 // Value to write}\par
00306     outl(PCI_CONFIG_DATA, value);\par
00307 \}\par
00308 \par
00309 {\cf18 void} pci_init() \{\par
00310     {\cf20 // Init size map}\par
00311     pci_size_map[PCI_VENDOR_ID] =   2;\par
00312     pci_size_map[PCI_DEVICE_ID] =   2;\par
00313     pci_size_map[PCI_COMMAND]   =   2;\par
00314     pci_size_map[PCI_STATUS]    =   2;\par
00315     pci_size_map[PCI_SUBCLASS]  =   1;\par
00316     pci_size_map[PCI_CLASS]     =   1;\par
00317     pci_size_map[PCI_CACHE_LINE_SIZE]   = 1;\par
00318     pci_size_map[PCI_LATENCY_TIMER]     = 1;\par
00319     pci_size_map[PCI_HEADER_TYPE] = 1;\par
00320     pci_size_map[PCI_BIST] = 1;\par
00321     pci_size_map[PCI_BAR0] = 4;\par
00322     pci_size_map[PCI_BAR1] = 4;\par
00323     pci_size_map[PCI_BAR2] = 4;\par
00324     pci_size_map[PCI_BAR3] = 4;\par
00325     pci_size_map[PCI_BAR4] = 4;\par
00326     pci_size_map[PCI_BAR5] = 4;\par
00327     pci_size_map[PCI_INTERRUPT_LINE]    = 1;\par
00328     pci_size_map[PCI_SECONDARY_BUS]     = 1;\par
00329     \par
00330     qemu_log({\cf22 "PCI installed"});\par
00331 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ramdisk.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/ramdisk.c}
{\xe \v kernel/src/drivers/ramdisk.c}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 {\cf20 // }\par
00004 \par
00005 uint32_t initrd_begin = 0;\par
00006 uint32_t initrd_end = 0;\par
00007 uint32_t initrd_size;\par
00008 \par
00009 int32_t oct2bin({\cf18 unsigned} {\cf18 char} *str, int32_t size) \{\par
00010     int32_t n = 0;\par
00011     {\cf18 unsigned} {\cf18 char} *c = str;\par
00012     {\cf19 while} (size-- > 0) \{\par
00013         n *= 8;\par
00014         n += *c - {\cf23 '0'};\par
00015         c++;\par
00016     \}\par
00017     {\cf19 return} n;\par
00018 \}\par
00019 \par
00020 uint32_t tar_getsize({\cf17 const} {\cf18 char} *in) \{\par
00021     uint32_t size = 0;\par
00022     uint32_t j;\par
00023     uint32_t count = 1;\par
00024 \par
00025     {\cf19 for} (j = 11; j > 0; j--, count *= 8) \{\par
00026         size += ((in[j - 1] - {\cf23 '0'}) * count);\par
00027     \}\par
00028 \par
00029     {\cf19 return} size;\par
00030 \}\par
00031 \par
00032 {\cf20 /* Returns pointer to file data */}\par
00033 int32_t tar_lookup({\cf18 unsigned} {\cf18 char} *archive, {\cf18 char} *filename) \{\par
00034     {\cf18 unsigned} {\cf18 char} *ptr = archive;\par
00035  \par
00036     {\cf19 while} (!memcmp(ptr + 257, {\cf22 "ustar"}, 5)) \par
00037     \{\par
00038         int32_t filesize = oct2bin(ptr + 0x7c, 11);\par
00039         {\cf19 if} (!memcmp(ptr, filename, strlen(filename) + 1)) \{\par
00040             {\cf19 return} ptr + 512;\par
00041         \}\par
00042 \par
00043         ptr += (((filesize + 511) / 512) + 1) * 512;\par
00044         {\cf19 if} (ptr == initrd_end) \{\par
00045             {\cf19 return} 0;\par
00046         \}\par
00047         {\cf19 if} (ptr >  initrd_end) \{\par
00048             {\cf19 return} 0;\par
00049         \}\par
00050     \}\par
00051     {\cf19 return} 0;\par
00052 \}\par
00053 \par
00054 uint32_t initrd_read({\cf18 char} *filename, int32_t offset, int32_t size, vfs_filesystem_t *fs, {\cf18 void} *buffer) \{\par
00055     int32_t read_size = 0;\par
00056     {\cf19 if} (!filename) {\cf19 return} 0;\par
00057     {\cf19 if} (!size) {\cf19 return} 0;\par
00058 \par
00059     int32_t file_addr = tar_lookup(initrd_begin, filename);\par
00060     {\cf19 if} (!file_addr) \{ {\cf20 // File not found}\par
00061         {\cf19 return} 0;\par
00062     \}\par
00063 \par
00064     file_addr -= 512;\par
00065     ustar_file_t *file = ({\cf17 struct }ustar_file_t*) file_addr;\par
00066     file_addr += 512;\par
00067 \par
00068     {\cf19 if} (size > oct2bin(file->size, 11)) \{\par
00069         read_size = oct2bin(file->size, 11);\par
00070     \} {\cf19 else} \{\par
00071         read_size = size;\par
00072     \}\par
00073 \par
00074     memcpy(buffer, file_addr + offset, size);\par
00075 \par
00076     {\cf19 return} read_size;\par
00077 \}\par
00078 \par
00079 uint32_t initrd_file_exists({\cf18 char} *filename, vfs_filesystem_t *fs) \{\par
00080     {\cf19 if} (!filename) \{\par
00081         {\cf19 return} 0;\par
00082     \}\par
00083 \par
00084     int32_t file_addr = tar_lookup(initrd_begin, filename);\par
00085     {\cf19 if} (!file_addr) \{ {\cf20 // file not found}\par
00086         {\cf19 return} 0;\par
00087     \} {\cf19 else} \{\par
00088         {\cf19 return} file_addr;\par
00089     \}\par
00090 \}\par
00091 \par
00092 uint32_t initrd_get_filesize({\cf18 char} *filename) \{\par
00093     {\cf19 if} (!filename) {\cf19 return} 0;\par
00094 \par
00095     int32_t file_addr = tar_lookup(initrd_begin, filename);\par
00096     {\cf19 if} (!file_addr) \{ {\cf20 // file not found}\par
00097         {\cf19 return} 0;\par
00098     \} {\cf19 else} \{\par
00099         file_addr -= 512;\par
00100         ustar_file_t *file = ({\cf17 struct }ustar_file_t*) file_addr;\par
00101         {\cf19 return} oct2bin(file->size, 11);\par
00102     \}\par
00103 \}\par
00104 \par
00105 uint32_t initrd_is_dir({\cf18 char} *filename) \{\par
00106     {\cf19 if} (!filename) {\cf19 return} 0;\par
00107 \par
00108     int32_t file_addr = tar_lookup(initrd_begin, filename);\par
00109     {\cf19 if} (!file_addr) \{ {\cf20 // file not found}\par
00110         {\cf19 return} 0;\par
00111     \} {\cf19 else} \{\par
00112         ustar_file_t *file = ({\cf17 struct }ustar_file_t*) file_addr;\par
00113         {\cf19 return} file->type; {\cf20 //(file->type == USTAR_DIRECTORY); // TODO why this comparison doenst work?? why for files file->type is 0 and for dirs id 48 aka '0' ????}\par
00114     \}\par
00115 \}\par
00116 \par
00117 {\cf18 void} initrd_list(int32_t argc, {\cf18 char} **arg) \{\par
00118     int32_t addr = initrd_begin;\par
00119 \par
00120     {\cf19 while} (!memcmp(addr + 257, {\cf22 "ustar"}, 5)) \{\par
00121         int32_t filesize = oct2bin(addr + 0x7c, 11);\par
00122         ustar_file_t *file = ({\cf17 struct }ustar_file_t*) addr;\par
00123 \par
00124         {\cf19 if} (file->type == USTAR_DIRECTORY) \{\par
00125             tty_printf({\cf22 "\\n    <dir>       /initrd/%s"}, file->fname);\par
00126         \} {\cf19 else} {\cf19 if} (file->type == USTAR_NORMAL_FILE) \{\par
00127             tty_printf({\cf22 "\\n     <file> %d   /initrd/%s "}, filesize, file->fname);\par
00128         \}\par
00129         addr += (((filesize + 511) / 512) + 1) * 512;\par
00130         \par
00131         {\cf20 /*if (addr == initrd_end) \{}\par
00132 {\cf20             break;}\par
00133 {\cf20         \}}\par
00134 {\cf20         if (addr > initrd_end ) \{}\par
00135 {\cf20             break;}\par
00136 {\cf20         \}*/} {\cf20 // Warning: These if blocks can be collapsed into -----|}\par
00137         {\cf19 if}(addr>=initrd_end) {\cf19 break}; {\cf20 //  <--------------------------|}\par
00138     \}\par
00139     tty_printf({\cf22 "\\n"});\par
00140 \}\par
00141 \par
00142 {\cf18 void} initrd_init(uint32_t phys_begin, uint32_t phys_end) \{\par
00143     {\cf20 // TODO: map initrd image to virtual memory}\par
00144 \par
00145     qemu_log({\cf22 "initrd phys begin = %x initrd phys end = %x"}, phys_begin, phys_end);\par
00146 \par
00147 \par
00148     initrd_size = phys_end - phys_begin;\par
00149     initrd_begin = kheap_malloc(initrd_size + 4 * PAGE_SIZE);\par
00150 \par
00151     physical_addres_t frame;\par
00152     virtual_addr_t virt;\par
00153     {\cf19 for} (frame = PAGE_ALIGN_DOWN(phys_begin), virt = PAGE_ALIGN_DOWN(initrd_begin) + PAGE_SIZE;\par
00154          frame <= (PAGE_ALIGN_DOWN(phys_end));\par
00155          frame += PAGE_SIZE, virt += PAGE_SIZE) \{\par
00156         vmm_map_page(frame, virt);\par
00157     \}\par
00158     initrd_begin = PAGE_ALIGN_DOWN(initrd_begin) + PAGE_SIZE + phys_begin % PAGE_SIZE;\par
00159     initrd_end = initrd_begin + initrd_size;\par
00160 \par
00161  \par
00162     vfs_storage_dev_t *dev = kheap_malloc({\cf17 sizeof}(vfs_storage_dev_t));\par
00163     dev->type = 4;\par
00164     strcpy(dev->name, {\cf22 "initrd"});\par
00165 \par
00166     vfs_filesystem_handles_t *fs_handles = kheap_malloc({\cf17 sizeof}(vfs_filesystem_handles_t));\par
00167 \par
00168     fs_handles->read = &initrd_read;\par
00169     fs_handles->exists = &initrd_file_exists;\par
00170     fs_handles->get_size = &initrd_get_filesize;\par
00171     fs_handles->is_dir = &initrd_is_dir;\par
00172     fs_handles->write = 0;\par
00173     fs_handles->readdir = 0;\par
00174     fs_handles->mkfile = 0;\par
00175     fs_handles->mkdir = 0;\par
00176     fs_handles->rm = 0;\par
00177 \par
00178     vfs_mount(dev, fs_handles, 0, {\cf22 "/initrd/"}, 0);\par
00179 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
time.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/time.c}
{\xe \v kernel/src/drivers/time.c}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 {\cf21 #define INPUT_CLOCK_FREQUENCY 1193180}\par
00005 \par
00006 {\cf21 #define TIMER_COMMAND 0x43}\par
00007 {\cf21 #define TIMER_DATA    0x40}\par
00008 {\cf21 #define TIMER_OCW     0x36 }{\cf20 // Operational command word which means Init, Square Wave Mode, non-BCD, first transfer LSB then MSB}\par
00009 \par
00010 {\cf21 #define TICKS_PER_SECOND 20}\par
00011 \par
00012 uint64_t current_freq = 0;\par
00013 uint64_t timer_ticks = 0;\par
00014 {\cf17 extern} {\cf18 void} task_switch({\cf18 void});\par
00015 \par
00016 \par
00017 {\cf18 void} timer_set_frequency(int32_t hz) \{\par
00018     {\cf18 int} divisor = INPUT_CLOCK_FREQUENCY / hz;\par
00019     outb(TIMER_COMMAND, TIMER_OCW); {\cf20 // Means Init, Square Wave Mode, non-BCD, first transfer LSB then MSB}\par
00020     outb(TIMER_DATA, divisor & 0xFF); {\cf20 // Set low byte of divisor}\par
00021     outb(TIMER_DATA, divisor >> 8); {\cf20 // Set high byte of divisor}\par
00022     {\cf20 //outb(TIMER_DATA, (divisor >> 8) & 0xFF);}\par
00023     current_freq = hz;\par
00024 \}\par
00025 \par
00026 uint64_t timer_get_frequency() \{\par
00027     {\cf19 return} current_freq;\par
00028 \}\par
00029 \par
00030 \par
00031 {\cf18 void} timer_handler({\cf17 struct} regs *r) \{\par
00032     {\cf20 //qemu_log("tick: %d",timer_ticks);}\par
00033     trand(++timer_ticks);\par
00034     {\cf20 //if (multi_task) \{}\par
00035        {\cf20 //task_switch();  /* \'CF\'E5\'F0\'E5\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'F1\'FF */}\par
00036     {\cf20 //\}}\par
00037     {\cf20 // tty_printf("\\ntimer_handler idt: %d", r->idt_index);}\par
00038     {\cf20 //qemu_log("timer_handler idt: %d", r->idt_index);}\par
00039 \}\par
00040 \par
00041 \par
00042 uint32_t timer_get_ticks() \{\par
00043     {\cf19 return} timer_ticks;\par
00044 \}\par
00045 \par
00046 \par
00047 {\cf20 // Timer init}\par
00048 {\cf18 void} timer_install() \{\par
00049     register_interrupt_handler(32, &timer_handler);\par
00050     IRQ_clear_mask(32 - 32); {\cf20 // - 32 \'EF\'EE\'F2\'EE\'EC\'F3 \'F7\'F2\'EE \'EF\'EE\'F1\'EB\'E5 \'F0\'E5\'EC\'E0\'EF\'EF\'E8\'ED\'E3\'E0 \'ED\'EE\'EC\'E5\'F0\'E0 \'F1\'EC\'E5\'F9\'E0\'FE\'F2\'F1\'FF \'ED\'E0 32}\par
00051     timer_set_frequency(50); {\cf20 // 50 \'E3\'E5\'F0\'F6}\par
00052     qemu_log({\cf22 "Timer installed"});\par
00053 \}\par
00054 \par
00055 {\cf18 void} sleep_ticks(uint32_t delay)\par
00056 \{\par
00057     uint64_t current_ticks = timer_get_ticks();\par
00058     {\cf19 while} (1)\par
00059     \{\par
00060         {\cf19 if} (current_ticks + delay < timer_get_ticks())\{\par
00061             {\cf19 break};\par
00062         \}\par
00063     \}\par
00064 \}\par
00065 \par
00066 {\cf18 void} sleep(uint32_t _d) \{\par
00067     sleep_ms(_d);\par
00068 \}\par
00069 \par
00070 {\cf18 void} sleep_ms(uint32_t milliseconds) \{\par
00071     uint32_t needticks = milliseconds*timer_get_frequency();\par
00072     sleep_ticks(needticks/1000);\par
00073 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
vfs.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/drivers/vfs.c}
{\xe \v kernel/src/drivers/vfs.c}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     \'C2\'E7\'FF\'F2\'EE \'E8\'E7 https://github.com/rgimad/EOS/tree/d3e2062fc909d8b15d8637950050281f051270d2}\par
00003 {\cf20     \'CF\'EE\'E4 \'EB\'E8\'F6\'E5\'ED\'E7\'E8\'E5\'E9 MIT license}\par
00004 {\cf20 */}\par
00005 \par
00006 \par
00007 {\cf21 #include <kernel.h>}\par
00008 \par
00009 {\cf21 #define MOUNTPOINTS_SIZE 100}\par
00010 \par
00011 int32_t __vfs_init = 0;\par
00012 int32_t vfs_lastmnt = 0;\par
00013 vfs_mount_info_t **vfs_mount_points = 0;\par
00014 \par
00015 {\cf18 void} vfs_mount_list() \{\par
00016     {\cf19 for} (int32_t i = 0; i < vfs_lastmnt; ++i) \{\par
00017         qemu_log({\cf22 "%s on %s type "}, vfs_mount_points[i]->fs->dev->name, vfs_mount_points[i]->location);\par
00018 \par
00019         {\cf19 if} (vfs_mount_points[i]->fs->fs_type == 0) \{\par
00020             qemu_log({\cf22 "initrd"});\par
00021         \} {\cf19 else} {\cf19 if} (vfs_mount_points[i]->fs->fs_type == 1) \{\par
00022             qemu_log({\cf22 "ext2"});\par
00023         \} {\cf19 else} {\cf19 if} (vfs_mount_points[i]->fs->fs_type == 2) \{\par
00024             qemu_log({\cf22 "ext3"});\par
00025         \} {\cf19 else} {\cf19 if} (vfs_mount_points[i]->fs->fs_type == 3) \{\par
00026             qemu_log({\cf22 "ext4"});\par
00027         \} {\cf19 else} {\cf19 if} (vfs_mount_points[i]->fs->fs_type == 4) \{\par
00028             qemu_log({\cf22 "fat32"});\par
00029         \} {\cf19 else} \{\par
00030             qemu_log({\cf22 "none"});\par
00031         \}\par
00032     \}\par
00033 \}\par
00034 \par
00035 int32_t vfs_mount(vfs_storage_dev_t *dev, vfs_filesystem_handles_t *fs_handles, int32_t type, {\cf18 char} *location, int32_t block_size) \{\par
00036     {\cf19 for} (int32_t i = 0; i < vfs_lastmnt; ++i) \{\par
00037         {\cf19 if} (strcmp(vfs_mount_points[i]->location, location) == 0) \{\par
00038             qemu_log({\cf22 "VFS: Device %s already mounted."}, location);\par
00039             {\cf19 return} 0;\par
00040         \}\par
00041     \}\par
00042 \par
00043     vfs_mount_info_t *mnt = (vfs_mount_info_t*) kheap_malloc({\cf17 sizeof}(vfs_mount_info_t));\par
00044     mnt->fs = (vfs_filesystem_t*) kheap_malloc({\cf17 sizeof}(vfs_filesystem_t));\par
00045     mnt->fs->dev = dev;\par
00046     mnt->fs->block_size = block_size;\par
00047     mnt->fs_handles = fs_handles;\par
00048     mnt->fs->fs_type = type;\par
00049     mnt->location = location;\par
00050 \par
00051     vfs_mount_points[vfs_lastmnt] = mnt;\par
00052     vfs_lastmnt++;\par
00053     qemu_log({\cf22 "VFS: Mounted new device at %s"}, location);\par
00054 \par
00055     {\cf19 return} 1;\par
00056 \}\par
00057 \par
00058 int32_t vfs_mount_find({\cf18 char} *path, int32_t *filename_add) \{\par
00059     {\cf18 char} *a = ({\cf18 char}*) kheap_malloc(strlen(path) + 1);\par
00060     memset(a, 0, strlen(path) + 1);\par
00061     memcpy(a, path, strlen(path) + 1);\par
00062     \par
00063     int32_t at = 0;\par
00064     {\cf19 if} (a[strlen(a)] == {\cf23 '/'}) \{\par
00065         str_bksp(a, {\cf23 '/'});\par
00066     \}\par
00067 \par
00068     {\cf19 while} (1) \{\par
00069         {\cf19 for} (int32_t i = 0; i < MOUNTPOINTS_SIZE; ++i) \{\par
00070             {\cf19 if} (!vfs_mount_points[i]) \{\par
00071                 {\cf19 break};\par
00072             \}\par
00073             {\cf19 if} (strcmp(vfs_mount_points[i]->location, a) == 0) \{\par
00074                 {\cf20 /* Adjust the orig to make it relative to fs/dev */}\par
00075                 *filename_add = strlen(a) - 1;\par
00076                 kheap_free(a);\par
00077                 {\cf19 return} i;\par
00078             \}\par
00079         \}\par
00080 \par
00081         {\cf19 if} (strcmp(a, {\cf22 "/"}) == 0) \{\par
00082             {\cf19 break};\par
00083         \}\par
00084         str_bksp(a, {\cf23 '/'});\par
00085     \}\par
00086 \par
00087     {\cf19 return} 0;\par
00088 \}\par
00089 \par
00090 \par
00091 int32_t vfs_read({\cf17 const} {\cf18 char} *filename, int32_t offset, int32_t size, {\cf18 void} *buf) \{\par
00092     int32_t a = 0;\par
00093     int32_t mntn = vfs_mount_find(filename, &a);\par
00094     filename += a + 1;\par
00095 \par
00096     {\cf19 if} (vfs_mount_points[mntn]->fs_handles->read == 0) \{\par
00097         {\cf19 return} 0;\par
00098     \}\par
00099     vfs_mount_points[mntn]->fs_handles->read(filename, offset, size, vfs_mount_points[mntn]->fs, buf);\par
00100 \par
00101     {\cf19 return} 1;\par
00102 \}\par
00103 \par
00104 \par
00105 int32_t vfs_get_size({\cf17 const} {\cf18 char} *filename) \{\par
00106     int32_t a = 0;\par
00107     int32_t mntn = vfs_mount_find(filename, &a);\par
00108     filename += a + 1; {\cf20 // Change the pointer (its not const, but char its pointing to is const)}\par
00109 \par
00110     {\cf19 if} (vfs_mount_points[mntn]->fs_handles->read == 0) \{\par
00111         {\cf19 return} 0;\par
00112     \}\par
00113 \par
00114     {\cf19 return} vfs_mount_points[mntn]->fs_handles->get_size(filename, vfs_mount_points[mntn]->fs);\par
00115 \}\par
00116 \par
00117 \par
00118 int32_t vfs_is_dir({\cf18 char} *filename) \{\par
00119     int32_t a = 0;\par
00120     int32_t mntn = vfs_mount_find(filename, &a);\par
00121     filename += a + 1;\par
00122 \par
00123     {\cf19 if} (vfs_mount_points[mntn]->fs_handles->is_dir == 0) \{\par
00124         {\cf19 return} 0;\par
00125     \}\par
00126     {\cf19 return} vfs_mount_points[mntn]->fs_handles->is_dir(filename, vfs_mount_points[mntn]->fs);\par
00127 \}\par
00128 \par
00129 \par
00130 int32_t vfs_write({\cf18 char} *filename, int32_t offset, int32_t size, {\cf18 void} *buf) \{\par
00131     int32_t a = 0;\par
00132     int32_t mntn = vfs_mount_find(filename, &a);\par
00133     filename += a + 1;\par
00134 \par
00135     {\cf19 if} (vfs_mount_points[mntn]->fs_handles->write == 0) \{\par
00136         {\cf19 return} 0;\par
00137     \}\par
00138     vfs_mount_points[mntn]->fs_handles->write(filename, offset, size, vfs_mount_points[mntn]->fs, buf);\par
00139 \par
00140     {\cf19 return} 1;\par
00141 \}\par
00142 \par
00143 int32_t vfs_mkdir({\cf18 char} *filename, {\cf18 char} *path, uint16_t perms) \{\par
00144     int32_t a = 0;\par
00145     int32_t mntn = vfs_mount_find(path, &a);\par
00146     path += a + 1;\par
00147 \par
00148     {\cf19 if} (vfs_mount_points[mntn]->fs_handles->mkdir == 0) \{\par
00149         {\cf19 return} 0;\par
00150     \}\par
00151     vfs_mount_points[mntn]->fs_handles->mkdir(path, filename, vfs_mount_points[mntn]->fs, perms);\par
00152 \par
00153     {\cf19 return} 1;\par
00154 \}\par
00155 \par
00156 int32_t vfs_mkfile({\cf18 char} *filename, {\cf18 char} *path, uint16_t perms) \{\par
00157     int32_t a = 0;\par
00158     int32_t mntn = vfs_mount_find(path, &a);\par
00159     path += a + 1;\par
00160 \par
00161     {\cf19 if} (vfs_mount_points[mntn]->fs_handles->mkfile == 0) \{\par
00162         {\cf19 return} 0;\par
00163     \}\par
00164     vfs_mount_points[mntn]->fs_handles->mkfile(filename, path, vfs_mount_points[mntn]->fs, perms);\par
00165 \par
00166     {\cf19 return} 1;\par
00167 \}\par
00168 \par
00169 \par
00170 int32_t vfs_list({\cf18 char} *path, {\cf18 void} *buf) \{\par
00171     {\cf19 if} (strcmp(path, {\cf22 "/"}) == 0) \{\par
00172         {\cf19 for} (int32_t i = 0; i < vfs_lastmnt; ++i) \{\par
00173             tty_printf({\cf22 " %s "}, vfs_mount_points[i]->location);\par
00174         \}\par
00175 \par
00176         {\cf19 return} 1;\par
00177     \}\par
00178 \par
00179     int32_t a = 0;\par
00180     int32_t mntn = vfs_mount_find(path, &a);\par
00181     path += a + 1;\par
00182 \par
00183     {\cf19 if} (vfs_mount_points[mntn]->fs_handles->readdir == 0) \{\par
00184         {\cf19 return} 0;\par
00185     \}\par
00186     vfs_mount_points[mntn]->fs_handles->readdir(path, vfs_mount_points[mntn]->fs, buf);\par
00187 \par
00188     {\cf19 return} 1;\par
00189 \}\par
00190 \par
00191 \par
00192 int32_t vfs_rm({\cf18 char} *filename) \{\par
00193     int32_t a = 0;\par
00194     int32_t mntn = vfs_mount_find(filename, &a);\par
00195     filename += a + 1;\par
00196 \par
00197     {\cf19 if} (vfs_mount_points[mntn]->fs_handles->rm == 0) \{\par
00198         {\cf19 return} 0;\par
00199     \}\par
00200     vfs_mount_points[mntn]->fs_handles->rm(filename, vfs_mount_points[mntn]->fs);\par
00201 \par
00202     {\cf19 return} 1;\par
00203 \}\par
00204 \par
00205 int32_t vfs_exists({\cf17 const} {\cf18 char} *filename) \{\par
00206     int32_t a = 0;\par
00207     int32_t mntn = vfs_mount_find(filename, &a);\par
00208     filename += a + 1;\par
00209 \par
00210     {\cf19 if} (vfs_mount_points[mntn]->fs_handles->read == 0) \{\par
00211         {\cf19 return} 0;\par
00212     \}\par
00213     {\cf19 return} vfs_mount_points[mntn]->fs_handles->exists(filename, vfs_mount_points[mntn]->fs);\par
00214 \}\par
00215 \par
00216 {\cf18 void} vfs_get_file_name_from_path({\cf18 char} *fpath, {\cf18 char} *buf) \{\par
00217     int32_t len = strlen(fpath), last_slash, was_slash = 0, p1, i;\par
00218     last_slash = len - 1;\par
00219 \par
00220     {\cf19 for} (i = len - 1; i >= 0; i--) \{\par
00221         {\cf19 if} (fpath[i] == {\cf23 '/'}) \{\par
00222             last_slash = i;\par
00223             was_slash = 1;\par
00224             {\cf19 break};\par
00225         \}\par
00226     \}\par
00227 \par
00228     {\cf19 if} (!was_slash) \{\par
00229         p1 = 0;\par
00230     \} {\cf19 else} \{\par
00231         {\cf19 if} (last_slash == len - 1) \{\par
00232             buf[0] = {\cf23 '\\0'};\par
00233             {\cf19 return};\par
00234         \} {\cf19 else} \{\par
00235             p1 = last_slash + 1;\par
00236         \}\par
00237     \}\par
00238 \par
00239     {\cf19 for} (i = p1; i < len; i++) \{\par
00240         buf[i - p1] = fpath[i];\par
00241     \}\par
00242     buf[len - p1] = {\cf23 '\\0'};\par
00243 \}\par
00244 \par
00245 {\cf18 void} vfs_init() \{   \par
00246     vfs_mount_points = (vfs_mount_info_t**) kheap_malloc({\cf17 sizeof}(vfs_mount_info_t) * MOUNTPOINTS_SIZE);\par
00247     __vfs_init = 1;\par
00248     qemu_log({\cf22 "VFS installed"});\par
00249 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ext2.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/fs/ext2.c}
{\xe \v kernel/src/fs/ext2.c}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdint.h>}\par
00002 \par
00003 {\cf21 #define EXT2_DIRECT_BLOCKS 12}\par
00004 \par
00005 \par
00006 {\cf21 #define SUPERBLOCK_SIZE 1024}\par
00007 {\cf21 #define ROOT_INODE_NUMBER 2}\par
00008 \par
00009 {\cf21 #define EXT2_S_IFSOCK   0xC000}\par
00010 {\cf21 #define EXT2_S_IFLNK    0xA000}\par
00011 {\cf21 #define EXT2_S_IFREG    0x8000}\par
00012 {\cf21 #define EXT2_S_IFBLK    0x6000}\par
00013 {\cf21 #define EXT2_S_IFDIR    0x4000}\par
00014 {\cf21 #define EXT2_S_IFCHR    0x2000}\par
00015 {\cf21 #define EXT2_S_IFIFO    0x1000}\par
00016 \par
00017 {\cf17 struct }ext2_super_block \{\par
00018     uint32_t   s_inodes_count;        {\cf20 //  \'CA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'E8\'ED\'E4\'E5\'EA\'F1\'ED\'FB\'F5 \'E4\'E5\'F1\'EA\'F0\'E8\'EF\'F2\'EE\'F0\'EE\'E2 \'E2 \'D4\'D1 }\par
00019     uint32_t   s_blocks_count;        {\cf20 //  \'CA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'E1\'EB\'EE\'EA\'EE\'E2 \'E2 \'D4\'D1 }\par
00020     uint32_t   s_r_blocks_count;      {\cf20 //  \'CA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'E7\'E0\'F0\'E5\'E7\'E5\'F0\'E2\'E8\'F0\'EE\'E2\'E0\'ED\'FB\'F5 \'E1\'EB\'EE\'EA\'EE\'E2 }\par
00021     uint32_t   s_free_blocks_count;   {\cf20 //  \'CA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'F1\'E2\'EE\'E1\'EE\'E4\'ED\'FB\'F5 \'E1\'EB\'EE\'EA\'EE\'E2 }\par
00022     uint32_t   s_free_inodes_count;   {\cf20 //  \'CA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'F1\'E2\'EE\'E1\'EE\'E4\'ED\'FB\'F5 \'E8\'ED\'E4\'E5\'EA\'F1\'ED\'FB\'F5 \'E4\'E5\'F1\'EA\'F0\'E8\'EF\'F2\'EE\'F0\'EE\'E2 }\par
00023     uint32_t   s_first_data_block;    {\cf20 //  \'CD\'EE\'EC\'E5\'F0 \'E4\'E0\'ED\'ED\'EE\'E3\'EE \'E1\'EB\'EE\'EA\'E0 }\par
00024     uint32_t   s_log_block_size;      {\cf20 //  log2(\'F0\'E0\'E7\'EC\'E5\'F0 \'E1\'EB\'EE\'EA\'E0)-10 }\par
00025     int32_t    s_log_frag_size;       {\cf20 //  log2(\'F0\'E0\'E7\'EC\'E5\'F0 \'F4\'F0\'E0\'E3\'EC\'E5\'ED\'F2\'E0)-10 }\par
00026     uint32_t   s_blocks_per_group;    {\cf20 //  #  \'CA\'EE\'EB-\'E2\'EE \'E1\'EB\'EE\'EA\'EE\'E2 \'E2 \'E3\'F0\'F3\'EF\'EF\'E5 }\par
00027     uint32_t   s_frags_per_group;     {\cf20 //  #  \'CA\'EE\'EB-\'E2\'EE \'F4\'F0\'E0\'E3\'EC\'E5\'ED\'F2\'EE\'E2 \'E2 \'E3\'F0\'F3\'EF\'EF\'E5 }\par
00028     uint32_t   s_inodes_per_group;    {\cf20 //  #  \'CA\'EE\'EB-\'E2\'EE \'E8\'ED\'E4\'E5\'EA\'F1\'ED\'FB\'F5 \'E4\'E5\'F1\'EA\'F0\'E8\'EF\'F2\'EE\'F0\'EE\'E2 \'E2 \'E3\'F0\'F3\'EF\'EF\'E5 }\par
00029     uint32_t   s_mtime;               {\cf20 //  \'C2\'F0\'E5\'EC\'FF \'EF\'EE\'F1\'EB\'E5\'E4\'ED\'E5\'E3\'EE \'EC\'EE\'ED\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'E8\'FF \'E2 POSIX \'E2\'F0\'E5\'EC\'E5\'ED\'E8 }\par
00030     uint32_t   s_wtime;               {\cf20 //  \'C2\'F0\'E5\'EC\'FF \'EF\'EE\'F1\'EB\'E5\'E4\'ED\'E5\'E9 \'E7\'E0\'EF\'E8\'F1\'E8 \'E2 POSIX \'E2\'F0\'E5\'EC\'E5\'ED\'E8 }\par
00031     uint16_t   s_mnt_count;           \par
00032     int16_t    s_max_mnt_count;       \par
00033     uint16_t   s_errors;              {\cf20 //  \'CA\'EE\'E4 \'EE\'F8\'E8\'E1\'EA\'E8(\'F1\'EC.\'ED\'E8\'E6\'E5) }\par
00034     uint16_t   s_pad;\par
00035     uint32_t   s_lastcheck;           {\cf20 //  POSIX \'E2\'F0\'E5\'EC\'FF \'EF\'EE\'F1\'EB\'E5\'E4\'ED\'E5\'E9 \'EF\'F0\'EE\'E2\'E5\'F0\'EA\'E8 }\par
00036     uint32_t   s_checkinterval;       {\cf20 //  POSIX \'E2\'F0\'E5\'EC\'FF \'EC\'E5\'E6\'E4\'F3 \'EF\'F0\'E8\'ED\'F3\'E4\'E8\'F2\'E5\'EB\'FC\'ED\'FB\'EC\'E8 \'EF\'F0\'EE\'E2\'E5\'F0\'EA\'E0\'EC\'E8 }\par
00037     uint32_t   s_creator_os;          {\cf20 //  ID \'CE\'D1 (\'F1\'EC. \'ED\'E8\'E6\'E5)  }\par
00038     uint32_t   s_rev_level;           {\cf20 //  \'C2\'E5\'F0\'F1\'E8\'FF }\par
00039     \par
00040     \par
00041     uint16_t   s_def_resuid;          {\cf20 //  UserID, \'EC\'EE\'E3\'F3\'F9\'E8\'E9 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'F2\'FC \'E7\'E0\'F0. \'E1\'EB\'EE\'EA\'E8 }\par
00042     uint16_t   s_def_resgid;          {\cf20 //  GroupID, \'EC\'EE\'E3\'F3\'F9\'E8\'E9 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'F2\'FC \'E7\'E0\'F0. \'E1\'EB\'EE\'EA\'E8 }\par
00043     uint32_t   s_reserved[235];       {\cf20 //  \'C7\'E0\'F0\'E5\'E7\'E5\'F0\'E2\'E8\'F0\'EE\'E2\'E0\'ED\'EE }\par
00044 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
STFS.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/fs/STFS.c}
{\xe \v kernel/src/fs/STFS.c}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 {\cf18 void} create_STFS({\cf18 int} device) \{\par
00005     tty_printf({\cf22 "\\nThis action will remove all data in device %d, enter y(es)/n(not):\\n"}, device);\par
00006     {\cf18 char} buffer[512];\par
00007     {\cf20 //char cmd_char = keyboard_getchar();}\par
00008     {\cf18 int} sectors_max = 0;\par
00009 \par
00010     {\cf20 //if (cmd_char != 'y')\{}\par
00011     {\cf20 //    return;}\par
00012     {\cf20 //\}}\par
00013 \par
00014     \par
00015     sectors_max = ide_get_size(device);\par
00016 \par
00017     {\cf20 // \'C7\'E0\'EF\'E8\'F1\'FC \'E7\'E0\'E3\'F0\'F3\'E7\'F7\'E8\'EA\'E0}\par
00018     memset(buffer, 0, 512);\par
00019     ide_write_sectors(device, 1, 0, (uint32_t)buffer);\par
00020     \par
00021     {\cf20 // \'CE\'F7\'E8\'F1\'F2\'EA\'E0 \'E4\'E8\'F1\'EA\'E0}\par
00022     \par
00023     {\cf19 for} ({\cf18 int} i = 2; i < sectors_max; i++)\{\par
00024         ide_write_sectors(device, 1, i, (uint32_t)buffer);\par
00025     \}\par
00026 \par
00027     {\cf20 // \'C7\'E0\'EF\'E8\'F1\'FC \'EC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'F5 \'D4\'D1}\par
00028     buffer[0] = 0x90;\par
00029     buffer[1] = {\cf23 'S'};\par
00030     buffer[2] = {\cf23 'T'};\par
00031     buffer[3] = {\cf23 'F'};\par
00032     buffer[4] = {\cf23 'S'};\par
00033     buffer[5] = 0;\par
00034     buffer[6] = 1;\par
00035     buffer[7] = 0;\par
00036 \par
00037     ide_write_sectors(device, 1, 1, (uint32_t)buffer);\par
00038 \}\par
00039 \par
00040 \par
00041 {\cf18 void} SSFS_create_folder_raw(uint8_t folder_name[256], {\cf18 int} block)\{\par
00042     {\cf18 char} block_part_1[512];\par
00043     {\cf18 char} block_part_2[512];\par
00044     {\cf18 char} block_part_3[512];\par
00045     {\cf18 char} block_part_4[512];\par
00046 \par
00047 \}\par
00048 \par
00049 \par
00050 {\cf18 void} SSFS_create_file_raw(uint8_t filename[256])\{\par
00051 \par
00052 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB kernel/src/io/imaging.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/io/imaging.c}
{\xe \v kernel/src/io/imaging.c}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'F1\'F2\'F0\'E0\'E8\'E2\'E0\'E5\'EC\'E0\'FF \'E1\'E8\'E1\'EB\'E8\'EE\'F2\'E5\'EA\'E0 \'F0\'E8\'F1\'EE\'E2\'E0\'ED\'E8\'FF \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'E9 \'F4\'EE\'F0\'EC\'E0\'F2\'E0 Duke. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <drivers/vfs.h>}\par
{\f2 #include <mem/kheap.h>}\par
{\f2 #include <io/imaging.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DukeImageMeta} * {\b get_image_metadata} (char *filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E0\'E5\'F2 \'EC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF Duke. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b draw_from_file} (char *filename, int sx, int sy)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'FF \'EE\'F2\'F0\'E8\'F1\'EE\'E2\'EA\'E8 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pixidx} (int width, int x, int y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'FF \'E2\'FB\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'FF \'EF\'EE\'E7\'E8\'F6\'E8\'E8 \'EF\'EE \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0\'EC }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'F1\'F2\'F0\'E0\'E8\'E2\'E0\'E5\'EC\'E0\'FF \'E1\'E8\'E1\'EB\'E8\'EE\'F2\'E5\'EA\'E0 \'F0\'E8\'F1\'EE\'E2\'E0\'ED\'E8\'FF \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'E9 \'F4\'EE\'F0\'EC\'E0\'F2\'E0 Duke. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'E2\'F2\'EE\'F0\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C0\'ED\'E4\'F0\'E5\'E9(\'C4\'E0\'E2\'E8\'E4) \'CF\'E0\'E2\'EB\'E5\'ED\'EA\'EE ({\f2 andrejpavlenko666@gmail.com}) \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'E5\'F0\'F1\'E8\'FF\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1.0 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C4\'E0\'F2\'E0\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
26.07.2022 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.c}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v draw_from_file\:imaging.c}
{\xe \v imaging.c\:draw_from_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char draw_from_file (char *  {\i filename}, int  {\i sx}, int  {\i sy})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'FF \'EE\'F2\'F0\'E8\'F1\'EE\'E2\'EA\'E8 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{- \'C8\'EC\'FF \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sx} \cell }{- \'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 x \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sy} \cell }{- \'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 y \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0 - OK \par
1 - ERROR \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 36}}\par
}
{\xe \v get_image_metadata\:imaging.c}
{\xe \v imaging.c\:get_image_metadata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b DukeImageMeta} * get_image_metadata (char *  {\i filename})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E0\'E5\'F2 \'EC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF Duke. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{- \'C8\'EC\'FF \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'F3 \'F1 \'EC\'E5\'F2\'E0\'E4\'E0\'ED\'ED\'FB\'EC\'E8 \'EF\'F0\'E8 \'F3\'F1\'EF\'E5\'F5\'E5 \par
0 \'CF\'F0\'E8 \'EE\'F8\'E8\'E1\'EA\'E5 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v pixidx\:imaging.c}
{\xe \v imaging.c\:pixidx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pixidx (int  {\i width}, int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'FF \'E2\'FB\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'FF \'EF\'EE\'E7\'E8\'F6\'E8\'E8 \'EF\'EE \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0\'EC }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{- \'C8\'EC\'FF \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sx} \cell }{- \'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 x \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sy} \cell }{- \'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 y \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0 - OK, 1 - ERROR \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b imaging.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 77}}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
imaging.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/io/imaging.c}
{\xe \v kernel/src/io/imaging.c}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00009 {\cf21 #include <drivers/vfs.h>}\par
00010 {\cf21 #include <mem/kheap.h>}\par
00011 {\cf21 #include <io/imaging.h>}\par
00012 \par
00020 {\cf17 struct }DukeImageMeta* get_image_metadata({\cf18 char} *filename) \{\par
00021     {\cf18 char} meta[9];\par
00022     {\cf19 if}(vfs_exists(filename)) \{\par
00023         vfs_read(filename, 0, 9, meta);\par
00024         {\cf19 return} ({\cf17 struct} DukeImageMeta*)meta;\par
00025     \}{\cf19 else}\{ {\cf19 return} ({\cf17 struct} DukeImageMeta*)0; \}\par
00026 \}\par
00027 \par
00036 {\cf18 char} draw_from_file({\cf18 char} *filename, {\cf18 int} sx, {\cf18 int} sy) \{\par
00037     {\cf18 char} meta[9];\par
00038     {\cf19 if}(vfs_exists(filename)) \{\par
00039         vfs_read(filename, 0, 9, meta);\par
00040         {\cf17 struct }DukeImageMeta* realmeta = ({\cf17 struct }DukeImageMeta*)meta;\par
00041 \par
00042         {\cf18 char} *imagedata = kheap_malloc(realmeta->data_length);\par
00043         \par
00044         vfs_read(filename, 8, realmeta->data_length, imagedata);\par
00045 \par
00046         {\cf18 int} x = 0, y = 0;\par
00047         {\cf18 char} mod = realmeta->alpha?4:3;\par
00048         {\cf19 while}(y<realmeta->height) \{\par
00049             x = 0;\par
00050             {\cf19 while}(x<realmeta->width) \{\par
00051                 {\cf18 int} px = pixidx(realmeta->width*mod, x*mod, y);\par
00052                 {\cf18 int} r = imagedata[px];\par
00053                 {\cf18 int} g = imagedata[px+1];\par
00054                 {\cf18 int} b = imagedata[px+2];\par
00055                 {\cf18 int} a = imagedata[px+3];\par
00056                 {\cf18 int} color = ((r&0xff)<<16)|((g&0xff)<<8)|(b&0xff);\par
00057                 {\cf19 if}(mod && a!=0) \{\par
00058                     set_pixel(sx+x, sy+y, color);\par
00059                 \}\par
00060                 x++;\par
00061             \}\par
00062             y++;\par
00063         \}\par
00064 \par
00065         kheap_free(imagedata);\par
00066     \}{\cf19 else}\{ {\cf19 return} 1; \}\par
00067     {\cf19 return} 0;\par
00068 \}\par
00069 \par
00077 {\cf18 int} pixidx({\cf18 int} width, {\cf18 int} x, {\cf18 int} y) \{\par
00078     {\cf19 return} width*y + x;\par
00079 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB kernel/src/io/ports.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/io/ports.c}
{\xe \v kernel/src/io/ports.c}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'F1\'EB\'EE\'E9\'EA\'E0 \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 \'EF\'EE\'F0\'F2\'E0\'EC\'E8 \'E2\'E2\'EE\'E4\'E0-\'E2\'FB\'E2\'EE\'E4\'E0 }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <kernel.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b outb} (uint16_t port, uint8_t val)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'EF\'E8\'F1\'FC \'EE\'E4\'ED\'EE\'E3\'EE \'E1\'E0\'E9\'F2\'E0 \'E2 \'EF\'EE\'F0\'F2 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b inb} (uint16_t port)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'EE\'E4\'ED\'EE\'E3\'EE \'E1\'E0\'E9\'F2\'E0 \'E8\'E7 \'EF\'EE\'F0\'F2\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b outl} (uint16_t port, uint32_t val)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'EF\'E8\'F1\'FC 32\'F5 \'E1\'E8\'F2\'ED\'EE\'E3\'EE \'F7\'E8\'F1\'EB\'E0 \'E2 \'EF\'EE\'F0\'F2 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b inl} (uint16_t port)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F2\'E5\'ED\'E8\'E5 32\'F5 \'E1\'E8\'F2\'ED\'EE\'E3\'EE \'F7\'E8\'F1\'EB\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b ins} (uint16_t port)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F2\'E5\'ED\'E8\'E5 word \'E8\'E7 \'EF\'EE\'F0\'F2\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b outs} (uint16_t port, uint16_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'EF\'E8\'F1\'FC word \'E2 \'EF\'EE\'F0\'F2 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insl} (uint16_t port, uint32_t *buffer, int32_t times)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F2\'E5\'ED\'E8\'E5 \'E4\'EB\'E8\'ED\'ED\'EE\'E3\'EE \'F1\'EB\'EE\'E2\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b outsl} (uint16_t port, uint32_t *buffer, int32_t times)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'EF\'E8\'F1\'FC \'E4\'EB\'E8\'ED\'ED\'EE\'E3\'EE \'F1\'EB\'EE\'E2\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b com1_is_transmit_empty} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'E2\'E5\'F0\'EA\'E0 \'E7\'E0\'ED\'FF\'F2\'EE\'F1\'F2\'E8 \'EF\'EE\'F0\'F2\'E0 COM1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b com1_write_char} (char a)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'EE\'E4\'ED\'EE\'E3\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 COM1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b qemu_putstring} (char log_data[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F1\'F2\'F0\'EE\'EA\'E8 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 COM1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b io_wait} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CD\'E5\'E1\'EE\'EB\'FC\'F8\'E0\'FF \'E7\'E0\'E4\'E5\'F0\'E6\'EA\'E0 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'FF \'EF\'EE\'F0\'F2 128(0x80) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b qemu_putuint} (uint32_t i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'E4\'F4\'F3\'ED\'EA\'F6\'E8\'FF-\'EE\'E1\'F0\'E0\'E1\'EE\'F2\'F7\'E8\'EA \'E4\'EB\'FF \'F4\'F3\'ED\'EA\'F6\'E8\'E8 qemu_putint. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b qemu_putint} (int32_t i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F6\'E5\'EB\'EE\'E3\'EE \'F7\'E8\'F1\'EB\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 COM1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b qemu_puthex} (uint32_t i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F7\'E8\'F1\'EB\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 COM1 \'E2 \'F4\'EE\'F0\'EC\'E0\'F2\'E5 HEX. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b qemu_puthex_v} (uint32_t i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F7\'E8\'F1\'EB\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 COM1 \'E2 \'F4\'EE\'F0\'EC\'E0\'F2\'E5 HEX \'E1\'E5\'E7 0x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b qemu_print} (char *format, va_list args)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'E4\'F4\'F3\'ED\'EA\'F6\'E8\'FF-\'EE\'E1\'F0\'E0\'E1\'EE\'F2\'F7\'E8\'EA \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'EE\'E2 \'E4\'EB\'FF qemu_printf. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b qemu_printf} (char *text,...)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F7\'E5\'F0\'E5\'E7 COM1 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'E8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b isprint} (char c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'E2\'E5\'F0\'EA\'E0, \'F7\'E8\'F2\'E0\'E5\'EC \'EB\'E8 \'F1\'E8\'EC\'E2\'EE\'EB }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b is_com_port} (int port)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'E2\'E5\'F0\'EA\'E0 \'ED\'E0 \'F2\'E8\'EF \'EF\'EE\'F0\'F2\'E0 }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'F1\'EB\'EE\'E9\'EA\'E0 \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 \'EF\'EE\'F0\'F2\'E0\'EC\'E8 \'E2\'E2\'EE\'E4\'E0-\'E2\'FB\'E2\'EE\'E4\'E0 \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'E2\'F2\'EE\'F0\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C0\'F0\'E5\'ED \'C5\'EB\'F7\'E8\'ED\'FF\'ED ({\f2 a2.dev@yandex.com}) \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'E5\'F0\'F1\'E8\'FF\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.1.0 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C4\'E0\'F2\'E0\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2022-08-08 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'E2\'F2\'EE\'F0\'F1\'F2\'E2\'EE\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Copyright \'C0\'F0\'E5\'ED \'C5\'EB\'F7\'E8\'ED\'FF\'ED (c) 2022 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v com1_is_transmit_empty\:ports.c}
{\xe \v ports.c\:com1_is_transmit_empty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t com1_is_transmit_empty ()}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'E2\'E5\'F0\'EA\'E0 \'E7\'E0\'ED\'FF\'F2\'EE\'F1\'F2\'E8 \'EF\'EE\'F0\'F2\'E0 COM1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int32_t - \'F1\'EE\'F1\'F2\'EE\'FF\'ED\'E8\'E5 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 123}}\par
}
{\xe \v com1_write_char\:ports.c}
{\xe \v ports.c\:com1_write_char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void com1_write_char (char  {\i a})}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'EE\'E4\'ED\'EE\'E3\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 COM1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{\cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 133}}\par
}
{\xe \v inb\:ports.c}
{\xe \v ports.c\:inb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t inb (uint16_t  {\i port})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'EE\'E4\'ED\'EE\'E3\'EE \'E1\'E0\'E9\'F2\'E0 \'E8\'E7 \'EF\'EE\'F0\'F2\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i port} \cell }{- \'EF\'EE\'F0\'F2 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t - \'E4\'E0\'ED\'ED\'FB\'E5 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 31}}\par
}
{\xe \v inl\:ports.c}
{\xe \v ports.c\:inl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t inl (uint16_t  {\i port})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F2\'E5\'ED\'E8\'E5 32\'F5 \'E1\'E8\'F2\'ED\'EE\'E3\'EE \'F7\'E8\'F1\'EB\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i port} \cell }{- \'EF\'EE\'F0\'F2 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint32_t - \'F7\'E8\'F1\'EB\'EE \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 57}}\par
}
{\xe \v ins\:ports.c}
{\xe \v ports.c\:ins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t ins (uint16_t  {\i port})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F2\'E5\'ED\'E8\'E5 word \'E8\'E7 \'EF\'EE\'F0\'F2\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i port} \cell }{- \'EF\'EE\'F0\'F2 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint16_t - word \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 72}}\par
}
{\xe \v insl\:ports.c}
{\xe \v ports.c\:insl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void insl (uint16_t  {\i port}, uint32_t *  {\i buffer}, int32_t  {\i times})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F2\'E5\'ED\'E8\'E5 \'E4\'EB\'E8\'ED\'ED\'EE\'E3\'EE \'F1\'EB\'EE\'E2\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i port} \cell }{- \'EF\'EE\'F0\'F2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{- \'E4\'E0\'ED\'ED\'FB\'E5 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i times} \cell }{- \'F1\'EA\'EE\'EB\'FC\'EA\'EE \'E4\'E0\'ED\'ED\'FB\'F5 \'EF\'F0\'EE\'F7\'E5\'F1\'F2\'FC \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 97}}\par
}
{\xe \v io_wait\:ports.c}
{\xe \v ports.c\:io_wait}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void io_wait (void )}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CD\'E5\'E1\'EE\'EB\'FC\'F8\'E0\'FF \'E7\'E0\'E4\'E5\'F0\'E6\'EA\'E0 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'FF \'EF\'EE\'F0\'F2 128(0x80) }}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 155}}\par
}
{\xe \v is_com_port\:ports.c}
{\xe \v ports.c\:is_com_port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int is_com_port (int  {\i port})}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'E2\'E5\'F0\'EA\'E0 \'ED\'E0 \'F2\'E8\'EF \'EF\'EE\'F0\'F2\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i port} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'ED\'EE\'EC\'E5\'F0 \'EF\'EE\'F0\'F2\'E0 \'E8\'EB\'E8 0 \'E2 \'F1\'EB\'F3\'F7\'E0\'E5 \'E5\'F1\'EB\'E8 \'EF\'EE\'F0\'F2 \'ED\'E5 \'E2 \'F1\'EF\'E8\'F1\'EA\'E5 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 330}}\par
}
{\xe \v isprint\:ports.c}
{\xe \v ports.c\:isprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int isprint (char  {\i c})}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'E2\'E5\'F0\'EA\'E0, \'F7\'E8\'F2\'E0\'E5\'EC \'EB\'E8 \'F1\'E8\'EC\'E2\'EE\'EB }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{\'D1\'E8\'EC\'E2\'EE\'EB \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1 \'E5\'F1\'EB\'E8 \'F7\'E8\'F2\'E0\'E5\'EC\'FB\'E9, 0 \'E5\'F1\'EB\'E8 \'ED\'E5\'F2 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 319}}\par
}
{\xe \v outb\:ports.c}
{\xe \v ports.c\:outb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void outb (uint16_t  {\i port}, uint8_t  {\i val})}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'EF\'E8\'F1\'FC \'EE\'E4\'ED\'EE\'E3\'EE \'E1\'E0\'E9\'F2\'E0 \'E2 \'EF\'EE\'F0\'F2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i port} \cell }{- \'EF\'EE\'F0\'F2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i val} \cell }{- \'E4\'E0\'ED\'ED\'FB\'E5 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v outl\:ports.c}
{\xe \v ports.c\:outl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void outl (uint16_t  {\i port}, uint32_t  {\i val})}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'EF\'E8\'F1\'FC 32\'F5 \'E1\'E8\'F2\'ED\'EE\'E3\'EE \'F7\'E8\'F1\'EB\'E0 \'E2 \'EF\'EE\'F0\'F2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i port} \cell }{- \'EF\'EE\'F0\'F2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i val} \cell }{- \'F7\'E8\'F1\'EB\'EE \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 46}}\par
}
{\xe \v outs\:ports.c}
{\xe \v ports.c\:outs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void outs (uint16_t  {\i port}, uint16_t  {\i data})}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'EF\'E8\'F1\'FC word \'E2 \'EF\'EE\'F0\'F2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i port} \cell }{- \'EF\'EE\'F0\'F2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{- \'E4\'E0\'ED\'ED\'FB\'E5 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 85}}\par
}
{\xe \v outsl\:ports.c}
{\xe \v ports.c\:outsl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void outsl (uint16_t  {\i port}, uint32_t *  {\i buffer}, int32_t  {\i times})}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'EF\'E8\'F1\'FC \'E4\'EB\'E8\'ED\'ED\'EE\'E3\'EE \'F1\'EB\'EE\'E2\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i port} \cell }{- \'EF\'EE\'F0\'F2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{- \'E4\'E0\'ED\'ED\'FB\'E5 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i times} \cell }{- \'F1\'EA\'EE\'EB\'FC\'EA\'EE \'E4\'E0\'ED\'ED\'FB\'F5 \'EE\'F2\'EF\'F0\'E0\'E2\'E8\'F2\'FC \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 111}}\par
}
{\xe \v qemu_print\:ports.c}
{\xe \v ports.c\:qemu_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void qemu_print (char *  {\i format}, va_list  {\i args})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'E4\'F4\'F3\'ED\'EA\'F6\'E8\'FF-\'EE\'E1\'F0\'E0\'E1\'EE\'F2\'F7\'E8\'EA \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'EE\'E2 \'E4\'EB\'FF qemu_printf. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i format} \cell }{\'D1\'F2\'F0\'EE\'EA\'E0 \'F4\'EE\'F0\'EC\'E0\'F2\'EE\'E2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 257}}\par
}
{\xe \v qemu_printf\:ports.c}
{\xe \v ports.c\:qemu_printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void qemu_printf (char *  {\i text},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F7\'E5\'F0\'E5\'E7 COM1 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'E8 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{\'D1\'F2\'F0\'EE\'EA\'E0 \'F1 \'EF\'E0\'F0\'E0\'EC\'E5\'F2\'F0\'E0\'EC\'E8 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 304}}\par
}
{\xe \v qemu_puthex\:ports.c}
{\xe \v ports.c\:qemu_puthex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void qemu_puthex (uint32_t  {\i i})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F7\'E8\'F1\'EB\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 COM1 \'E2 \'F4\'EE\'F0\'EC\'E0\'F2\'E5 HEX. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{- \'F7\'E8\'F1\'EB\'EE \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 207}}\par
}
{\xe \v qemu_puthex_v\:ports.c}
{\xe \v ports.c\:qemu_puthex_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void qemu_puthex_v (uint32_t  {\i i})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F7\'E8\'F1\'EB\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 COM1 \'E2 \'F4\'EE\'F0\'EC\'E0\'F2\'E5 HEX \'E1\'E5\'E7 0x. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{- \'F7\'E8\'F1\'EB\'EE \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 232}}\par
}
{\xe \v qemu_putint\:ports.c}
{\xe \v ports.c\:qemu_putint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void qemu_putint (int32_t  {\i i})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F6\'E5\'EB\'EE\'E3\'EE \'F7\'E8\'F1\'EB\'E0 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 COM1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{- \'F7\'E8\'F1\'EB\'EE \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 192}}\par
}
{\xe \v qemu_putstring\:ports.c}
{\xe \v ports.c\:qemu_putstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void qemu_putstring (char  {\i log_data}[])}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F1\'F2\'F0\'EE\'EA\'E8 \'F7\'E5\'F0\'E5\'E7 \'EF\'EE\'F0\'F2 COM1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i log_data} \cell }{- \'F1\'F2\'F0\'EE\'EA\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 144}}\par
}
{\xe \v qemu_putuint\:ports.c}
{\xe \v ports.c\:qemu_putuint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void qemu_putuint (uint32_t  {\i i})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'E4\'F4\'F3\'ED\'EA\'F6\'E8\'FF-\'EE\'E1\'F0\'E0\'E1\'EE\'F2\'F7\'E8\'EA \'E4\'EB\'FF \'F4\'F3\'ED\'EA\'F6\'E8\'E8 qemu_putint. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{\cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ports.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 165}}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ports.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/io/ports.c}
{\xe \v kernel/src/io/ports.c}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00011 {\cf21 #include <kernel.h>}\par
00012 \par
00013 \par
00020 {\cf18 void} outb(uint16_t port, uint8_t val)\{\par
00021     {\cf17 asm} {\cf17 volatile}({\cf22 "outb %1, %0"} : : {\cf22 "dN"}(port), {\cf22 "a"}(val));\par
00022 \}\par
00023 \par
00024 \par
00031 uint8_t inb(uint16_t port) \{\par
00032     uint8_t ret;\par
00033     {\cf17 asm} {\cf17 volatile} ( {\cf22 "inb %1, %0"}\par
00034                    : {\cf22 "=a"}(ret)\par
00035                    : {\cf22 "Nd"}(port) );\par
00036     {\cf19 return} ret;\par
00037 \}\par
00038 \par
00039 \par
00046 {\cf18 void} outl(uint16_t port, uint32_t val) \{\par
00047     {\cf17 asm} {\cf17 volatile} ( {\cf22 "outl %0, %1"} : : {\cf22 "a"}(val), {\cf22 "Nd"}(port) );\par
00048 \}\par
00049 \par
00050 \par
00057 uint32_t inl(uint16_t port) \{\par
00058     uint32_t ret;\par
00059     {\cf17 asm} {\cf17 volatile} ( {\cf22 "inl %1, %0"}\par
00060                    : {\cf22 "=a"}(ret)\par
00061                    : {\cf22 "Nd"}(port) );\par
00062     {\cf19 return} ret;\par
00063 \}\par
00064 \par
00065 \par
00072 uint16_t ins(uint16_t port) \{\par
00073     uint16_t rv;\par
00074     {\cf17 asm} {\cf17 volatile} ({\cf22 "inw %1, %0"} : {\cf22 "=a"} (rv) : {\cf22 "dN"} (port));\par
00075     {\cf19 return} rv;\par
00076 \}\par
00077 \par
00078 \par
00085 {\cf18 void} outs(uint16_t port, uint16_t data) \{\par
00086     {\cf17 asm} {\cf17 volatile} ({\cf22 "outw %1, %0"} : : {\cf22 "dN"} (port), {\cf22 "a"} (data));\par
00087 \}\par
00088 \par
00089 \par
00097 {\cf18 void} insl(uint16_t port, uint32_t *buffer, int32_t times) \{\par
00098     {\cf19 for} (int32_t index = 0; index < times; index++) \{\par
00099         buffer[index] = inl(port);\par
00100     \}\par
00101 \}\par
00102 \par
00103 \par
00111 {\cf18 void} outsl(uint16_t port, uint32_t *buffer, int32_t times) \{\par
00112     {\cf19 for} (int32_t index = 0; index < times; index++) \{\par
00113         outl(port, buffer[index]);\par
00114     \}\par
00115 \}\par
00116 \par
00117 \par
00123 int32_t com1_is_transmit_empty() \{\par
00124     {\cf19 return} inb(PORT_COM1 + 5) & 0x20;\par
00125 \}\par
00126 \par
00127 \par
00133 {\cf18 void} com1_write_char({\cf18 char} a) \{\par
00134     {\cf19 while} (com1_is_transmit_empty() == 0);\par
00135     outb(PORT_COM1, a);\par
00136 \}\par
00137 \par
00138 \par
00144 {\cf18 void} qemu_putstring({\cf18 char} log_data[]) \{\par
00145     {\cf19 for} ({\cf18 size_t} i = 0; i < strlen(log_data); i++) \{\par
00146         com1_write_char(log_data[i]);\par
00147     \}\par
00148 \}\par
00149 \par
00150 \par
00155 {\cf18 void} io_wait({\cf18 void}) \{\par
00156     outb(0x80, 0);\par
00157 \}\par
00158 \par
00159 \par
00165 {\cf18 void} qemu_putuint(uint32_t i) \{\par
00166     uint32_t n, d = 1000000000;\par
00167     {\cf18 char} str[255];\par
00168     uint32_t dec_index = 0;\par
00169 \par
00170     {\cf19 while} ((i / d == 0) && (d >= 10)) \{\par
00171         d /= 10;\par
00172     \}\par
00173     n = i;\par
00174 \par
00175     {\cf19 while} (d >= 10) \{\par
00176         str[dec_index++] = ((char) (({\cf18 int}) {\cf23 '0'} + n / d));\par
00177         n = n % d;\par
00178         d /= 10;\par
00179     \}\par
00180 \par
00181     str[dec_index++] = ((char) (({\cf18 int}) {\cf23 '0'} + n));\par
00182     str[dec_index] = 0;\par
00183     qemu_putstring(str);\par
00184 \}\par
00185 \par
00186 \par
00192 {\cf18 void} qemu_putint(int32_t i) \{\par
00193     {\cf19 if} (i >= 0) \{\par
00194         qemu_putuint(i);\par
00195     \} {\cf19 else} \{\par
00196         com1_write_char({\cf23 '-'});\par
00197         qemu_putuint(-i);\par
00198     \}\par
00199 \}\par
00200 \par
00201 \par
00207 {\cf18 void} qemu_puthex(uint32_t i) \{\par
00208     {\cf17 const} {\cf18 unsigned} {\cf18 char} hex[16]  =  \{ {\cf23 '0'}, {\cf23 '1'}, {\cf23 '2'}, {\cf23 '3'}, {\cf23 '4'}, {\cf23 '5'}, {\cf23 '6'}, {\cf23 '7'}, {\cf23 '8'}, {\cf23 '9'}, {\cf23 'A'}, {\cf23 'B'}, {\cf23 'C'}, {\cf23 'D'}, {\cf23 'E'}, {\cf23 'F'} \};\par
00209     uint32_t n, d = 0x10000000;\par
00210 \par
00211     qemu_putstring({\cf22 "0x"});\par
00212 \par
00213     {\cf19 while} ((i / d == 0) && (d >= 0x10)) \{\par
00214         d /= 0x10;\par
00215     \}\par
00216     n = i;\par
00217 \par
00218     {\cf19 while} (d >= 0xF) \{\par
00219         com1_write_char(hex[n / d]);\par
00220         n = n % d;\par
00221         d /= 0x10;\par
00222     \}\par
00223     com1_write_char(hex[n]);\par
00224 \}\par
00225 \par
00226 \par
00232 {\cf18 void} qemu_puthex_v(uint32_t i) \{\par
00233     {\cf17 const} {\cf18 unsigned} {\cf18 char} hex[16]  =  \{ {\cf23 '0'}, {\cf23 '1'}, {\cf23 '2'}, {\cf23 '3'}, {\cf23 '4'}, {\cf23 '5'}, {\cf23 '6'}, {\cf23 '7'}, {\cf23 '8'}, {\cf23 '9'}, {\cf23 'A'}, {\cf23 'B'}, {\cf23 'C'}, {\cf23 'D'}, {\cf23 'E'}, {\cf23 'F'} \};\par
00234     uint32_t n, d = 0x10000000;\par
00235 \par
00236 \par
00237     {\cf19 while} ((i / d == 0) && (d >= 0x10)) \{\par
00238         d /= 0x10;\par
00239     \}\par
00240     n = i;\par
00241 \par
00242     {\cf19 while} (d >= 0xF) \{\par
00243         com1_write_char(hex[n / d]);\par
00244         n = n % d;\par
00245         d /= 0x10;\par
00246     \}\par
00247     com1_write_char(hex[n]);\par
00248 \}\par
00249 \par
00250 \par
00257 {\cf18 void} qemu_print({\cf18 char} *format, va_list args) \{\par
00258     int32_t i = 0;\par
00259     {\cf18 char} *string;\par
00260 \par
00261     {\cf19 while} (format[i]) \{\par
00262         {\cf19 if} (format[i] == {\cf23 '%'}) \{\par
00263             i++;\par
00264             {\cf19 switch} (format[i]) \{\par
00265             {\cf19 case} {\cf23 's'}:\par
00266                 {\cf18 string} = va_arg(args, {\cf18 char}*);\par
00267                 qemu_putstring({\cf18 string});\par
00268                 {\cf19 break};\par
00269             {\cf19 case} {\cf23 'c'}:\par
00270                 {\cf20 // To-Do: fix this! "warning: cast to pointer from integer of different size"}\par
00271                 com1_write_char(({\cf18 char})va_arg(args, {\cf18 int}));\par
00272                 {\cf19 break};\par
00273             {\cf19 case} {\cf23 'd'}:\par
00274                 qemu_putint(va_arg(args, {\cf18 int}));\par
00275                 {\cf19 break};\par
00276             {\cf19 case} {\cf23 'i'}:\par
00277                 qemu_putint(va_arg(args, {\cf18 int}));\par
00278                 {\cf19 break};\par
00279             {\cf19 case} {\cf23 'u'}:\par
00280                 qemu_putuint(va_arg(args, {\cf18 unsigned} {\cf18 int}));\par
00281                 {\cf19 break};\par
00282             {\cf19 case} {\cf23 'x'}:\par
00283                 qemu_puthex(va_arg(args, uint32_t));\par
00284                 {\cf19 break};\par
00285             {\cf19 case} {\cf23 'v'}:\par
00286                 qemu_puthex_v(va_arg(args, uint32_t));\par
00287                 {\cf19 break};\par
00288             {\cf19 default}:\par
00289                 com1_write_char(format[i]);\par
00290             \}\par
00291         \} {\cf19 else} \{\par
00292             com1_write_char(format[i]);\par
00293         \}\par
00294         i++;\par
00295     \}\par
00296 \}\par
00297 \par
00298 \par
00304 {\cf18 void} qemu_printf({\cf18 char} *text, ...) \{\par
00305     va_list args;\par
00306     {\cf20 // find the first argument}\par
00307     va_start(args, text);\par
00308     {\cf20 // pass print32_t the output handle the format text and the first argument}\par
00309     qemu_print(text, args);\par
00310 \}\par
00311 \par
00312 \par
00319 {\cf18 int} isprint({\cf18 char} c) \{\par
00320     {\cf19 return} ((c >= {\cf23 ' '} && c <= {\cf23 '~'}) ? 1 : 0);\par
00321 \}\par
00322 \par
00323 \par
00330 {\cf18 int} is_com_port({\cf18 int} port) \{\par
00331     {\cf19 switch} (port) \{\par
00332         {\cf19 case} PORT_COM1:\par
00333             {\cf19 return} 1;\par
00334             {\cf19 break};\par
00335         {\cf19 case} PORT_COM2:\par
00336             {\cf19 return} 2;\par
00337             {\cf19 break};\par
00338         {\cf19 case} PORT_COM3:\par
00339             {\cf19 return} 3;\par
00340             {\cf19 break};\par
00341         {\cf19 case} PORT_COM4:\par
00342             {\cf19 return} 4;\par
00343             {\cf19 break};\par
00344         {\cf19 case} PORT_COM5:\par
00345             {\cf19 return} 5;\par
00346             {\cf19 break};\par
00347         {\cf19 case} PORT_COM6:\par
00348             {\cf19 return} 6;\par
00349             {\cf19 break};\par
00350         {\cf19 case} PORT_COM7:\par
00351             {\cf19 return} 7;\par
00352             {\cf19 break};\par
00353         {\cf19 case} PORT_COM8:\par
00354             {\cf19 return} 8;\par
00355             {\cf19 break};\par
00356         {\cf19 default}:\par
00357             {\cf19 return} 0;\par
00358             {\cf19 break};\par
00359     \}\par
00360 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
shell.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/io/shell.c}
{\xe \v kernel/src/io/shell.c}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 {\cf21 #include <libk/string.h>}\par
00003 {\cf21 #include <io/imaging.h>}\par
00004 \par
00005 {\cf20 //#define PIM_DEBUG}\par
00006 \par
00007 {\cf18 char} current_dir[256] = {\cf22 "/initrd/apps/"};\par
00008 \par
00013 {\cf18 void} shell() \{\par
00014     changeStageKeyboard(1);\par
00015     tty_setcolor(COLOR_ALERT);\par
00016     tty_printf({\cf22 "\\nUse \\"help\\" command to get info about commands.\\n"});\par
00017 \par
00018     tty_setcolor(COLOR_TEXT);\par
00019 {\cf21     #ifdef PIM_DEBUG}\par
00020     {\cf20 // \'C7\'E0\'E4\'E0\'E5\'EC \'EF\'F3\'F2\'FC}\par
00021     {\cf18 char} * filename = {\cf22 "/initrd/chip.txt"};\par
00022     {\cf20 // \'CE\'F2\'EA\'F0\'FB\'E2\'E0\'E5\'EC \'F4\'E0\'E9\'EB (\'F0\'E5\'E6\'E8\'EC \'F0\'E0\'E1\'EE\'F2\'FB \'EF\'EE\'EA\'E0 \'ED\'E5 \'E2\'E0\'E6\'ED\'EE, \'F2\'E0\'EA \'EA\'E0\'EA \'EE\'F1\'EE\'E1\'EE \'ED\'E5 \'EF\'F0\'EE\'E2\'E5\'F0\'FF\'E5\'F2\'F1\'FF)}\par
00023     FILE* debug_readme = fopen(filename,{\cf22 "r"});\par
00024     {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'F0\'E0\'E7\'EC\'E5\'F0 \'F4\'E0\'E9\'EB\'E0}\par
00025     uint32_t lSize = fsize(debug_readme);\par
00026     {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'F4\'E0\'E9\'EB\'E0}\par
00027     {\cf18 char} * buffer = fread(debug_readme);\par
00028     {\cf20 // \'C7\'E0\'EA\'EE\'ED\'F7\'E8\'EB\'E8 \'F0\'E0\'E1\'EE\'F2\'F3 \'F1 \'F4\'E0\'E9\'EB\'EE\'EC}\par
00029     fclose(debug_readme);\par
00030     {\cf20 // \'C2\'FB\'E2\'EE\'E4\'E8\'EC \'F2\'E5\'EA\'F1\'F2}\par
00031     tty_printf({\cf22 "Debug stdio.c:\\n\\tPath: %s\\n\\tSize: %d\\n\\tText: %s\\n"},filename,lSize,buffer);\par
00032 \par
00033     {\cf20 // \'C7\'E0\'E4\'E0\'E5\'EC \'EF\'F3\'F2\'FC, \'ED\'EE \'EA \'F4\'E0\'E9\'EB\'F3 \'EA\'EE\'F2\'EE\'F0\'FB\'E9 \'ED\'E5 \'F0\'E0\'E1\'EE\'F2\'E0\'E5\'F2}\par
00034     {\cf18 char} * filename2 = {\cf22 "/initrd/readm.txt"};\par
00035     {\cf20 // \'CE\'F2\'EA\'F0\'FB\'E2\'E0\'E5\'EC \'F4\'E0\'E9\'EB (\'F0\'E5\'E6\'E8\'EC \'F0\'E0\'E1\'EE\'F2\'FB \'EF\'EE\'EA\'E0 \'ED\'E5 \'E2\'E0\'E6\'ED\'EE, \'F2\'E0\'EA \'EA\'E0\'EA \'EE\'F1\'EE\'E1\'EE \'ED\'E5 \'EF\'F0\'EE\'E2\'E5\'F0\'FF\'E5\'F2\'F1\'FF)}\par
00036     FILE* debug_readme2 = fopen(filename2,{\cf22 "r"});\par
00037     {\cf19 if} (ferror(debug_readme2) != 0)\{\par
00038         (perror(debug_readme2,{\cf22 "Error"}));\par
00039         fdebuginfo(debug_readme2);\par
00040     \} {\cf19 else} \{\par
00041         {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'F0\'E0\'E7\'EC\'E5\'F0 \'F4\'E0\'E9\'EB\'E0}\par
00042         uint32_t lSize2 = fsize(debug_readme2);\par
00043         {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'F4\'E0\'E9\'EB\'E0}\par
00044         {\cf18 char} * buffer2 = fread(debug_readme2);\par
00045         {\cf20 // \'C7\'E0\'EA\'EE\'ED\'F7\'E8\'EB\'E8 \'F0\'E0\'E1\'EE\'F2\'F3 \'F1 \'F4\'E0\'E9\'EB\'EE\'EC}\par
00046         fclose(debug_readme2);\par
00047         {\cf20 // \'C2\'FB\'E2\'EE\'E4\'E8\'EC \'F2\'E5\'EA\'F1\'F2}\par
00048         tty_printf({\cf22 "Debug stdio.c:\\n\\tPath: %s\\n\\tSize: %d\\n\\tText: %s\\n"},filename2,lSize2,buffer2);\par
00049     \}\par
00050 {\cf21     #endif}\par
00051 \par
00052     {\cf19 while} (1) \{\par
00053         tty_setcolor(COLOR_SYS_TEXT);\par
00054         tty_printf({\cf22 "\\nROOT "});\par
00055         tty_setcolor(COLOR_SYS_PATH);\par
00056         tty_printf({\cf22 "%s>"}, current_dir);\par
00057 \par
00058         tty_setcolor(COLOR_TEXT);\par
00059         {\cf18 char} *cmd = keyboard_gets();\par
00060 \par
00061         {\cf19 if} (strlen(cmd) == 0) \{\par
00062             {\cf19 continue};\par
00063         \} {\cf19 else} {\cf19 if} (strlen(cmd) > 256) \{\par
00064             tty_setcolor(COLOR_ERROR);\par
00065             tty_printf({\cf22 "\\nERROR: limit 256 char's!"});\par
00066             {\cf19 continue};\par
00067         \}\par
00068 \par
00069         tty_printf({\cf22 "\\n"});\par
00070 \par
00071         {\cf19 if} (strcmp(cmd, {\cf22 "about"}) == 0) \{\par
00072             tty_printf({\cf22 "SynapseOS is a simple x86 C operating system with a well-documented kernel."});\par
00073         \} {\cf19 else} {\cf19 if} (strcmp(cmd, {\cf22 "reboot"}) == 0) \{\par
00074             tty_printf({\cf22 "REBOOT NOW!\\n"});\par
00075             sleep_ms(100);\par
00076             reboot();\par
00077         \} {\cf19 else} {\cf19 if} (strcmp(cmd, {\cf22 "shutdown"}) == 0) \{\par
00078             tty_printf({\cf22 "SHUTDOWN NOW!\\n"});\par
00079             sleep_ms(100);\par
00080             shutdown();\par
00081         \} {\cf19 else} {\cf19 if} (strcmp(cmd, {\cf22 "tui"}) == 0) \{\par
00082             tui();\par
00083         \} {\cf19 else} {\cf19 if} (strcmp(cmd, {\cf22 "cls"}) == 0) \{\par
00084             clean_screen();\par
00085         \} {\cf19 else} {\cf19 if} (strcmp(cmd, {\cf22 "cpuinfo"}) == 0) \{\par
00086             detect_cpu(0);\par
00087         \} {\cf19 else} {\cf19 if} (strcmp(cmd, {\cf22 "help"}) == 0) \{\par
00088             tty_printf({\cf22 "Commands:\\n"} \\\par
00089                         {\cf22 "\\t\\t->help                |get list of commands\\n"} \\\par
00090                         {\cf22 "\\t\\t->cls                 |clean screen\\n"} \\\par
00091                         {\cf22 "\\t\\t->cat   <filename>    |open file to read\\n"} \\\par
00092                         {\cf22 "\\t\\t->cd    <folder>      |open folder\\n"} \\\par
00093                         {\cf22 "\\t\\t->./<file>            |run programm in current folder\\n"} \\\par
00094                         {\cf22 "\\t\\t->sbf   <code>        |run sbf programm\\n"} \\\par
00095                         {\cf22 "\\t\\t->ls                  |list of files\\n"} \\\par
00096                         {\cf22 "\\t\\t->sysinfo             |information about system\\n"} \\\par
00097                         {\cf22 "\\t\\t->pcilist             |list of pci devices\\n"} \\\par
00098                         {\cf22 "\\t\\t->cpuinfo             |info cpu\\n"} \\\par
00099                         {\cf22 "\\t\\t->reboot              |reboot device\\n"} \\\par
00100                         {\cf22 "\\t\\t->shutdown            |shutdown device\\n"} \\\par
00101                         {\cf22 "\\t\\t->tui                 |enable tui\\n"} \\\par
00102                         {\cf22 "\\t\\t->view   <filename>   |shows an image\\n"} \\\par
00103                         {\cf22 "\\n"} \par
00104                         );\par
00105         \} {\cf19 else} {\cf19 if} (strlen(cmd) > 4 && strncmp(cmd, {\cf22 "cat "}, 4) == 0) \{\par
00106             {\cf18 char} fname[256] = \{0\};\par
00107 \par
00108             {\cf18 char} *tok = ({\cf18 char} *)strtok(cmd, {\cf22 " "});\par
00109             \par
00110             tok = ({\cf18 char} *)strtok(0, {\cf22 " "}); {\cf20 // tok - \'E8\'EC\'FF \'F4\'E0\'E9\'EB\'E0}\par
00111 \par
00112             {\cf19 if} (fname[0] == 0) \{\par
00113                 cat(tok);\par
00114             \} {\cf19 else} \{\par
00115                 tty_setcolor(COLOR_ERROR);\par
00116                 tty_printf({\cf22 "cat: incorrect argument\\n"});\par
00117             \}\par
00118         \} {\cf19 else} {\cf19 if} (strlen(cmd) > 3 && strncmp(cmd, {\cf22 "cd "}, 3) == 0) \{\par
00119             {\cf18 char} dname[256] = \{0\};\par
00120             {\cf18 char} *tok = ({\cf18 char} *)strtok(cmd, {\cf22 " "});\par
00121             tok = ({\cf18 char} *)strtok(0, {\cf22 " "}); {\cf20 // tok - now is dirname}\par
00122 \par
00123             {\cf19 if} (dname[0] != 0) \{\par
00124                 cd(tok);\par
00125             \} {\cf19 else} \{\par
00126                 tty_setcolor(COLOR_ERROR);\par
00127                 tty_printf({\cf22 "\\ncd: incorrect argument\\n"});\par
00128             \}\par
00129         \} {\cf19 else} {\cf19 if} (strcmp(cmd, {\cf22 "pcilist"}) == 0) \{\par
00130             tty_printf({\cf22 "PCI devices:\\n"});\par
00131             checkAllBuses();\par
00132         \} {\cf19 else} {\cf19 if} (strcmp(cmd, {\cf22 "sysinfo"}) == 0) \{\par
00133             sysinfo();\par
00134         \} {\cf19 else} {\cf19 if} (strcmp(cmd, {\cf22 "ls"}) == 0) \{\par
00135             initrd_list(0, 0);\par
00136         \} {\cf19 else} {\cf19 if} (strlen(cmd) > 5 && strncmp(cmd, {\cf22 "view "}, 5) == 0) \{\par
00137             {\cf18 char} fname[256] = \{0\};\par
00138             {\cf18 char} *tok = ({\cf18 char} *)strtok(cmd, {\cf22 " "});\par
00139             tok = ({\cf18 char} *)strtok(0, {\cf22 " "}); {\cf20 // tok - \'E8\'EC\'FF \'F4\'E0\'E9\'EB\'E0}\par
00140             \par
00141             {\cf19 if} (fname[0] == 0) \{\par
00142                 {\cf17 struct }DukeImageMeta* data = get_image_metadata(tok);\par
00143                 {\cf19 if}(data!=0) \{\par
00144                     draw_from_file(tok, getWidthScreen() - data->width - 8, 0);\par
00145                 \}\par
00146             \} {\cf19 else} \{\par
00147                 tty_setcolor(COLOR_ERROR);\par
00148                 tty_printf({\cf22 "view: incorrect argument\\n"});\par
00149             \}\par
00150         \} {\cf19 else} {\cf19 if} (strlen(cmd) > 4 && strncmp(cmd, {\cf22 "sbf  "}, 4) == 0) \{\par
00151             {\cf18 char} fname[256] = \{0\};\par
00152 \par
00153             {\cf18 char} *tok = ({\cf18 char} *)strtok(cmd, {\cf22 " "});\par
00154 \par
00155             tok = ({\cf18 char} *)strtok(0, {\cf22 " "}); {\cf20 // tok - \'E8\'EC\'FF \'F4\'E0\'E9\'EB\'E0}\par
00156 \par
00157             {\cf19 if} (fname[0] == 0) \{\par
00158                 sbf(tok);\par
00159             \} {\cf19 else} \{\par
00160                 tty_setcolor(COLOR_ERROR);\par
00161                 tty_printf({\cf22 "sbf: incorrect argument\\n"});\par
00162             \}\par
00163         \} {\cf19 else} {\cf19 if} (strlen(cmd) > 2 && strncmp(cmd, {\cf22 "./"}, 2) == 0) \{\par
00164             {\cf18 char} fname[256] = \{0\};\par
00165 \par
00166             {\cf18 char} *tok = ({\cf18 char} *)strtok(cmd, {\cf22 "/"});\par
00167 \par
00168             tok = ({\cf18 char} *)strtok(0, {\cf22 "/"}); {\cf20 // tok - \'E8\'EC\'FF \'F4\'E0\'E9\'EB\'E0}\par
00169 \par
00170             {\cf19 if} (fname[0] == 0) \{\par
00171                 {\cf18 char} temp[256] = \{0\};\par
00172                 strcpy(temp, current_dir);\par
00173                 strcat(temp, tok);\par
00174                 {\cf20 //elf_info(temp);                }\par
00175                 run_elf_file(temp);\par
00176 \par
00177             \} {\cf19 else} \{\par
00178                 tty_setcolor(COLOR_ERROR);\par
00179                 tty_printf({\cf22 "run: incorrect argument\\n"});\par
00180             \}\par
00181         \} {\cf19 else} {\cf19 if} (strlen(cmd) > 2 && strncmp(cmd, {\cf22 "d/"}, 2) == 0) \{\par
00182             {\cf18 char} fname[256] = \{0\};\par
00183 \par
00184             {\cf18 char} *tok = ({\cf18 char} *)strtok(cmd, {\cf22 "/"});\par
00185 \par
00186             tok = ({\cf18 char} *)strtok(0, {\cf22 "/"}); {\cf20 // tok - \'E8\'EC\'FF \'F4\'E0\'E9\'EB\'E0}\par
00187 \par
00188             {\cf19 if} (fname[0] == 0) \{\par
00189                 {\cf18 char} temp[256] = \{0\};\par
00190                 strcpy(temp, current_dir);\par
00191                 strcat(temp, tok);\par
00192                 elf_info(temp);                \par
00193                 run_elf_file(temp);\par
00194 \par
00195             \} {\cf19 else} \{\par
00196                 tty_setcolor(COLOR_ERROR);\par
00197                 tty_printf({\cf22 "run: incorrect argument\\n"});\par
00198             \}\par
00199         \} {\cf19 else} \{\par
00200             {\cf18 char} fname[256] = \{0\};\par
00201 \par
00202             {\cf18 char} *tok = ({\cf18 char} *)strtok(cmd, {\cf22 "/"});\par
00203 \par
00204             tok = ({\cf18 char} *)strtok(0, {\cf22 "/"}); {\cf20 // tok - \'E8\'EC\'FF \'F4\'E0\'E9\'EB\'E0}\par
00205 \par
00206             {\cf19 if} (fname[0] == 0) \{\par
00207                 {\cf18 char} temp[256] = \{0\};\par
00208                 strcpy(temp, current_dir);\par
00209                 strcat(temp, tok);\par
00210                 {\cf20 //elf_info(temp);                }\par
00211                 run_elf_file(temp);\par
00212 \par
00213             \} {\cf19 else} \{\par
00214                 tty_setcolor(COLOR_ERROR);\par
00215                 tty_printf({\cf22 "run: incorrect argument\\n"});\par
00216             \}\par
00217         \}\par
00218     \}\par
00219 \}\par
00220 \par
00221 \par
00227 {\cf18 void} cd({\cf18 char} *dname) \{\par
00228     {\cf19 if} (dname[0] != {\cf23 '/'}) \{\par
00229         {\cf18 char} temp[256];\par
00230 \par
00231         strcpy(temp, current_dir);\par
00232 \par
00233         temp[strlen(temp) - 1] = 0;\par
00234 \par
00235         strcat(temp, dname);\par
00236 \par
00237         temp[strlen(temp) - 1] = 0;\par
00238         temp[strlen(temp) - 1] = 0;\par
00239 \par
00240         strcpy(dname, temp);\par
00241     \}\par
00242 \par
00243 \par
00244     {\cf19 if} (dname[strlen(dname) - 1] != {\cf23 '/'}) \{\par
00245         strcat(dname, {\cf22 "/"});\par
00246     \}\par
00247 \par
00248     {\cf19 if} (vfs_exists(dname) && vfs_is_dir(dname)) \{\par
00249         strcpy(current_dir, dname);\par
00250     \} {\cf19 else} \{\par
00251         tty_setcolor(COLOR_ERROR);\par
00252         tty_printf({\cf22 "cd: no such directory\\n"});\par
00253     \}\par
00254 \}\par
00255 \par
00256 \par
00262 {\cf18 void} cat({\cf18 char} *fname) \{\par
00263     {\cf19 if} (fname[0] != {\cf23 '/'}) \{\par
00264         {\cf18 char} temp[256];\par
00265 \par
00266         strcpy(temp, current_dir);\par
00267         temp[strlen(temp) - 1] = 0;\par
00268 \par
00269         strcat(temp, fname);\par
00270 \par
00271         temp[strlen(temp) - 1] = 0;\par
00272         temp[strlen(temp) - 1] = 0;\par
00273 \par
00274         strcpy(fname, temp);\par
00275     \}\par
00276 \par
00277     {\cf18 char} *buf = ({\cf18 char}*) kheap_malloc(2048);\par
00278 \par
00279     {\cf19 if} (!vfs_exists(fname)) \{\par
00280         tty_setcolor(COLOR_ERROR);\par
00281         tty_printf({\cf22 "cat: error file not found\\n"});\par
00282     \} {\cf19 else} \{\par
00283         uint32_t fsize = vfs_get_size(fname);\par
00284         vfs_read(fname, 0, fsize, buf);\par
00285 \par
00286         buf[fsize] = {\cf23 '\\0'};\par
00287 \par
00288         tty_printf({\cf22 "%s:\\n\\n%s\\n"}, fname, buf);\par
00289 \par
00290         kheap_free(buf);\par
00291     \}\par
00292 \}\par
00293 \par
00294 \par
00299 {\cf18 void} sysinfo()\{\par
00300     tty_printf({\cf22 "                       ........--........        SynapseOS by Aren Elchinyan\\n"});\par
00301     tty_printf({\cf22 "                       ....+***:**+*....         Arch %s\\n"}, ARCH_TYPE);\par
00302     tty_printf({\cf22 "                         .**.......**....        Ticks: %d\\n"}, timer_get_ticks());\par
00303     tty_printf({\cf22 "                       ...**.......**...                        \\n"});\par
00304     tty_printf({\cf22 "                        ..:**.....-**....                       \\n"});\par
00305     tty_printf({\cf22 "                       . ...+******.....                        \\n"});\par
00306     tty_printf({\cf22 "                        .  ...***...                            \\n"});\par
00307     tty_printf({\cf22 "                           ...:**..                             \\n"});\par
00308     tty_printf({\cf22 "                            ..+**...... .                       \\n"});\par
00309     tty_printf({\cf22 "                            ..+*+.......                        \\n"});\par
00310     tty_printf({\cf22 "                    . ........-******:.. ...                    \\n"});\par
00311     tty_printf({\cf22 "                    ....**..........+**-... .                   \\n"});\par
00312     tty_printf({\cf22 "                     .-**....:***+....***....                   \\n"});\par
00313     tty_printf({\cf22 "                    ..**....********...**...                    \\n"});\par
00314     tty_printf({\cf22 "                   ...**...+********...**-.                     \\n"});\par
00315     tty_printf({\cf22 "                    ..+*-...*******:...**...                    \\n"});\par
00316     tty_printf({\cf22 ".  ...........  ......***-....+**-....***-.... ....... ......   \\n"});\par
00317     tty_printf({\cf22 "  ................-*****+**-........***-+***:.....*****:....    \\n"});\par
00318     tty_printf({\cf22 "....********...:****......+*********+......+*****+:....+*+..    \\n"});\par
00319     tty_printf({\cf22 "..***......***+*-...  . . ............  ......:**........*+.    \\n"});\par
00320     tty_printf({\cf22 ".**.. . .. .-**.         ..   .  .    ...  ...**.... ....**.    \\n"});\par
00321     tty_printf({\cf22 "**+.    . ...**..                           . .+*.......-*+..   \\n"});\par
00322     tty_printf({\cf22 ".+*..........**.                            ....+**:..****..    \\n"});\par
00323     tty_printf({\cf22 ".***.......-**..                            .......-+*.......   \\n"});\par
00324     tty_printf({\cf22 "...+********+...                            ..  .  .   .        \\n"});\par
00325     tty_printf({\cf22 "................                                                  "});\par
00326 \}\par
00327 \par
00328 \par
00334 {\cf18 void} sbf({\cf18 char} *src)\{\par
00335     {\cf18 char} buffer[30000] = \{0\};\par
00336     int32_t cursor = 0, loop = 0, current_char = 0;\par
00337 \par
00338     {\cf19 for} (int32_t i = 0; src[i] != 0; i++) \{\par
00339         {\cf19 switch} (src[i]) \{\par
00340             {\cf19 case} {\cf23 '+'}:\par
00341                 buffer[cursor]++;\par
00342                 {\cf19 break};\par
00343             {\cf19 case} {\cf23 '-'}:\par
00344                 buffer[cursor]--;\par
00345                 {\cf19 break};\par
00346             {\cf19 case} {\cf23 '>'}:\par
00347                 cursor++;\par
00348                 {\cf19 break};\par
00349             {\cf19 case} {\cf23 '<'}:\par
00350                 cursor--;\par
00351                 {\cf19 break};\par
00352             {\cf19 case} {\cf23 '.'}:\par
00353                 tty_putchar(buffer[cursor]);\par
00354                 {\cf19 break};\par
00355             {\cf19 case} {\cf23 ','}:\par
00356                 buffer[cursor] = keyboard_getchar();\par
00357                 {\cf19 break};\par
00358             {\cf19 case} {\cf23 '['}:\par
00359                 {\cf19 break};\par
00360             {\cf19 case} {\cf23 ']'}:\par
00361                 {\cf19 if} (buffer[cursor]) \{\par
00362                     loop = 1;\par
00363 \par
00364                     {\cf19 while} ( loop > 0)\{\par
00365                         current_char = src[--i];\par
00366                         {\cf19 if} (current_char == {\cf23 '['})\{\par
00367                             loop--;\par
00368                         \} {\cf19 else} {\cf19 if} (current_char == {\cf23 ']'})\{\par
00369                             loop++;\par
00370                         \}\par
00371                     \}\par
00372                 \}\par
00373                 {\cf19 break};\par
00374             {\cf19 case} {\cf23 '0'}:\par
00375                 buffer[cursor] = 0;\par
00376                 {\cf19 break};\par
00377             {\cf19 case} {\cf23 '1'}:\par
00378                 buffer[cursor] = 1;\par
00379                 {\cf19 break};\par
00380             {\cf19 case} {\cf23 '2'}:\par
00381                 buffer[cursor] += 2;\par
00382                 {\cf19 break};\par
00383             {\cf19 case} {\cf23 '3'}:\par
00384                 buffer[cursor] += 3;\par
00385                 {\cf19 break};\par
00386             {\cf19 case} {\cf23 '4'}:\par
00387                 buffer[cursor] += 4;\par
00388                 {\cf19 break};\par
00389             {\cf19 case} {\cf23 '5'}:\par
00390                 buffer[cursor] += 5;\par
00391                 {\cf19 break};\par
00392             {\cf19 case} {\cf23 '6'}:\par
00393                 buffer[cursor] += 6;\par
00394                 {\cf19 break};\par
00395             {\cf19 case} {\cf23 '7'}:\par
00396                 buffer[cursor] += 7;\par
00397                 {\cf19 break};\par
00398             {\cf19 case} {\cf23 '8'}:\par
00399                 buffer[cursor] += 8;\par
00400                 {\cf19 break};\par
00401             {\cf19 case} {\cf23 '9'}:\par
00402                 buffer[cursor] += 9;\par
00403                 {\cf19 break};\par
00404             \par
00405             {\cf19 default}:\par
00406                 {\cf19 break};\par
00407         \}\par
00408     \}\par
00409 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB kernel/src/io/tty.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/io/tty.c}
{\xe \v kernel/src/io/tty.c}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'F1\'EB\'EE\'E9\'EA\'E0 \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 \'F2\'E5\'EA\'F1\'F2\'EE\'E2\'FB\'EC \'F2\'E5\'F0\'EC\'E8\'ED\'E0\'EB\'EE\'EC \'E8 \'E3\'F0\'E0\'F4\'E8\'EA\'EE\'E9 VESA. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../fonts/font_Experimental_Font.h"}\par
{\f2 #include <kernel.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b vga_entry} (uint8_t c, uint8_t tty_color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EB\'E8\'FF\'ED\'E8\'E5 \'F1\'E8\'EC\'E2\'EE\'EB\'E0 \'E8 \'F6\'E2\'E5\'F2\'E0, \'E4\'EB\'FF \'E2\'FB\'E2\'EE\'E4\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b getPosX} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'EF\'EE\'E7\'E8\'F6\'E8\'E8 \'EF\'EE x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b getPosY} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'EF\'EE\'E7\'E8\'F6\'E8\'E8 \'EF\'EE y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_setcolor} (int32_t color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'E7\'EC\'E5\'ED\'E5\'ED\'E8\'E5 \'F6\'E2\'E5\'F2\'E0 \'F2\'E5\'EA\'F1\'F2\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b init_vbe} ({\b multiboot_info} *mboot)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'E3\'F0\'E0\'F4\'E8\'EA\'E8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b create_back_framebuffer} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'E7\'E4\'E0\'ED\'E8\'E5 \'E2\'F2\'EE\'F0\'EE\'E3\'EE \'E1\'F3\'F4\'F4\'E5\'F0\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_init} (struct {\b multiboot_info} *mboot_info)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F7\'E8\'F1\'F2\'EA\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 \'E8 \'F1\'E1\'F0\'EE\'F1 \'ED\'E0\'F1\'F2\'F0\'EE\'E5\'EA }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_scroll} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'EA\'F0\'F3\'F2\'EA\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 \'ED\'E0 1 \'F1\'F2\'F0\'EE\'EA\'F3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_pixel} (int32_t x, int32_t y, uint32_t color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'EE\'E4\'ED\'EE\'E3\'EE \'EF\'E8\'EA\'F1\'E5\'EB\'FF \'ED\'E0 \'FD\'EA\'F0\'E0\'ED }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPosX} (int32_t x)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'E7\'EC\'E5\'ED\'FF\'E5\'EC \'EF\'EE\'E7\'E8\'F6\'E8\'FE \'EA\'F3\'F0\'F1\'EE\'F0\'E0 \'EF\'EE X. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPosY} (int32_t y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'E7\'EC\'E5\'ED\'FF\'E5\'EC \'EF\'EE\'E7\'E8\'F6\'E8\'FE \'EA\'F3\'F0\'F1\'EE\'F0\'E0 \'EF\'EE Y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b getWidthScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'E4\'EB\'E8\'ED\'FB \'FD\'EA\'F0\'E0\'ED\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b getHeightScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'F8\'E8\'F0\'E8\'ED\'FB \'FD\'EA\'F0\'E0\'ED\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clean_screen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F7\'E8\'F1\'F2\'EA\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_line} (int32_t x, int32_t y, int32_t xe, int32_t ye, uint32_t color)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'EB\'E8\'ED\'E8\'E8 \'ED\'E0 \'FD\'EA\'F0\'E0\'ED }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_putchar_color} (char c, uint32_t txColor, uint32_t bgColor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'EE\'E4\'ED\'EE\'E3\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'E0 \'F1 \'F3\'F7\'E5\'F2\'EE\'EC \'F6\'E2\'E5\'F2\'E0 \'F4\'EE\'ED\'E0 \'E8 \'F2\'E5\'EA\'F1\'F2\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_putchar} (char c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'EE\'E4\'ED\'EE\'E3\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b draw_vga_character} (uint8_t c, int32_t x, int32_t y, int32_t fg, int32_t bg, bool bgon)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F1\'E8\'EC\'E2\'EE\'EB\'E0 \'ED\'E0 \'FD\'EA\'F0\'E0\'ED \'F1 \'F3\'F7\'E5\'F2\'EE\'EC \'EF\'EE\'E7\'E8\'F6\'E8\'E8, \'F6\'E2\'E5\'F2\'E0 \'F2\'E5\'EA\'F1\'F2\'E0 \'E8 \'F4\'EE\'ED\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b external_draw_grapheme} (int *glyphs, int width, int height, unsigned char grapheme)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_backspace} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'E4\'E0\'EB\'E5\'ED\'E8\'E5 \'EF\'EE\'F1\'EB\'E5\'E4\'ED\'E5\'E3\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_puts} (const char str[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F1\'F2\'F0\'EE\'EA\'E8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_puts_color} (const char str[], uint32_t txColor, uint32_t bgColor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F6\'E2\'E5\'F2\'ED\'EE\'E3\'EE \'F2\'E5\'EA\'F1\'F2\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_putint} (const int32_t i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F6\'E5\'EB\'EE\'E3\'EE \'F7\'E8\'F1\'EB\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_puthex} (uint32_t i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 HEX \'F7\'E8\'F1\'EB\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_puthex_v} (uint32_t i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F7\'E8\'F1\'EB\'E0 HEX \'E1\'E5\'E7 \'EF\'F0\'E5\'F4\'E8\'EA\'F1\'E0 0x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_print} (char *format, va_list args)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'E4\'F4\'F3\'ED\'EA\'F6\'E8\'FF-\'EE\'E1\'F0\'E0\'E1\'EE\'F2\'F7\'E8\'EA \'E4\'EB\'FF tty_printf. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tty_printf} (char *text,...)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F4\'EE\'F0\'EC\'E0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'ED\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8 \'ED\'E0 \'FD\'EA\'F0\'E0\'ED (\'E0\'ED\'E0\'EB\'EE\'E3 printf) }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b framebuffer_addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b framebuffer_pitch}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b framebuffer_bpp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b framebuffer_width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b framebuffer_height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b framebuffer_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b back_framebuffer_addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b tty_feedback} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b tty_line_fill} [1024]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b tty_pos_x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b tty_pos_y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b tty_text_color}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'F1\'EB\'EE\'E9\'EA\'E0 \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 \'F2\'E5\'EA\'F1\'F2\'EE\'E2\'FB\'EC \'F2\'E5\'F0\'EC\'E8\'ED\'E0\'EB\'EE\'EC \'E8 \'E3\'F0\'E0\'F4\'E8\'EA\'EE\'E9 VESA. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'E2\'F2\'EE\'F0\'FB\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C0\'F0\'E5\'ED \'C5\'EB\'F7\'E8\'ED\'FF\'ED ({\f2 a2.dev@yandex.com}), <> \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'E5\'F0\'F1\'E8\'FF\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0.2.0 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C4\'E0\'F2\'E0\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
2022-08-08\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'E2\'F2\'EE\'F0\'F1\'F2\'E2\'EE\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Copyright \'C0\'F0\'E5\'ED \'C5\'EB\'F7\'E8\'ED\'FF\'ED (c) 2022 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 
{\xe \v EXPERIMENTAL_FONT\:tty.c}
{\xe \v tty.c\:EXPERIMENTAL_FONT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPERIMENTAL_FONT}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 12}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v clean_screen\:tty.c}
{\xe \v tty.c\:clean_screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clean_screen ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F7\'E8\'F1\'F2\'EA\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 }}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 236}}\par
}
{\xe \v create_back_framebuffer\:tty.c}
{\xe \v tty.c\:create_back_framebuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void create_back_framebuffer ()}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'E7\'E4\'E0\'ED\'E8\'E5 \'E2\'F2\'EE\'F0\'EE\'E3\'EE \'E1\'F3\'F4\'F4\'E5\'F0\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 }}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 108}}\par
}
{\xe \v draw_vga_character\:tty.c}
{\xe \v tty.c\:draw_vga_character}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void draw_vga_character (uint8_t  {\i c}, int32_t  {\i x}, int32_t  {\i y}, int32_t  {\i fg}, int32_t  {\i bg}, bool  {\i bgon})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F1\'E8\'EC\'E2\'EE\'EB\'E0 \'ED\'E0 \'FD\'EA\'F0\'E0\'ED \'F1 \'F3\'F7\'E5\'F2\'EE\'EC \'EF\'EE\'E7\'E8\'F6\'E8\'E8, \'F6\'E2\'E5\'F2\'E0 \'F2\'E5\'EA\'F1\'F2\'E0 \'E8 \'F4\'EE\'ED\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{- \'F1\'E8\'EC\'E2\'EE\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{- \'EF\'EE\'E7\'E8\'F6\'E8\'FF \'EF\'EE x \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{- \'EF\'EE\'E7\'E8\'F6\'E8\'FF \'EF\'EE y \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fg} \cell }{- \'F6\'E2\'E5\'F2 \'F2\'E5\'EA\'F1\'F2\'E0 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bg} \cell }{- \'F6\'E2\'E5\'F2 \'F4\'EE\'ED\'E0 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bgon} \cell }{- \'EF\'EE\'EC\'E5\'ED\'FF\'F2\'FC \'EB\'E8 \'EC\'E5\'F1\'F2\'E0\'EC\'E8 \'F6\'E2\'E5\'F2\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 334}}\par
}
{\xe \v external_draw_grapheme\:tty.c}
{\xe \v tty.c\:external_draw_grapheme}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void external_draw_grapheme (int *  {\i glyphs}, int  {\i width}, int  {\i height}, unsigned char  {\i grapheme})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 351}}\par
}
{\xe \v getHeightScreen\:tty.c}
{\xe \v tty.c\:getHeightScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t getHeightScreen ()}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'F8\'E8\'F0\'E8\'ED\'FB \'FD\'EA\'F0\'E0\'ED\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint32_t - \'F8\'E8\'F0\'E8\'ED\'E0 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 227}}\par
}
{\xe \v getPosX\:tty.c}
{\xe \v tty.c\:getPosX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t getPosX ()}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'EF\'EE\'E7\'E8\'F6\'E8\'E8 \'EF\'EE x. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int32_t - \'EF\'EE\'E7\'E8\'F6\'E8\'FF \'EF\'EE x \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 51}}\par
}
{\xe \v getPosY\:tty.c}
{\xe \v tty.c\:getPosY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t getPosY ()}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'EF\'EE\'E7\'E8\'F6\'E8\'E8 \'EF\'EE y. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int32_t - \'EF\'EE\'E7\'E8\'F6\'E8\'FF \'EF\'EE y \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 61}}\par
}
{\xe \v getWidthScreen\:tty.c}
{\xe \v tty.c\:getWidthScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t getWidthScreen ()}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'E5 \'E4\'EB\'E8\'ED\'FB \'FD\'EA\'F0\'E0\'ED\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint32_t - \'E4\'EB\'E8\'ED\'E0 \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 217}}\par
}
{\xe \v init_vbe\:tty.c}
{\xe \v tty.c\:init_vbe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void init_vbe ({\b multiboot_info} *  {\i mboot})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'E3\'F0\'E0\'F4\'E8\'EA\'E8 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mboot} \cell }{- \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FF \'EF\'EE\'EB\'F3\'F7\'E5\'ED\'ED\'E0\'FF \'EE\'F2 \'E7\'E0\'E3\'F0\'F3\'E7\'F7\'E8\'EA\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 81}}\par
}
{\xe \v set_line\:tty.c}
{\xe \v tty.c\:set_line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void set_line (int32_t  {\i x}, int32_t  {\i y}, int32_t  {\i xe}, int32_t  {\i ye}, uint32_t  {\i color})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'EB\'E8\'ED\'E8\'E8 \'ED\'E0 \'FD\'EA\'F0\'E0\'ED }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{- \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 \'F2\'EE\'F7\'EA\'E8 1 \'EF\'EE x \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{- \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 \'F2\'EE\'F7\'EA\'E8 1 \'EF\'EE y \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xe} \cell }{- \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 \'F2\'EE\'F7\'EA\'E8 2 \'EF\'EE x \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ye} \cell }{- \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 \'F2\'EE\'F7\'EA\'E8 2 \'EF\'EE y \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{- \'F6\'E2\'E5\'F2 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 259}}\par
}
{\xe \v set_pixel\:tty.c}
{\xe \v tty.c\:set_pixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void set_pixel (int32_t  {\i x}, int32_t  {\i y}, uint32_t  {\i color})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'EE\'E4\'ED\'EE\'E3\'EE \'EF\'E8\'EA\'F1\'E5\'EB\'FF \'ED\'E0 \'FD\'EA\'F0\'E0\'ED }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{- \'EF\'EE\'E7\'E8\'F6\'E8\'FF \'EF\'EE x \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{- \'EF\'EE\'E7\'E8\'F6\'E8\'FF \'EF\'EE y \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{- \'F6\'E2\'E5\'F2 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 171}}\par
}
{\xe \v setPosX\:tty.c}
{\xe \v tty.c\:setPosX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setPosX (int32_t  {\i x})}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'E7\'EC\'E5\'ED\'FF\'E5\'EC \'EF\'EE\'E7\'E8\'F6\'E8\'FE \'EA\'F3\'F0\'F1\'EE\'F0\'E0 \'EF\'EE X. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{- \'EF\'EE\'E7\'E8\'F6\'E8\'FF \'EF\'EE X \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 197}}\par
}
{\xe \v setPosY\:tty.c}
{\xe \v tty.c\:setPosY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setPosY (int32_t  {\i y})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'E7\'EC\'E5\'ED\'FF\'E5\'EC \'EF\'EE\'E7\'E8\'F6\'E8\'FE \'EA\'F3\'F0\'F1\'EE\'F0\'E0 \'EF\'EE Y. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{- \'EF\'EE\'E7\'E8\'F6\'E8\'FF \'EF\'EE Y \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 207}}\par
}
{\xe \v tty_backspace\:tty.c}
{\xe \v tty.c\:tty_backspace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_backspace ()}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'E4\'E0\'EB\'E5\'ED\'E8\'E5 \'EF\'EE\'F1\'EB\'E5\'E4\'ED\'E5\'E3\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'E0 }}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 372}}\par
}
{\xe \v tty_init\:tty.c}
{\xe \v tty.c\:tty_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_init (struct {\b multiboot_info} *  {\i mboot_info})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F7\'E8\'F1\'F2\'EA\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 \'E8 \'F1\'E1\'F0\'EE\'F1 \'ED\'E0\'F1\'F2\'F0\'EE\'E5\'EA }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mboot_info} \cell }{- \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FF \'EE \'E4\'E8\'F1\'EF\'EB\'E5\'E5 \'EE\'F2 \'E7\'E0\'E3\'F0\'F3\'E7\'F7\'E8\'EA\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 122}}\par
}
{\xe \v tty_print\:tty.c}
{\xe \v tty.c\:tty_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_print (char *  {\i format}, va_list  {\i args})}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'E4\'F4\'F3\'ED\'EA\'F6\'E8\'FF-\'EE\'E1\'F0\'E0\'E1\'EE\'F2\'F7\'E8\'EA \'E4\'EB\'FF tty_printf. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i format} \cell }{- \'F1\'F2\'F0\'EE\'EA\'E0 \'F4\'EE\'F0\'EC\'E0\'F2\'EE\'E2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{- \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 532}}\par
}
{\xe \v tty_printf\:tty.c}
{\xe \v tty.c\:tty_printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_printf (char *  {\i text},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F4\'EE\'F0\'EC\'E0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'ED\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8 \'ED\'E0 \'FD\'EA\'F0\'E0\'ED (\'E0\'ED\'E0\'EB\'EE\'E3 printf) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{- \'F1\'F2\'F0\'EE\'EA\'E0 \'F4\'EE\'F0\'EC\'E0\'F2\'EE\'E2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ...} \cell }{- \'EF\'E0\'F0\'E0\'EC\'E5\'F2\'F0\'FB \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 593}}\par
}
{\xe \v tty_putchar\:tty.c}
{\xe \v tty.c\:tty_putchar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_putchar (char  {\i c})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'EE\'E4\'ED\'EE\'E3\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{- \'F1\'E8\'EC\'E2\'EE\'EB \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 303}}\par
}
{\xe \v tty_putchar_color\:tty.c}
{\xe \v tty.c\:tty_putchar_color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_putchar_color (char  {\i c}, uint32_t  {\i txColor}, uint32_t  {\i bgColor})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'EE\'E4\'ED\'EE\'E3\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'E0 \'F1 \'F3\'F7\'E5\'F2\'EE\'EC \'F6\'E2\'E5\'F2\'E0 \'F4\'EE\'ED\'E0 \'E8 \'F2\'E5\'EA\'F1\'F2\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{- \'F1\'E8\'EC\'E2\'EE\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i txColor} \cell }{- \'F6\'E2\'E5\'F2 \'F2\'E5\'EA\'F1\'F2\'E0 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bgColor} \cell }{- \'F6\'E2\'E5\'F2 \'F4\'EE\'ED\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 275}}\par
}
{\xe \v tty_puthex\:tty.c}
{\xe \v tty.c\:tty_puthex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_puthex (uint32_t  {\i i})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 HEX \'F7\'E8\'F1\'EB\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{- \'F7\'E8\'F1\'EB\'EE \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 483}}\par
}
{\xe \v tty_puthex_v\:tty.c}
{\xe \v tty.c\:tty_puthex_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_puthex_v (uint32_t  {\i i})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F7\'E8\'F1\'EB\'E0 HEX \'E1\'E5\'E7 \'EF\'F0\'E5\'F4\'E8\'EA\'F1\'E0 0x. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{- \'F7\'E8\'F1\'EB\'EE \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 508}}\par
}
{\xe \v tty_putint\:tty.c}
{\xe \v tty.c\:tty_putint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_putint (const int32_t  {\i i})}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F6\'E5\'EB\'EE\'E3\'EE \'F7\'E8\'F1\'EB\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{- \'F7\'E8\'F1\'EB\'EE \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 465}}\par
}
{\xe \v tty_puts\:tty.c}
{\xe \v tty.c\:tty_puts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_puts (const char  {\i str}[])}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F1\'F2\'F0\'EE\'EA\'E8 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{- \'F1\'F2\'F0\'EE\'EA\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 390}}\par
}
{\xe \v tty_puts_color\:tty.c}
{\xe \v tty.c\:tty_puts_color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_puts_color (const char  {\i str}[], uint32_t  {\i txColor}, uint32_t  {\i bgColor})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4 \'F6\'E2\'E5\'F2\'ED\'EE\'E3\'EE \'F2\'E5\'EA\'F1\'F2\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{- \'F2\'E5\'EA\'F1\'F2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i txColor} \cell }{- \'F6\'E2\'E5\'F2 \'F2\'E5\'EA\'F1\'F2\'E0 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bgColor} \cell }{- \'F6\'E2\'E5\'F2 \'F4\'EE\'ED\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 453}}\par
}
{\xe \v tty_scroll\:tty.c}
{\xe \v tty.c\:tty_scroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_scroll ()}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'EA\'F0\'F3\'F2\'EA\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 \'ED\'E0 1 \'F1\'F2\'F0\'EE\'EA\'F3 }}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 145}}\par
}
{\xe \v tty_setcolor\:tty.c}
{\xe \v tty.c\:tty_setcolor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tty_setcolor (int32_t  {\i color})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'E7\'EC\'E5\'ED\'E5\'ED\'E8\'E5 \'F6\'E2\'E5\'F2\'E0 \'F2\'E5\'EA\'F1\'F2\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{- \'F6\'E2\'E5\'F2 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 71}}\par
}
{\xe \v vga_entry\:tty.c}
{\xe \v tty.c\:vga_entry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t vga_entry (uint8_t  {\i c}, uint8_t  {\i tty_color})}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EB\'E8\'FF\'ED\'E8\'E5 \'F1\'E8\'EC\'E2\'EE\'EB\'E0 \'E8 \'F6\'E2\'E5\'F2\'E0, \'E4\'EB\'FF \'E2\'FB\'E2\'EE\'E4\'E0 }}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 
{\xe \v back_framebuffer_addr\:tty.c}
{\xe \v tty.c\:back_framebuffer_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* back_framebuffer_addr}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v framebuffer_addr\:tty.c}
{\xe \v tty.c\:framebuffer_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* framebuffer_addr}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v framebuffer_bpp\:tty.c}
{\xe \v tty.c\:framebuffer_bpp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t framebuffer_bpp}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\xe \v framebuffer_height\:tty.c}
{\xe \v tty.c\:framebuffer_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t framebuffer_height}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v framebuffer_pitch\:tty.c}
{\xe \v tty.c\:framebuffer_pitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t framebuffer_pitch}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v framebuffer_size\:tty.c}
{\xe \v tty.c\:framebuffer_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t framebuffer_size}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v framebuffer_width\:tty.c}
{\xe \v tty.c\:framebuffer_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t framebuffer_width}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v tty_feedback\:tty.c}
{\xe \v tty.c\:tty_feedback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint8_t tty_feedback = 1}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 28}}\par
}
{\xe \v tty_line_fill\:tty.c}
{\xe \v tty.c\:tty_line_fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t tty_line_fill[1024]}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 30}}\par
}
{\xe \v tty_pos_x\:tty.c}
{\xe \v tty.c\:tty_pos_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t tty_pos_x}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 32}}\par
}
{\xe \v tty_pos_y\:tty.c}
{\xe \v tty.c\:tty_pos_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t tty_pos_y}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\xe \v tty_text_color\:tty.c}
{\xe \v tty.c\:tty_text_color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t tty_text_color}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tty.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tty.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/io/tty.c}
{\xe \v kernel/src/io/tty.c}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00012 {\cf21 #define EXPERIMENTAL_FONT}\par
00013 \par
00014 {\cf21 #ifdef  EXPERIMENTAL_FONT}\par
00015 {\cf21 #include "../fonts/font_Experimental_Font.h"}\par
00016 {\cf21 #endif}\par
00017 \par
00018 {\cf21 #include <kernel.h>}\par
00019 uint8_t *framebuffer_addr;\par
00020 uint32_t framebuffer_pitch;\par
00021 uint32_t framebuffer_bpp;\par
00022 uint32_t framebuffer_width;\par
00023 uint32_t framebuffer_height;\par
00024 uint32_t framebuffer_size;\par
00025 \par
00026 uint8_t *back_framebuffer_addr;\par
00027 \par
00028 {\cf17 volatile} uint8_t tty_feedback = 1;\par
00029 \par
00030 {\cf18 size_t} tty_line_fill[1024];\par
00031 \par
00032 int32_t tty_pos_x;\par
00033 int32_t tty_pos_y;\par
00034 \par
00035 uint32_t tty_text_color;\par
00036 \par
00041 uint16_t vga_entry(uint8_t c, uint8_t tty_color) \{\par
00042     {\cf19 return} (uint16_t) c | (uint16_t) tty_color << 8;\par
00043 \}\par
00044 \par
00045 \par
00051 int32_t getPosX()\{\par
00052     {\cf19 return} tty_pos_x;\par
00053 \}\par
00054 \par
00055 \par
00061 int32_t getPosY()\{\par
00062     {\cf19 return} tty_pos_y;\par
00063 \}\par
00064 \par
00065 \par
00071 {\cf18 void} tty_setcolor(int32_t color) \{\par
00072     tty_text_color = color;\par
00073 \}\par
00074 \par
00075 \par
00081 {\cf18 void} init_vbe(multiboot_info *mboot) \{\par
00082     svga_mode_info_t *svga_mode = (svga_mode_info_t*) mboot->vbe_mode_info;\par
00083     framebuffer_addr = (uint8_t *)svga_mode->physbase; \par
00084     framebuffer_pitch = svga_mode->pitch;\par
00085     framebuffer_bpp = svga_mode->bpp;\par
00086     framebuffer_width = svga_mode->screen_width;\par
00087     framebuffer_height = svga_mode->screen_height;\par
00088     framebuffer_size = framebuffer_height * framebuffer_pitch;\par
00089 \par
00090     physical_addres_t frame;\par
00091     virtual_addr_t virt;\par
00092 \par
00093     {\cf19 for} (frame = (physical_addres_t)framebuffer_addr, virt = (virtual_addr_t)framebuffer_addr;\par
00094         frame < (physical_addres_t)(framebuffer_addr + framebuffer_size);\par
00095         frame += PAGE_SIZE, virt += PAGE_SIZE) \{\par
00096         vmm_map_page(frame, virt);\par
00097     \}\par
00098     qemu_log({\cf22 "VBE create_back_framebuffer"});\par
00099 \par
00100     create_back_framebuffer();\par
00101 \}\par
00102 \par
00103 \par
00108 {\cf18 void} create_back_framebuffer() \{\par
00109     back_framebuffer_addr = kheap_malloc(framebuffer_size);\par
00110 \par
00111     qemu_log({\cf22 "back_framebuffer_addr = %x"}, back_framebuffer_addr);\par
00112 \par
00113     memset(back_framebuffer_addr, 0, framebuffer_size); {\cf20 // \'C4\'EE\'EB\'E6\'ED\'EE \'EF\'F0\'E5\'E4\'EE\'F2\'E2\'F0\'E0\'F2\'E8\'F2\'FC \'EF\'E0\'E4\'E5\'ED\'E8\'E5}\par
00114 \}\par
00115 \par
00116 \par
00122 {\cf18 void} tty_init({\cf17 struct} multiboot_info *mboot_info) \{\par
00123     tty_pos_y = 0;\par
00124     tty_pos_x = 0;\par
00125 \par
00126     tty_text_color = COLOR_SYS_TEXT;\par
00127 \par
00128     svga_mode_info_t *svga_mode = (svga_mode_info_t*) mboot_info->vbe_mode_info;\par
00129 \par
00130     framebuffer_addr = (uint8_t *)svga_mode->physbase;\par
00131     framebuffer_pitch = svga_mode->pitch;\par
00132     framebuffer_bpp = svga_mode->bpp;\par
00133     framebuffer_width = svga_mode->screen_width;\par
00134     framebuffer_height = svga_mode->screen_height;\par
00135     framebuffer_size = framebuffer_height * framebuffer_pitch;\par
00136     back_framebuffer_addr = framebuffer_addr;\par
00137     tty_printf({\cf22 "[Display] %dx%d@%d\\n"},framebuffer_width,framebuffer_height,framebuffer_pitch);\par
00138 \}\par
00139 \par
00140 \par
00145 {\cf18 void} tty_scroll() \{\par
00146     uint32_t num_rows = 1;\par
00147     tty_pos_y -= 17*num_rows;\par
00148 \par
00149     {\cf20 // \'CA\'EE\'EF\'E8\'F0\'F3\'E5\'EC \'F1\'F2\'F0\'EE\'EA\'E8 \'F1\'E2\'E5\'F0\'F5\'F3}\par
00150     uint8_t *read_ptr = (uint8_t*) back_framebuffer_addr + ((num_rows * 17) * framebuffer_pitch);\par
00151     uint8_t *write_ptr = (uint8_t*) back_framebuffer_addr;\par
00152     uint32_t num_bytes = (framebuffer_pitch * VESA_HEIGHT) - (framebuffer_pitch * (num_rows * 17));\par
00153     memcpy(write_ptr, read_ptr, num_bytes);\par
00154 \par
00155     {\cf20 // \'CE\'F7\'E8\'F1\'F2\'EA\'E0 \'F1\'F2\'F0\'EE\'EA}\par
00156     write_ptr = (uint8_t*) back_framebuffer_addr + (framebuffer_pitch * VESA_HEIGHT) - (framebuffer_pitch * (num_rows * 17));\par
00157     memset(write_ptr, 0, framebuffer_pitch * (num_rows * 17));\par
00158 \par
00159     {\cf20 // \'CA\'EE\'EF\'E8\'F0\'F3\'E5\'EC \'E1\'F3\'F4\'F4\'E5\'F0\'FB}\par
00160     memcpy(framebuffer_addr, back_framebuffer_addr, framebuffer_size);\par
00161 \}\par
00162 \par
00163 \par
00171 {\cf18 void} set_pixel(int32_t x, int32_t y, uint32_t color) \{\par
00172     {\cf19 if} (x < 0 || y < 0 || \par
00173         x >= ({\cf18 int}) VESA_WIDTH || \par
00174         y >= ({\cf18 int}) VESA_HEIGHT) \{\par
00175         {\cf19 return};\par
00176     \}\par
00177 \par
00178     {\cf18 unsigned} where = x * (framebuffer_bpp / 8) + y * framebuffer_pitch;\par
00179 \par
00180     framebuffer_addr[where] = color;\par
00181     framebuffer_addr[where + 1] = color >> 8;\par
00182     framebuffer_addr[where + 2] = color >> 16;\par
00183 \par
00184 \par
00185     back_framebuffer_addr[where] = color & 255;\par
00186     back_framebuffer_addr[where + 1] = (color >> 8) & 255;\par
00187     back_framebuffer_addr[where + 2] = (color >> 16) & 255;\par
00188 \par
00189 \}\par
00190 \par
00191 \par
00197 {\cf18 void} setPosX(int32_t x)\{\par
00198     tty_pos_x = x;\par
00199 \}\par
00200 \par
00201 \par
00207 {\cf18 void} setPosY(int32_t y)\{\par
00208     tty_pos_y = y;\par
00209 \}\par
00210 \par
00211 \par
00217 uint32_t getWidthScreen()\{\par
00218     {\cf19 return} framebuffer_width;\par
00219 \}\par
00220 \par
00221 \par
00227 uint32_t getHeightScreen()\{\par
00228     {\cf19 return} framebuffer_height;\par
00229 \}\par
00230 \par
00231 \par
00236 {\cf18 void} clean_screen()\{\par
00237     {\cf19 for} (int32_t x = 0; x < VESA_WIDTH; x++)\{\par
00238         {\cf19 for} (int32_t y = 0; y < VESA_HEIGHT; y++)\{\par
00239             set_pixel(x, y, VESA_BLACK);\par
00240         \}\par
00241     \}\par
00242 \par
00243     tty_pos_x = 0;\par
00244     tty_pos_y = -17;\par
00245 \par
00246     qemu_log({\cf22 "Screan cleaned!"});\par
00247 \}\par
00248 \par
00249 \par
00259 {\cf18 void} set_line(int32_t x, int32_t y, int32_t xe, int32_t ye, uint32_t color)\{\par
00260     {\cf19 for} (int32_t i = x; i < xe; i++) \{\par
00261         {\cf19 for} (int32_t j = y; j < ye; j++) \{\par
00262             set_pixel(i, j, color);\par
00263         \}\par
00264     \}\par
00265 \}\par
00266 \par
00267 \par
00275 {\cf18 void} tty_putchar_color({\cf18 char} c, uint32_t txColor, uint32_t bgColor) \{\par
00276 \par
00277     {\cf19 if} ((tty_pos_x + 8) >= ({\cf18 int})VESA_WIDTH || c == {\cf23 '\\n'}) \{\par
00278         tty_line_fill[tty_pos_y] = tty_pos_x;\par
00279         tty_pos_x = 0;\par
00280 \par
00281         {\cf19 if} ((tty_pos_y + 17) >= ({\cf18 int})VESA_HEIGHT) \{\par
00282             tty_scroll();\par
00283         \} {\cf19 else} \{\par
00284             tty_pos_y += 17;\par
00285         \}\par
00286     \} {\cf19 else} \{\par
00287 \par
00288         {\cf19 if} ((tty_pos_y + 17) >= ({\cf18 int})VESA_HEIGHT) \{\par
00289             tty_scroll();\par
00290         \}\par
00291         draw_vga_character(c, tty_pos_x, tty_pos_y, txColor, bgColor, 1);\par
00292         tty_pos_x += 8;\par
00293     \}\par
00294 \}\par
00295 \par
00296 \par
00297 \par
00303 {\cf18 void} tty_putchar({\cf18 char} c) \{\par
00304     {\cf19 if} ((tty_pos_x + 8) >= ({\cf18 int})VESA_WIDTH || c == {\cf23 '\\n'}) \{ \par
00305         tty_line_fill[tty_pos_y] = tty_pos_x;\par
00306         tty_pos_x = 0;\par
00307 \par
00308         {\cf19 if} ((tty_pos_y + 17) >= ({\cf18 int})VESA_HEIGHT) \{ \par
00309             tty_scroll();\par
00310         \} {\cf19 else} \{\par
00311             tty_pos_y += 17;\par
00312         \}\par
00313     \} {\cf19 else} \{\par
00314 \par
00315         {\cf19 if} ((tty_pos_y + 17) >= ({\cf18 int})VESA_HEIGHT) \{\par
00316             tty_scroll();\par
00317         \}\par
00318         draw_vga_character(c, tty_pos_x, tty_pos_y, tty_text_color, 0x000000, 0);\par
00319         tty_pos_x += 8;\par
00320     \}\par
00321 \}\par
00322 \par
00323 \par
00334 {\cf18 void} draw_vga_character(uint8_t c, int32_t x, int32_t y, int32_t fg, int32_t bg, {\cf18 bool} bgon) \{\par
00335 \par
00336     int32_t cx, cy;\par
00337     int32_t mask[8] = \{ 128, 64, 32, 16, 8, 4, 2, 1 \};\par
00338     {\cf18 unsigned} {\cf18 char} *glyph = (uint8_t*) vgafnt + ({\cf18 int}) c * 16;\par
00339 \par
00340     {\cf19 for} (cy = 0; cy < 16; cy++) \{\par
00341         {\cf19 for} (cx = 0; cx < 8; cx++) \{\par
00342             {\cf19 if} (glyph[cy] & mask[cx]) \{\par
00343                 set_pixel(x + cx, y + cy, fg);\par
00344             \} {\cf19 else} {\cf19 if} (bgon == {\cf17 true}) \{\par
00345                 set_pixel(x + cx, y + cy, bg);\par
00346             \}\par
00347         \}\par
00348     \}\par
00349 \}\par
00350 \par
00351 {\cf18 void} external_draw_grapheme({\cf18 int}* glyphs, {\cf18 int} width, {\cf18 int} height, {\cf18 unsigned} {\cf18 char} grapheme) \{\par
00352     uint32_t cx, cy;\par
00353     {\cf18 unsigned} {\cf18 int} glyph_len = width*height;\par
00354 \par
00355     qemu_log({\cf22 "GOT TO GRAPHEMES! Grapheme: %d"}, grapheme);\par
00356     qemu_log({\cf22 "Len: %d, Position: %d"}, glyph_len, glyph_len*grapheme);\par
00357 \par
00358     {\cf19 for}(cy = 0; cy<height; cy++) \{\par
00359         {\cf19 for}(cx = 0; cx<width; cx++) \{\par
00360             {\cf18 int} px = cx + cy*width;\par
00361             set_pixel(cx+tty_pos_x, cy+tty_pos_y, glyphs[glyph_len*grapheme + px]);\par
00362         \}\par
00363     \}\par
00364 \par
00365     tty_pos_x += width;\par
00366 \}\par
00367 \par
00372 {\cf18 void} tty_backspace() \{\par
00373     {\cf19 if} (tty_pos_x < 8) \{ {\cf20 // Old: == 0}\par
00374         {\cf19 if} (tty_pos_y >= 17) \{\par
00375             tty_pos_y -= 17;\par
00376         \}\par
00377         tty_pos_x = tty_line_fill[tty_pos_y];\par
00378     \} {\cf19 else} \{\par
00379         tty_pos_x -= 8;\par
00380     \}\par
00381     draw_vga_character({\cf23 ' '}, tty_pos_x, tty_pos_y, tty_text_color, 0x000000, 1);\par
00382 \}\par
00383 \par
00384 \par
00390 {\cf18 void} tty_puts({\cf17 const} {\cf18 char} str[]) \{\par
00391     {\cf19 for} ({\cf18 size_t} i = 0; i < strlen(str); i++) \{\par
00392         {\cf19 if} (str[i] == {\cf23 '\\033'}) \{\par
00393             i++;\par
00394             {\cf19 if}(str[i] =={\cf23 '['}) \{\par
00395                 {\cf18 char}* num = kheap_malloc(4);\par
00396                 {\cf18 char} idx = 0;\par
00397                 i++;\par
00398                 {\cf19 while}({\cf17 true}) \{\par
00399                     {\cf19 if}(str[i]=={\cf23 'm'}) {\cf19 break};\par
00400                     num[idx] = str[i];\par
00401                     idx++;\par
00402                     i++;\par
00403                 \}\par
00404                 i++;\par
00405                 {\cf20 // tty_puts("<");}\par
00406                 {\cf20 // tty_puts(num);}\par
00407                 {\cf20 // tty_puts(">");}\par
00408                 {\cf19 if}(strcmp(num, {\cf22 "31"})==0) \{\par
00409                     tty_setcolor(VESA_RED);\par
00410                 \} {\cf19 else} {\cf19 if}(strcmp(num, {\cf22 "32"})==0) \{\par
00411                     tty_setcolor(VESA_GREEN);\par
00412                 \} {\cf19 else} {\cf19 if}(strcmp(num, {\cf22 "33"})==0) \{\par
00413                     tty_setcolor(VESA_LIGHT_YELLOW);\par
00414                 \} {\cf19 else} {\cf19 if}(strcmp(num, {\cf22 "34"})==0) \{\par
00415                     tty_setcolor(VESA_BLUE);\par
00416                 \} {\cf19 else} {\cf19 if}(strcmp(num, {\cf22 "35"})==0) \{\par
00417                     tty_setcolor(VESA_MAGENTA);\par
00418                 \} {\cf19 else} {\cf19 if}(strcmp(num, {\cf22 "36"})==0) \{\par
00419                     tty_setcolor(VESA_CYAN);\par
00420                 \} {\cf19 else} {\cf19 if}(strcmp(num, {\cf22 "37"})==0) \{\par
00421                     tty_setcolor(VESA_WHITE);\par
00422                 \}\par
00423                 {\cf19 else} {\cf19 if}(strncmp(num, {\cf22 "0"}, 1)==0) \{\par
00424                     tty_setcolor(COLOR_SYS_TEXT);\par
00425                 \}\par
00426                 kheap_free(num);\par
00427             \}\par
00428         \}\par
00429 {\cf21         #ifdef EXPERIMENTAL_FONT}\par
00430 \par
00431         {\cf19 if}(str[i]=={\cf22 '\\xFF'} && i+1<=strlen(str)) \{\par
00432             {\cf18 char} extch = str[i+1];\par
00433             external_draw_grapheme(Experimental_Font_data, Experimental_Font_width,\par
00434                                    Experimental_Font_height, extch);\par
00435             i++;\par
00436         \}{\cf19 else}\{\par
00437             tty_putchar(str[i]);\par
00438         \}\par
00439 {\cf21         #else}\par
00440         tty_putchar(str[i]);\par
00441 {\cf21         #endif}\par
00442     \}\par
00443 \}\par
00444 \par
00445 \par
00453 {\cf18 void} tty_puts_color({\cf17 const} {\cf18 char} str[], uint32_t txColor, uint32_t bgColor) \{\par
00454     {\cf19 for} ({\cf18 size_t} i = 0; i < strlen(str); i++) \{\par
00455         tty_putchar_color(str[i], txColor, bgColor);\par
00456     \}\par
00457 \}\par
00458 \par
00459 \par
00465 {\cf18 void} tty_putint({\cf17 const} int32_t i) \{\par
00466     {\cf18 char} res[32];\par
00467     \par
00468     {\cf19 if} (i < 0) \{\par
00469         {\cf20 //tty_putchar('-');}\par
00470     \}\par
00471 \par
00472     itoa(i, res);\par
00473     tty_puts(res);\par
00474     \par
00475 \}\par
00476 \par
00477 \par
00483 {\cf18 void} tty_puthex(uint32_t i) \{\par
00484     {\cf17 const} {\cf18 unsigned} {\cf18 char} hex[16]  =  \{ {\cf23 '0'}, {\cf23 '1'}, {\cf23 '2'}, {\cf23 '3'}, {\cf23 '4'}, {\cf23 '5'}, {\cf23 '6'}, {\cf23 '7'}, {\cf23 '8'}, {\cf23 '9'}, {\cf23 'A'}, {\cf23 'B'}, {\cf23 'C'}, {\cf23 'D'}, {\cf23 'E'}, {\cf23 'F'} \};\par
00485     uint32_t n, d = 0x10000000;\par
00486 \par
00487     tty_puts({\cf22 "0x"});\par
00488 \par
00489     {\cf19 while}((i / d == 0) && (d >= 0x10)) d /= 0x10;\par
00490 \par
00491     n = i;\par
00492 \par
00493     {\cf19 while}( d >= 0xF ) \{\par
00494         tty_putchar(hex[n/d]);\par
00495         n = n % d;\par
00496         d /= 0x10;\par
00497     \}\par
00498 \par
00499     tty_putchar(hex[n]);\par
00500 \}\par
00501 \par
00502 \par
00508 {\cf18 void} tty_puthex_v(uint32_t i) \{\par
00509     {\cf17 const} {\cf18 unsigned} {\cf18 char} hex[16]  =  \{ {\cf23 '0'}, {\cf23 '1'}, {\cf23 '2'}, {\cf23 '3'}, {\cf23 '4'}, {\cf23 '5'}, {\cf23 '6'}, {\cf23 '7'}, {\cf23 '8'}, {\cf23 '9'}, {\cf23 'A'}, {\cf23 'B'}, {\cf23 'C'}, {\cf23 'D'}, {\cf23 'E'}, {\cf23 'F'} \};\par
00510     uint32_t n, d = 0x10000000;\par
00511 \par
00512     {\cf19 while}((i / d == 0) && (d >= 0x10)) d /= 0x10;\par
00513 \par
00514     n = i;\par
00515 \par
00516     {\cf19 while}( d >= 0xF ) \{\par
00517         tty_putchar(hex[n/d]);\par
00518         n = n % d;\par
00519         d /= 0x10;\par
00520     \}\par
00521 \par
00522     tty_putchar(hex[n]);\par
00523 \}\par
00524 \par
00525 \par
00532 {\cf18 void} tty_print({\cf18 char} *format, va_list args) \{\par
00533     int32_t i = 0;\par
00534 \par
00535     {\cf19 while} (format[i]) \{\par
00536         {\cf19 if} (format[i] == {\cf23 '%'}) \{\par
00537             i++;\par
00538             {\cf19 switch} (format[i]) \{\par
00539                 {\cf19 case} {\cf23 's'}:\par
00540                     tty_puts(va_arg(args, {\cf18 char}*));\par
00541                     {\cf19 break};\par
00542                 {\cf19 case} {\cf23 'c'}:\par
00543                     tty_putchar(va_arg(args, {\cf18 int}));\par
00544                     {\cf19 break};\par
00545                 {\cf19 case} {\cf23 'f'}:\par
00546                     tty_putchar(va_arg(args, {\cf18 float}));\par
00547                     {\cf19 break};\par
00548                 {\cf19 case} {\cf23 'd'}:\par
00549                     tty_putint(va_arg(args, {\cf18 int}));\par
00550                     {\cf19 break};\par
00551                 {\cf19 case} {\cf23 'i'}:\par
00552                     tty_putint(va_arg(args, {\cf18 int}));\par
00553                     {\cf19 break};\par
00554                 {\cf19 case} {\cf23 'u'}:\par
00555                     tty_putint(va_arg(args, {\cf18 unsigned} {\cf18 int}));\par
00556                     {\cf19 break};\par
00557                 {\cf19 case} {\cf23 'x'}:\par
00558                     tty_puthex(va_arg(args, uint32_t));\par
00559                     {\cf19 break};\par
00560                 {\cf19 case} {\cf23 'v'}:\par
00561                     tty_puthex_v(va_arg(args, uint32_t));\par
00562                     {\cf19 break};\par
00563                 {\cf19 default}:\par
00564                     tty_putchar(format[i]);\par
00565             \}\par
00566             {\cf20 // \\n}\par
00567         \} {\cf19 else} {\cf19 if} (format[i] == 10) \{\par
00568             tty_line_fill[tty_pos_y] = tty_pos_x;\par
00569             tty_pos_x = 0;\par
00570 \par
00571             {\cf19 if} ((tty_pos_y + 17) >= ({\cf18 int})VESA_HEIGHT) \{ \par
00572                 tty_scroll();\par
00573             \} {\cf19 else} \{\par
00574                 tty_pos_y += 17;\par
00575             \}\par
00576             {\cf20 // \\t}\par
00577         \} {\cf19 else} {\cf19 if} (format[i] == 9) \{\par
00578             tty_pos_x += 4 * 17;\par
00579         \} {\cf19 else} \{\par
00580             tty_putchar(format[i]);\par
00581         \}\par
00582         i++;\par
00583     \}\par
00584 \}\par
00585 \par
00586 \par
00593 {\cf18 void} tty_printf({\cf18 char} *text, ...) \{\par
00594     va_list args;\par
00595     va_start(args, text);\par
00596     tty_print(text, args);\par
00597 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB kernel/src/io/tui.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/io/tui.c}
{\xe \v kernel/src/io/tui.c}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TUI \'E4\'EB\'FF SynapseOS. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <kernel.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CLOCK_FORMAT}\~ 2\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testDisplay} (int w, int h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawRect} (int x, int y, int w, int h, int color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawRectLine} (int x, int y, int w, int h, int color, int color2, int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawLine} (int y, int color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cleanScreen} (bool fast)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b headBar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b headBarOld} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b footBar} (char *text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cleanWorkSpace} (int color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createMenuBox} (char *title)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createErrorBox} (char *title, char *text)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'F4\'E0\'F2\'E0\'EB\'FC\'ED\'FB\'E9 \'EA\'F0\'E0\'F1\'ED\'FB\'E9 \'E1\'EB\'EE\'EA }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateLoop} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tui} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b bgColor} = VESA_BLUE\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b txColor} = VESA_WHITE\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b TUIMode} = TUI_DEFAULT\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b typeDisplay} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b lastUpdate} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b w} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b h} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b ww} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b wh} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b maxStrLine} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b maxHeightLine} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b oldPosX} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b oldPosY} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b Display}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b currentMenu} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b currentList} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b listMenu} [128]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b maxListMenu} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b maxItemScreen} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b pageMenuCurrent} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b pageMenuMax} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TUI \'E4\'EB\'FF SynapseOS. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'E2\'F2\'EE\'F0\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'CF\'E8\'EC\'E8\'ED\'EE\'E2 \'CD\'E8\'EA\'E8\'F2\'E0 (@piminov_remont) (github.com/pimnik98) piminoff.ru \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 
{\xe \v CLOCK_FORMAT\:tui.c}
{\xe \v tui.c\:CLOCK_FORMAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CLOCK_FORMAT\~ 2}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 9}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v cleanScreen\:tui.c}
{\xe \v tui.c\:cleanScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cleanScreen (bool  {\i fast})}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 427}}\par
}
{\xe \v cleanWorkSpace\:tui.c}
{\xe \v tui.c\:cleanWorkSpace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cleanWorkSpace (int  {\i color})}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 510}}\par
}
{\xe \v createErrorBox\:tui.c}
{\xe \v tui.c\:createErrorBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createErrorBox (char *  {\i title}, char *  {\i text})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'F4\'E0\'F2\'E0\'EB\'FC\'ED\'FB\'E9 \'EA\'F0\'E0\'F1\'ED\'FB\'E9 \'E1\'EB\'EE\'EA }}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 567}}\par
}
{\xe \v createMenuBox\:tui.c}
{\xe \v tui.c\:createMenuBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createMenuBox (char *  {\i title})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 514}}\par
}
{\xe \v drawLine\:tui.c}
{\xe \v tui.c\:drawLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void drawLine (int  {\i y}, int  {\i color})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 421}}\par
}
{\xe \v drawRect\:tui.c}
{\xe \v tui.c\:drawRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void drawRect (int  {\i x}, int  {\i y}, int  {\i w}, int  {\i h}, int  {\i color})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'EC \'EF\'F0\'FF\'EC\'EE\'F3\'E3\'EE\'EB\'FC\'ED\'E8\'EA x - \'CD\'E0\'F7\'E0\'EB\'FC\'ED\'E0\'FF \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 X y - \'CD\'E0\'F7\'E0\'EB\'FC\'ED\'E0\'FF \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 y w - \'C4\'EB\'E8\'ED\'E0 h - \'C2\'FB\'F1\'EE\'F2\'E0 color - \'F6\'E2\'E5\'F2 \'E7\'E0\'EB\'E8\'E2\'EA\'E8 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 402}}\par
}
{\xe \v drawRectLine\:tui.c}
{\xe \v tui.c\:drawRectLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void drawRectLine (int  {\i x}, int  {\i y}, int  {\i w}, int  {\i h}, int  {\i color}, int  {\i color2}, int  {\i c})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 410}}\par
}
{\xe \v footBar\:tui.c}
{\xe \v tui.c\:footBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void footBar (char *  {\i text})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 503}}\par
}
{\xe \v headBar\:tui.c}
{\xe \v tui.c\:headBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void headBar ()}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 439}}\par
}
{\xe \v headBarOld\:tui.c}
{\xe \v tui.c\:headBarOld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void headBarOld ()}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 456}}\par
}
{\xe \v testDisplay\:tui.c}
{\xe \v tui.c\:testDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testDisplay (int  {\i w}, int  {\i h})}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
}
{\xe \v tui\:tui.c}
{\xe \v tui.c\:tui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool tui ()}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 651}}\par
}
{\xe \v updateLoop\:tui.c}
{\xe \v tui.c\:updateLoop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateLoop ()}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 622}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 
{\xe \v bgColor\:tui.c}
{\xe \v tui.c\:bgColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t bgColor = VESA_BLUE}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
}
{\xe \v currentList\:tui.c}
{\xe \v tui.c\:currentList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t currentList = 0}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v currentMenu\:tui.c}
{\xe \v tui.c\:currentMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t currentMenu = 0}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v Display\:tui.c}
{\xe \v tui.c\:Display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* Display}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v h\:tui.c}
{\xe \v tui.c\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t h = 0}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v lastUpdate\:tui.c}
{\xe \v tui.c\:lastUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t lastUpdate = 0}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
}
{\xe \v listMenu\:tui.c}
{\xe \v tui.c\:listMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* listMenu[128]}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\xe \v maxHeightLine\:tui.c}
{\xe \v tui.c\:maxHeightLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t maxHeightLine = 0}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\xe \v maxItemScreen\:tui.c}
{\xe \v tui.c\:maxItemScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t maxItemScreen = 0}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 29}}\par
}
{\xe \v maxListMenu\:tui.c}
{\xe \v tui.c\:maxListMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t maxListMenu = 0}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 28}}\par
}
{\xe \v maxStrLine\:tui.c}
{\xe \v tui.c\:maxStrLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t maxStrLine = 0}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v oldPosX\:tui.c}
{\xe \v tui.c\:oldPosX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t oldPosX = 0}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v oldPosY\:tui.c}
{\xe \v tui.c\:oldPosY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t oldPosY = 0}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v pageMenuCurrent\:tui.c}
{\xe \v tui.c\:pageMenuCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t pageMenuCurrent = 0}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 30}}\par
}
{\xe \v pageMenuMax\:tui.c}
{\xe \v tui.c\:pageMenuMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t pageMenuMax = 0}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 31}}\par
}
{\xe \v TUIMode\:tui.c}
{\xe \v tui.c\:TUIMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t TUIMode = TUI_DEFAULT}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 13}}\par
}
{\xe \v txColor\:tui.c}
{\xe \v tui.c\:txColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t txColor = VESA_WHITE}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 12}}\par
}
{\xe \v typeDisplay\:tui.c}
{\xe \v tui.c\:typeDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t typeDisplay = 0}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 14}}\par
}
{\xe \v w\:tui.c}
{\xe \v tui.c\:w}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t w = 0}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\xe \v wh\:tui.c}
{\xe \v tui.c\:wh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t wh = 0}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v ww\:tui.c}
{\xe \v tui.c\:ww}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t ww = 0}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tui.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tui.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/io/tui.c}
{\xe \v kernel/src/io/tui.c}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00007 {\cf21 #include <kernel.h>}\par
00008 \par
00009 {\cf21 #define CLOCK_FORMAT 2}\par
00010 \par
00011 int32_t bgColor = VESA_BLUE;        {\cf20 // \'D4\'EE\'ED \'ED\'E0 \'FD\'EA\'F0\'E0\'ED\'E5}\par
00012 int32_t txColor = VESA_WHITE;       {\cf20 // \'CE\'F1\'ED\'EE\'E2\'ED\'EE\'E9 \'F2\'E5\'EA\'F1\'F2 \'E4\'EB\'FF \'EF\'E5\'F7\'E0\'F2\'E8 \'ED\'E0 \'FD\'EA\'F0\'E0\'ED\'E5}\par
00013 int32_t TUIMode = TUI_DEFAULT;      {\cf20 // \'D0\'E5\'E6\'E8\'EC TUI}\par
00014 int32_t typeDisplay = 0;            {\cf20 // \'D2\'E8\'EF \'E4\'E8\'F1\'EF\'EB\'E5\'FF (?)}\par
00015 int32_t lastUpdate = 0;             {\cf20 // \'CF\'EE\'F1\'EB\'E5\'E4\'ED\'E5\'E5 \'EE\'E1\'ED\'EE\'E2\'EB\'E5\'ED\'E8\'E5 \'FD\'EA\'F0\'E0\'ED\'E0}\par
00016 int32_t w = 0;                      {\cf20 // \'C4\'EB\'E8\'ED\'E0 \'FD\'EA\'F0\'E0\'ED\'E0}\par
00017 int32_t h = 0;                      {\cf20 // \'C2\'FB\'F1\'EE\'F2\'E0 \'FD\'EA\'F0\'E0\'ED\'E0}\par
00018 int32_t ww = 0;                     {\cf20 // \'C4\'EB\'E8\'ED\'E0 \'F0\'E0\'E1\'EE\'F7\'E5\'E3\'EE \'EC\'E5\'F1\'F2\'E0}\par
00019 int32_t wh = 0;                     {\cf20 // \'C2\'FB\'F1\'EE\'F2\'E0 \'F0\'E0\'E1\'EE\'F7\'E5\'E3\'EE \'EC\'E5\'F1\'F2\'E0}\par
00020 int32_t maxStrLine = 0;             {\cf20 // \'CC\'E0\'EA\'F1\'E8\'EC\'E0\'EB\'FC\'ED\'EE\'E5 \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'EE\'E2 \'ED\'E0 \'EB\'E8\'ED\'E8\'E8}\par
00021 int32_t maxHeightLine = 0;          {\cf20 // \'CC\'E0\'EA\'F1\'E8\'EC\'E0\'EB\'FC\'ED\'EE\'E5 \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'EB\'E8\'ED\'E8\'E9}\par
00022 int32_t oldPosX = 0;                {\cf20 // \'CF\'EE\'F1\'EB\'E5\'E4\'ED\'E8\'E5 \'EC\'E5\'F1\'F2\'EE\'EF\'EE\'EB\'EE\'E6\'E5\'ED\'E8\'E5 \'F1\'E8\'EC\'E2\'EE\'EB\'E0 \'EF\'EE X (\'EC\'E5\'F1\'F2\'EE \'EF\'E5\'F7\'E0\'F2\'E8)}\par
00023 int32_t oldPosY = 0;                {\cf20 // \'CF\'EE\'F1\'EB\'E5\'E4\'ED\'E8\'E5 \'EC\'E5\'F1\'F2\'EE\'EF\'EE\'EB\'EE\'E6\'E5\'ED\'E8\'E5 \'F1\'E8\'EC\'E2\'EE\'EB\'E0 \'EF\'EE Y (\'EC\'E5\'F1\'F2\'EE \'EF\'E5\'F7\'E0\'F2\'E8)}\par
00024 {\cf18 char}* Display;                      {\cf20 // \'CD\'E0\'E7\'E2\'E0\'ED\'E8\'E5 \'F0\'E0\'F1\'F8\'E8\'F0\'E5\'ED\'E8\'FF \'EC\'EE\'ED\'E8\'F2\'EE\'F0\'E0}\par
00025 int32_t currentMenu = 0;            {\cf20 // \'D2\'E5\'EA\'F3\'F9\'E8\'E5 \'EC\'E5\'ED\'FE}\par
00026 int32_t currentList = 0;            {\cf20 // \'D2\'E5\'EA\'F3\'F9\'E0\'FF \'EF\'EE\'E7\'E8\'F6\'E8\'FF \'ED\'E0 \'FD\'EA\'F0\'E0\'ED\'E5}\par
00027 {\cf18 char}* listMenu[128];                 {\cf20 // \'D1\'E0\'EC \'F1\'EF\'E8\'F1\'EE\'EA \'EC\'E5\'ED\'FE}\par
00028 int32_t maxListMenu = 0;            {\cf20 // \'CC\'E0\'EA\'F1\'E8\'EC\'E0\'EB\'FC\'ED\'EE\'E5 \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'EE\'E2}\par
00029 uint32_t maxItemScreen = 0;         {\cf20 // \'CC\'E0\'EA\'F1\'E8\'EC\'E0\'EB\'FC\'ED\'EE\'E5 \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'EE\'E1\'FA\'E5\'EA\'F2\'EE\'E2 \'ED\'E0 \'FD\'EA\'F0\'E0\'ED\'E5}\par
00030 uint32_t pageMenuCurrent = 0;        {\cf20 // \'D2\'E5\'EA\'F3\'F9\'E0\'FF \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E0}\par
00031 uint32_t pageMenuMax = 0;           {\cf20 // \'CC\'E0\'EA\'F1\'E8\'EC\'E0\'EB\'FC\'ED\'E0\'FF \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E0}\par
00032 \par
00033 {\cf18 void} testDisplay({\cf18 int} w, {\cf18 int} h)\{\par
00034     int32_t pixels = w*h;\par
00035     int32_t tDsize = w/h;\par
00036     {\cf20 // \'D2\'E8\'EF\'FB \'E4\'E8\'F1\'EF\'EB\'E5\'E5\'E2:}\par
00037     {\cf20 // Unknown  - 0}\par
00038     {\cf20 // 4:3      - 1}\par
00039     {\cf20 // 16:9     - 2}\par
00040     {\cf20 // 16:10    - 3}\par
00041     {\cf20 // 5:3      - 4}\par
00042     {\cf20 // 5:4      - 5}\par
00043     {\cf20 // 5:6      - 6}\par
00044     {\cf20 // 22:15    - 7}\par
00045     {\cf20 // 11:9     - 8}\par
00046     {\cf20 // 8:3      - 9}\par
00047     {\cf20 // 15:9     - 10}\par
00048     {\cf20 // 2:1      - 11}\par
00049     {\cf20 // 3:2      - 12}\par
00050     {\cf20 // 25:16    - 13}\par
00051     {\cf20 // 19:10    - 14}\par
00052     {\cf20 // 21:9     - 15}\par
00053     {\cf20 // 25:16    - 16}\par
00054     {\cf20 // 43:18    - 17}\par
00055 \par
00056 \par
00057     {\cf19 switch}(pixels)\{\par
00058         {\cf19 case} 76800:\{\par
00059             {\cf20 // 320\'C3\'97240 (4:3)}\par
00060             Display = {\cf22 "QVGA"};\par
00061             typeDisplay = 1;\par
00062             {\cf19 break};\par
00063         \}\par
00064         {\cf19 case} 84480: \{\par
00065             {\cf20 // 352\'C3\'97240 (22:15)}\par
00066             Display = {\cf22 "SIF(MPEG1 SIF)"};\par
00067             typeDisplay = 7;\par
00068             {\cf19 break};\par
00069         \}\par
00070         {\cf19 case} 101376: \{\par
00071             {\cf20 // 352\'C3\'97288 (11:9)}\par
00072             Display = {\cf22 "CIF(MPEG1 VideoCD)"};\par
00073             typeDisplay = 8;\par
00074             {\cf19 break};\par
00075         \}\par
00076         {\cf19 case} 96000: \{\par
00077             {\cf20 // 400\'C3\'97240 (5:3)}\par
00078             Display = {\cf22 "WQVGA"};\par
00079             typeDisplay = 4;\par
00080             {\cf19 break};\par
00081         \}\par
00082         {\cf19 case} 276480: \{\par
00083             {\cf20 // 480\'C3\'97576 (5:6 - 12:10)}\par
00084             Display = {\cf22 "[MPEG2 SV-CD]"};\par
00085             typeDisplay = 6;\par
00086             {\cf19 break};\par
00087         \}\par
00088         {\cf19 case} 153600: \{\par
00089             {\cf20 // 640\'C3\'97240 (8:3) \'D0\'B8\'D0\'BB\'D0\'B8 320\'C3\'97480 (2:3)}\par
00090             Display = {\cf22 "HVGA"};\par
00091             typeDisplay = 9;\par
00092             {\cf19 break};\par
00093         \}\par
00094         {\cf19 case} 230400: \{\par
00095             {\cf20 // 640\'C3\'97360 (16:9)}\par
00096             Display = {\cf22 "nHD"};\par
00097             typeDisplay = 2;\par
00098             {\cf19 break};\par
00099         \}\par
00100         {\cf19 case} 307200: \{\par
00101             {\cf20 // 640\'C3\'97480 (4:3 - 12:9)}\par
00102             Display = {\cf22 "VGA"};\par
00103             typeDisplay = 1;\par
00104             {\cf19 break};\par
00105         \}\par
00106         {\cf19 case} 384000: \{\par
00107             {\cf20 // 800\'C3\'97480 (5:3)}\par
00108             Display = {\cf22 "WVGA"};\par
00109             typeDisplay = 4;\par
00110             {\cf19 break};\par
00111         \}\par
00112         {\cf19 case} 480000: \{\par
00113             {\cf20 // 800\'C3\'97600 (4:3)}\par
00114             Display = {\cf22 "SVGA"};\par
00115             typeDisplay = 1;\par
00116             {\cf19 break};\par
00117         \}\par
00118         {\cf19 case} 409920: \{\par
00119             {\cf20 // 854\'C3\'97480 (16:9)}\par
00120             Display = {\cf22 "FWVGA"};\par
00121             typeDisplay = 2;\par
00122             {\cf19 break};\par
00123         \}\par
00124         {\cf19 case} 518400: \{\par
00125             {\cf20 // 960\'C3\'97540 (16:9)}\par
00126             Display = {\cf22 "qHD"};\par
00127             typeDisplay = 2;\par
00128             {\cf19 break};\par
00129         \}\par
00130         {\cf19 case} 614400: \{\par
00131             {\cf20 // 1024\'C3\'97600 (128:75 - 15:9)}\par
00132             Display = {\cf22 "WSVGA"};\par
00133             typeDisplay = 10;\par
00134             {\cf19 break};\par
00135         \}\par
00136         {\cf19 case} 786432: \{\par
00137             {\cf20 // 1024\'C3\'97768 (4:3)}\par
00138             Display = {\cf22 "XGA"};\par
00139             typeDisplay = 1;\par
00140             {\cf19 break};\par
00141         \}\par
00142         {\cf19 case} 995328: \{\par
00143             {\cf20 // 1152\'C3\'97864 (4:3)}\par
00144             Display = {\cf22 "XGA+"};\par
00145             typeDisplay = 1;\par
00146             {\cf19 break};\par
00147         \}\par
00148         {\cf19 case} 720000: \{\par
00149             {\cf20 // 1200\'C3\'97600 (2:1)}\par
00150             Display = {\cf22 "WXVGA"};\par
00151             typeDisplay = 11;\par
00152             {\cf19 break};\par
00153         \}\par
00154         {\cf19 case} 921600: \{\par
00155             {\cf20 // 1280\'C3\'97720 (16:9)}\par
00156             Display = {\cf22 "HDV 720p (HD ready) (720p)"};\par
00157             typeDisplay = 2;\par
00158             {\cf19 break};\par
00159         \}\par
00160         {\cf19 case} 983040: \{\par
00161             {\cf20 // 1280\'C3\'97768 (5:3)}\par
00162             Display = {\cf22 "WXGA"};\par
00163             typeDisplay = 4;\par
00164             {\cf19 break};\par
00165         \}\par
00166         {\cf19 case} 1049088: \{\par
00167             {\cf20 // 1366\'C3\'97768 (16:9)}\par
00168             Display = {\cf22 "HD"};\par
00169             typeDisplay = 2;\par
00170             {\cf19 break};\par
00171         \}\par
00172         {\cf19 case} 1310720: \{\par
00173             {\cf20 // 1280\'C3\'971024 (5:4)}\par
00174             Display = {\cf22 "SXGA"};\par
00175             typeDisplay = 5;\par
00176             {\cf19 break};\par
00177         \}\par
00178         {\cf19 case} 1622016: \{\par
00179             {\cf20 // 1408\'C3\'971152 (11:9)}\par
00180             Display = {\cf22 "16CIF"};\par
00181             typeDisplay = 8;\par
00182             {\cf19 break};\par
00183         \}\par
00184         {\cf19 case} 1296000: \{\par
00185             {\cf20 // 1440\'C3\'97900 (8:5 - 16:10)}\par
00186             Display = {\cf22 "WXGA+"};\par
00187             typeDisplay = 3;\par
00188             {\cf19 break};\par
00189         \}\par
00190         {\cf19 case} 1470000: \{\par
00191             {\cf20 // 1400\'C3\'971050 (4:3)}\par
00192             Display = {\cf22 "SXGA+"};\par
00193             typeDisplay = 1;\par
00194             {\cf19 break};\par
00195         \}\par
00196         {\cf19 case} 15120000: \{\par
00197             {\cf20 // 1400\'C3\'9710800 (4:3)}\par
00198             Display = {\cf22 "HDV 1080i "};\par
00199             typeDisplay = 1;\par
00200             {\cf19 break};\par
00201         \}\par
00202         {\cf19 case} 1474560: \{\par
00203             {\cf20 // 1536\'C3\'97960 (8:5 - 16:10)}\par
00204             Display = {\cf22 "XJXGA"};\par
00205             typeDisplay = 3;\par
00206             {\cf19 break};\par
00207         \}\par
00208         {\cf19 case} 1572864: \{\par
00209             {\cf20 // 1536\'C3\'971024 (3:2)}\par
00210             Display = {\cf22 "WSXGA (x)"};\par
00211             typeDisplay = 12;\par
00212             {\cf19 break};\par
00213         \}\par
00214         {\cf19 case} 1440000: \{\par
00215             {\cf20 // 1600\'C3\'97900 (16:9)}\par
00216             Display = {\cf22 "WXGA++"};\par
00217             typeDisplay = 2;\par
00218             {\cf19 break};\par
00219         \}\par
00220         {\cf19 case} 1638400: \{\par
00221             {\cf20 // 1600\'C3\'971024 (25:16)}\par
00222             Display = {\cf22 "WSXGA"};\par
00223             typeDisplay = 13;\par
00224             {\cf19 break};\par
00225         \}\par
00226         {\cf19 case} 1920000: \{\par
00227             {\cf20 // 1600\'C3\'971200 (4:3)}\par
00228             Display = {\cf22 "UXGA"};\par
00229             typeDisplay = 1;\par
00230             {\cf19 break};\par
00231         \}\par
00232         {\cf19 case} 1764000: \{\par
00233             {\cf20 // 1680\'C3\'971050 (16:10)}\par
00234             Display = {\cf22 "WSXGA+"};\par
00235             typeDisplay = 3;\par
00236             {\cf19 break};\par
00237         \}\par
00238         {\cf19 case} 2073600: \{\par
00239             {\cf20 // 1920\'C3\'971080 (16:9)}\par
00240             Display = {\cf22 "Full HD (FHD)"};\par
00241             typeDisplay = 2;\par
00242             {\cf19 break};\par
00243         \}\par
00244         {\cf19 case} 2304000: \{\par
00245             {\cf20 // 1920\'C3\'971200 (8:5 - 16:10)}\par
00246             Display = {\cf22 "WUXGA"};\par
00247             typeDisplay = 3;\par
00248             {\cf19 break};\par
00249         \}\par
00250         {\cf19 case} 2111840: \{\par
00251             {\cf20 // 2048\'C3\'971080 (19:10)}\par
00252             Display = {\cf22 "2K DCI (Cinema 2K)"};\par
00253             typeDisplay = 14;\par
00254             {\cf19 break};\par
00255         \}\par
00256         {\cf19 case} 2359296: \{\par
00257             {\cf20 // 2048\'C3\'971152 (16:9)}\par
00258             Display = {\cf22 "QWXGA"};\par
00259             typeDisplay = 2;\par
00260             {\cf19 break};\par
00261         \}\par
00262         {\cf19 case} 2777088: \{\par
00263             {\cf20 // 2048\'C3\'971536 (4:3)}\par
00264             Display = {\cf22 "QXGA"};\par
00265             typeDisplay = 1;\par
00266             {\cf19 break};\par
00267         \}\par
00268         {\cf19 case} 2764800: \{\par
00269             {\cf20 // 2560\'C3\'971080 (64:27 (21:9))}\par
00270             Display = {\cf22 "UWHD"};\par
00271             typeDisplay = 15;\par
00272             {\cf19 break};\par
00273         \}\par
00274         {\cf19 case} 3686400: \{\par
00275             {\cf20 // 2560\'C3\'971440 (16:9)}\par
00276             Display = {\cf22 "WQXGA (WQHD) (QHD)"};\par
00277             typeDisplay = 2;\par
00278             {\cf19 break};\par
00279         \}\par
00280         {\cf19 case} 4096000: \{\par
00281             {\cf20 // 2560\'C3\'971600 (8:5 - 16:10)}\par
00282             Display = {\cf22 "WQXGA"};\par
00283             typeDisplay = 3;\par
00284             {\cf19 break};\par
00285         \}\par
00286         {\cf19 case} 5242880: \{\par
00287             {\cf20 // 2560\'C3\'972048 (5:4)}\par
00288             Display = {\cf22 "QSXGA"};\par
00289             typeDisplay = 5;\par
00290             {\cf19 break};\par
00291         \}\par
00292         {\cf19 case} 5760000: \{\par
00293             {\cf20 // 3200\'C3\'971800 (16:9)}\par
00294             Display = {\cf22 "WXGA+"};\par
00295             typeDisplay = 2;\par
00296             {\cf19 break};\par
00297         \}\par
00298         {\cf19 case} 6553600: \{\par
00299             {\cf20 // 3200\'C3\'972048 (25:16)}\par
00300             Display = {\cf22 "WQSXGA"};\par
00301 \par
00302             typeDisplay = 16;\par
00303             {\cf19 break};\par
00304         \}\par
00305         {\cf19 case} 7680000: \{\par
00306             {\cf20 // 3200\'C3\'972400 (4:3)}\par
00307             Display = {\cf22 "QUXGA"};\par
00308             typeDisplay = 1;\par
00309             {\cf19 break};\par
00310         \}\par
00311         {\cf19 case} 4953600: \{\par
00312             {\cf20 // 3440\'C3\'971440 (43:18)}\par
00313             Display = {\cf22 "Ultra WQHD"};\par
00314             typeDisplay = 17;\par
00315             {\cf19 break};\par
00316         \}\par
00317         {\cf19 case} 4838400: \{\par
00318             {\cf20 // 3840\'C3\'972400 (8:5 - 16:10)}\par
00319             Display = {\cf22 "WQUXGA"};\par
00320             typeDisplay = 3;\par
00321             {\cf19 break};\par
00322         \}\par
00323         {\cf19 case} 829440: \{\par
00324             {\cf20 // 3840\'C3\'972160 (16:9)}\par
00325             Display = {\cf22 "4K Ultra HD 1 (4K UHD-1)"};\par
00326             typeDisplay = 2;\par
00327             {\cf19 break};\par
00328         \}\par
00329         {\cf19 case} 8847360: \{\par
00330             {\cf20 // 4096\'C3\'972160 (19:10)}\par
00331             Display = {\cf22 "4K DCI (Cinema 4K)"};\par
00332             typeDisplay = 14;\par
00333             {\cf19 break};\par
00334         \}\par
00335         {\cf19 case} 14745600: \{\par
00336             {\cf20 // 5120\'C3\'972880 (16:9)}\par
00337             Display = {\cf22 "5K / UHD +"};\par
00338             typeDisplay = 2;\par
00339             {\cf19 break};\par
00340         \}\par
00341         {\cf19 case} 20971520: \{\par
00342             {\cf20 // 5120\'C3\'974096 (5:4)}\par
00343             Display = {\cf22 "HSXGA"};\par
00344             typeDisplay = 5;\par
00345             {\cf19 break};\par
00346         \}\par
00347         {\cf19 case} 26214400: \{\par
00348             {\cf20 // 6400\'C3\'974096 (25:16)}\par
00349             Display = {\cf22 "WHSXGA"};\par
00350             typeDisplay = 13;\par
00351             {\cf19 break};\par
00352         \}\par
00353         {\cf19 case} 30720000: \{\par
00354             {\cf20 // 6400\'C3\'974800 (4:3)}\par
00355             Display = {\cf22 "HUXGA"};\par
00356             typeDisplay = 1;\par
00357             {\cf19 break};\par
00358         \}\par
00359         {\cf19 case} 33177600: \{\par
00360             {\cf20 // 7680\'C3\'974320 (16:9)}\par
00361             Display = {\cf22 "8K Ultra HD 2 (8K UHD-2)"};\par
00362             typeDisplay = 2;\par
00363             {\cf19 break};\par
00364         \}\par
00365         {\cf19 case} 36864000: \{\par
00366             {\cf20 // 7680\'C3\'974800 (8:5, 16:10)}\par
00367             Display = {\cf22 "WHUXGA"};\par
00368             typeDisplay = 3;\par
00369             {\cf19 break};\par
00370         \}\par
00371         {\cf19 case} 58982400: \{\par
00372             {\cf20 // 10240\'C3\'975760 (16:9)}\par
00373             Display = {\cf22 "10k"};\par
00374             typeDisplay = 2;\par
00375             {\cf19 break};\par
00376         \}\par
00377         {\cf19 case} 74649600: \{\par
00378             {\cf20 // 11520\'C3\'976480 (16:9)}\par
00379             Display = {\cf22 "12K"};\par
00380             typeDisplay = 2;\par
00381             {\cf19 break};\par
00382         \}\par
00383         {\cf19 default}: \{\par
00384             Display = {\cf22 "Unknown"};\par
00385             typeDisplay = 0;\par
00386             {\cf19 break};\par
00387         \}\par
00388     \}\par
00389     {\cf20 //tty_printf("%d",framebuffer_width);}\par
00390     qemu_log({\cf22 "[testDisplay] %dx%d - %d pixels | %d | %s"},w,h,pixels,typeDisplay,Display);\par
00391     tty_printf({\cf22 "[testDisplay] %dx%d - %d pixels | %d | %s \\n"},w,h,pixels,typeDisplay,Display);\par
00392 \}\par
00393 \par
00402 {\cf18 void} drawRect({\cf18 int} x,{\cf18 int} y,{\cf18 int} w, {\cf18 int} h,{\cf18 int} color)\{\par
00403     {\cf19 for} ({\cf18 int} _x = x; _x < x+w ; _x++)\{\par
00404         {\cf19 for} ({\cf18 int} _y = y; _y < y+h; _y++)\{\par
00405             set_pixel(_x, _y, color);\par
00406         \}\par
00407     \}\par
00408 \}\par
00409 \par
00410 {\cf18 void} drawRectLine({\cf18 int} x,{\cf18 int} y,{\cf18 int} w, {\cf18 int} h,{\cf18 int} color,{\cf18 int} color2, {\cf18 int} c)\{\par
00411     {\cf19 for} ({\cf18 int} _x = x; _x < x+w ; _x += 8)\{\par
00412         draw_vga_character(c, _x, y, color, color2, {\cf17 true});\par
00413         draw_vga_character(c, _x, y+h-16, color, color2, {\cf17 true});\par
00414     \}\par
00415     {\cf19 for} ({\cf18 int} _y = y; _y < y+h; _y += 16)\{\par
00416         draw_vga_character(c, x, _y, color, color2, {\cf17 true});\par
00417         draw_vga_character(c, x+w-8, _y, color, color2, {\cf17 true});\par
00418     \}\par
00419 \}\par
00420 \par
00421 {\cf18 void} drawLine({\cf18 int} y,{\cf18 int} color)\{\par
00422     {\cf19 for} ({\cf18 int} _x = 0; _x < w ; _x += 8)\{\par
00423         draw_vga_character(0, _x, y*16, color, color, {\cf17 true});\par
00424     \}\par
00425 \}\par
00426 \par
00427 {\cf18 void} cleanScreen({\cf18 bool} fast)\{\par
00428     {\cf19 if} (fast)\{\par
00429         drawRect(0,0,w,h,bgColor);\par
00430     \} {\cf19 else} \{\par
00431         {\cf19 for} ({\cf18 int} x = 0; x != w; x++)\{\par
00432             {\cf19 for} ({\cf18 int} y = 0; y != h; y++)\{\par
00433                 set_pixel(x, y, bgColor);\par
00434             \}\par
00435         \}\par
00436     \}\par
00437 \}\par
00438 \par
00439 {\cf18 void} headBar()\{\par
00440     drawLine(1,TUI_BASE_COLOR_HEAD);\par
00441     {\cf18 char}* OSNAME = {\cf22 " SynapseOS v0.2.12 (Dev)"};\par
00442     setPosX(0);\par
00443     setPosY(16*1);\par
00444     tty_puts_color(OSNAME,txColor, TUI_BASE_COLOR_HEAD);\par
00445 \par
00446     tty_setcolor(txColor);\par
00447     {\cf17 struct }synapse_time TIME = get_time();\par
00448     {\cf20 //char* TIME = "10/10/2022 12:23";}\par
00449     setPosX((maxStrLine-18)*8);\par
00450     setPosY(16*1);\par
00451     drawRect((maxStrLine-18)*8,16,18*8, 16,TUI_BASE_COLOR_HEAD);\par
00452     tty_printf({\cf22 "%d/%d/%d %d:%d:%d"}, TIME.day, TIME.month, TIME.year, TIME.hours, TIME.minutes, TIME.seconds);\par
00453     {\cf20 //tty_puts_color(TIME,txColor, TUI_BASE_COLOR_HEAD);}\par
00454 \}\par
00455 \par
00456 {\cf18 void} headBarOld()\{\par
00457     drawLine(1,TUI_BASE_COLOR_HEAD);\par
00458     {\cf18 char}* OSNAME = {\cf22 " SynapseOS v0.2.12 (Dev)"};\par
00459     setPosX(0);\par
00460     setPosY(16*1);\par
00461     tty_puts_color(OSNAME,txColor, TUI_BASE_COLOR_HEAD);\par
00462 \par
00463     {\cf18 char}* TIME = {\cf22 "10/10/2022 12:23"};\par
00464     setPosX((maxStrLine-15)*8);\par
00465     setPosY(16*1);\par
00466     tty_puts_color(TIME,txColor, TUI_BASE_COLOR_HEAD);\par
00467     {\cf20 // \'D0\'E8\'F1\'F3\'E5\'EC \'F2\'F0\'E5\'F3\'E3\'EE\'EB\'FC\'ED\'E8\'EA \'E4\'EB\'FF \'EF\'E0\'F0\'E0\'EC\'E5\'F2\'F0\'EE\'E2}\par
00468     drawRectLine(8,32,w/2,112,txColor,VESA_LIGHT_GREY,176);\par
00469     drawRectLine(w/2,32,(w/2)-8,112,txColor,VESA_LIGHT_GREY,176);\par
00470 \par
00471 \par
00472     setPosX(16);\par
00473     setPosY(16*3);\par
00474     {\cf18 char} infoOS[512];\par
00475     substr(infoOS, format_string({\cf22 "OS: %s"},OSNAME), 0, (maxStrLine/2)-2);\par
00476     tty_puts_color(infoOS,txColor, bgColor);\par
00477 \par
00478     setPosX(16);\par
00479     setPosY(16*4);\par
00480     {\cf18 char} infoCPU[512];\par
00481     substr(infoCPU, format_string({\cf22 "CPU: %s"},getNameBrand()), 0, (maxStrLine/2)-2);\par
00482     tty_puts_color(infoCPU,txColor, bgColor);\par
00483 \par
00484     setPosX(16);\par
00485     setPosY(16*5);\par
00486     {\cf18 char} infoRAM[512];\par
00487     substr(infoRAM, strcat(format_string({\cf22 "RAM: %d"},(getInstalledRam())),{\cf22 " kb"}), 0, (maxStrLine/2)-2);\par
00488     tty_puts_color(infoRAM,txColor, bgColor);\par
00489 \par
00490     setPosX(16);\par
00491     setPosY(16*6);\par
00492     {\cf18 char} infoVideo[512];\par
00493     substr(infoVideo, {\cf22 "Video: Basic video adapter (Unknown)"}, 0, (maxStrLine/2)-2);\par
00494     tty_puts_color(infoVideo,txColor, bgColor);\par
00495 \par
00496     setPosX(16);\par
00497     setPosY(16*7);\par
00498     {\cf18 char} infoDisplay[512];\par
00499     substr(infoDisplay, (format_string({\cf22 "Display: %s"},Display,w,h)), 0, (maxStrLine/2)-2);\par
00500     tty_puts_color(infoDisplay,txColor, bgColor);\par
00501 \}\par
00502 \par
00503 {\cf18 void} footBar({\cf18 char}* text)\{\par
00504     drawRect(0,h-16,1024,h,VESA_LIGHT_GREY);\par
00505     setPosX(0);\par
00506     setPosY(h-16);\par
00507     tty_puts_color(text,VESA_BLACK, VESA_LIGHT_GREY);\par
00508 \}\par
00509 \par
00510 {\cf18 void} cleanWorkSpace({\cf18 int} color)\{\par
00511     drawRect(8,16*(3),ww,wh,color);\par
00512 \}\par
00513 \par
00514 {\cf18 void} createMenuBox({\cf18 char}* title)\{\par
00515     TUIMode = TUI_MENU_BOX;\par
00516     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'EE\'F2\'F1\'F2\'F3\'EF\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 \'E2 \'E4\'EB\'E8\'ED\'F3 (left/right)}\par
00517     uint32_t padding_w = maxStrLine/4; {\cf20 // 320 - 10 \'F1\'E8\'EC\'E2\'EE\'EB\'E0; 1024 - 32 \'F1\'E8\'EC\'E2\'EE\'EB\'E0}\par
00518     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'EE\'F2\'F1\'F2\'F3\'EF\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 \'E2 \'E2\'FB\'F1\'EE\'F2\'F3 (up)}\par
00519     uint32_t padding_h = maxHeightLine/4;\par
00520     {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'F0\'E0\'E7\'EC\'E5\'F0\'FB \'EA\'EE\'F0\'EE\'E1\'EA\'E8}\par
00521     uint32_t boxWidth = ww-((padding_w*8)*2);\par
00522     uint32_t boxHeight = wh-((padding_h*16));      {\cf20 // ? \'D0\'E5\'E0\'EB\'E8\'E7\'EE\'E2\'E0\'EB \'E0 \'E7\'E0\'F7\'E5\'EC, \'E7\'E0\'E1\'FB\'EB :)}\par
00523     uint32_t maxListBox = boxHeight;\par
00524     {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'EC\'E0\'EA\'F1\'E8\'EC\'E0\'EB\'FC\'ED\'EE\'E5 \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'EE\'E2 \'ED\'E0 \'F1\'F2\'F0\'EE\'EA\'F3 \'E2 \'EA\'EE\'F0\'EE\'E1\'EA\'E5}\par
00525     uint32_t maxStrLineBox = (boxWidth/8)-4; {\cf20 // 60 - \'F1\'E8\'EC\'E2\'EE\'EB\'EE\'E2 \'EF\'F0\'E8 1024}\par
00526 \par
00527     {\cf20 // \'C2\'FB\'F1\'EE\'F2\'E0 \'E1\'EE\'EA\'F1\'E0 \'E4\'EB\'FF \'EC\'E5\'ED\'FE}\par
00528     maxItemScreen = (maxListMenu >10?10:maxListMenu);\par
00529 \par
00530     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'EC\'E0\'EA\'F1\'E8\'EC\'E0\'EB\'FC\'ED\'FB\'F5 \'F1\'F2\'F0\'E0\'ED\'E8\'F6 \'ED\'E0\'E2\'E8\'E3\'E0\'F6\'E8\'E9}\par
00531     {\cf19 if} (maxListMenu > 0)\{\par
00532         pageMenuMax = (maxListMenu/maxItemScreen)+1;\par
00533     \} {\cf19 else} \{\par
00534         pageMenuMax = 1;\par
00535     \}\par
00536 \par
00537     {\cf20 // \'CE\'E1\'F0\'E5\'E7\'E0\'E5\'EC \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'EA}\par
00538     substr(title, title, 0, maxStrLineBox);\par
00539 \par
00540     {\cf20 // \'D0\'E8\'F1\'F3\'E5\'EC \'E1\'EE\'EA\'F1 \'E8 \'F3\'E7\'EE\'F0\'F7\'E8\'EA\'E8}\par
00541     drawRect(8+(padding_w*8),16*(8+padding_h),boxWidth,16*(6+maxItemScreen),TUI_BASE_COLOR_MAIN);\par
00542     drawRectLine(8+(padding_w*8),16*(8+padding_h),boxWidth,16*(6+maxItemScreen),TUI_TEXT_COLOR_BODY,TUI_BASE_COLOR_MAIN,15);\par
00543 \par
00544     {\cf20 // \'CE\'F2\'EE\'E1\'F0\'E0\'E6\'E0\'E5\'EC \'F2\'E8\'F2\'EB}\par
00545     setPosX(((3+padding_w)*8));\par
00546     setPosY(16*((10)+padding_h));\par
00547     tty_puts_color(title,TUI_TEXT_COLOR_BODY,TUI_BASE_COLOR_MAIN);\par
00548 \par
00549     {\cf20 // \'D0\'E8\'F1\'F3\'E5\'EC \'EF\'F3\'ED\'EA\'F2\'FB \'EC\'E5\'ED\'FE}\par
00550     {\cf19 for} ({\cf18 int} x = pageMenuCurrent*maxItemScreen; x < maxItemScreen; x++)\{\par
00551         setPosX(((3+padding_w)*8));\par
00552         setPosY(16*((12+x)+padding_h));\par
00553         substr(listMenu[x], listMenu[x], 0, maxStrLineBox);\par
00554         {\cf19 if} (currentList == x)\{\par
00555             drawRect(((3+padding_w)*8),16*((12+x)+padding_h),maxStrLineBox*8, 16,TUI_BASE_COLOR_ITEM);\par
00556             tty_puts_color(listMenu[x],TUI_TEXT_COLOR_ITEM,TUI_BASE_COLOR_ITEM);\par
00557             {\cf20 // \'CF\'EE\'EC\'E5\'F7\'E0\'E5\'EC \'F7\'F2\'EE, \'EE\'ED \'FF\'E2\'EB\'FF\'E5\'F2\'F1\'FF \'F2\'E5\'EA\'F3\'F9\'E8\'EC}\par
00558         \} {\cf19 else} \{\par
00559             tty_puts_color(listMenu[x],TUI_TEXT_COLOR_BODY,TUI_BASE_COLOR_MAIN);\par
00560         \}\par
00561     \}\par
00562 \}\par
00563 \par
00567 {\cf18 void} createErrorBox({\cf18 char}* title,{\cf18 char}* text)\{\par
00568     {\cf20 // \'CF\'E5\'F0\'E5\'E2\'EE\'E4\'E8\'EC TUI \'E2 \'F0\'E5\'E6\'E8\'EC ERRORBOX}\par
00569     {\cf20 //TUIMode = TUI_ERROR_BOX;}\par
00570     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'EE\'F2\'F1\'F2\'F3\'EF\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 \'E2 \'E4\'EB\'E8\'ED\'F3 (left/right)}\par
00571     uint32_t padding_w = maxStrLine/4; {\cf20 // 320 - 10 \'F1\'E8\'EC\'E2\'EE\'EB\'E0; 1024 - 32 \'F1\'E8\'EC\'E2\'EE\'EB\'E0}\par
00572     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'EE\'F2\'F1\'F2\'F3\'EF\'E0 \'FD\'EA\'F0\'E0\'ED\'E0 \'E2 \'E2\'FB\'F1\'EE\'F2\'F3 (up)}\par
00573     uint32_t padding_h = maxHeightLine/4;\par
00574     {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'F0\'E0\'E7\'EC\'E5\'F0\'FB \'EA\'EE\'F0\'EE\'E1\'EA\'E8}\par
00575     uint32_t boxWidth = ww-((padding_w*8)*2);\par
00576     uint32_t boxHeight = wh-((padding_h));      {\cf20 // ? \'D0\'E5\'E0\'EB\'E8\'E7\'EE\'E2\'E0\'EB \'E0 \'E7\'E0\'F7\'E5\'EC, \'E7\'E0\'E1\'FB\'EB :)}\par
00577     {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'EC\'E0\'EA\'F1\'E8\'EC\'E0\'EB\'FC\'ED\'EE\'E5 \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'F1\'E8\'EC\'E2\'EE\'EB\'EE\'E2 \'ED\'E0 \'F1\'F2\'F0\'EE\'EA\'F3 \'E2 \'EA\'EE\'F0\'EE\'E1\'EA\'E5}\par
00578     uint32_t maxStrLineBox = (boxWidth/8)-4; {\cf20 // 60 - \'F1\'E8\'EC\'E2\'EE\'EB\'EE\'E2 \'EF\'F0\'E8 1024}\par
00579     {\cf20 // maxHeightLine}\par
00580     {\cf20 // \'C2\'FB\'F1\'EE\'F2\'E0 \'E1\'EE\'EA\'F1\'E0 \'E4\'EB\'FF \'F2\'E5\'EA\'F1\'E0}\par
00581     uint32_t lineHeight = 1;\par
00582     {\cf20 // \'CE\'E1\'F0\'E5\'E7\'E0\'E5\'EC \'F1\'F2\'F0\'EE\'EA\'F3 \'E4\'EE \'EC\'E0\'EA\'F1\'E8\'EC\'E0\'EB\'FC\'ED\'EE\'E3\'EE \'EB\'E8\'EC\'E8\'F2\'E0 \'ED\'E0 \'F1\'F2\'F0\'EE\'EA\'F3}\par
00583     substr(title, title, 0, maxStrLineBox);\par
00584     {\cf20 // \'C5\'F1\'EB\'E8 \'F2\'E5\'EA\'F1\'F2 \'E4\'EB\'E8\'ED\'E5\'E5 \'E4\'EE\'EF\'F3\'F1\'F2\'E8\'EC\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8}\par
00585     {\cf19 if} (strlen(text) > maxStrLineBox)\{\par
00586         lineHeight = maxStrLineBox/strlen(text);\par
00587     \}\par
00588     {\cf20 // \'C5\'F1\'EB\'E8 \'ED\'E0 \'FD\'EA\'F0\'E0\'ED \'E2\'F1\'E5 \'ED\'E5 \'EF\'EE\'EC\'E5\'F9\'E0\'E5\'F2\'F1\'FF}\par
00589     {\cf19 if} (maxHeightLine < lineHeight)\{\par
00590         lineHeight = maxHeightLine;\par
00591     \}\par
00592     {\cf19 if} (strlen(text) > maxStrLineBox)\{\par
00593         {\cf20 // \'CE\'E1\'FA\'FF\'E2\'E8\'EC \'EF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'F3\'FE \'E4\'EB\'FF \'E4\'E5\'EB\'E5\'ED\'E8\'FF \'F2\'E5\'EA\'F1\'F2\'E0}\par
00594         {\cf18 char} strings[lineHeight][maxStrLineBox+1];\par
00595         {\cf19 for} ({\cf18 int} i = 0;i < lineHeight;i++)\{\par
00596             substr(title, title, 0+(i*maxStrLineBox), ((i+1)*maxStrLineBox));\par
00597         \}\par
00598     \}\par
00599     {\cf20 // \'D0\'E8\'F1\'F3\'E5\'EC \'EA\'EE\'F0\'EE\'E1\'EA\'F3}\par
00600     drawRect(8+(padding_w*8),16*(8+padding_h),boxWidth,16*(6+lineHeight),TUI_BASE_COLOR_ERROR);\par
00601     drawRectLine(8+(padding_w*8),16*(8+padding_h),boxWidth,16*(6+lineHeight),TUI_TEXT_COLOR_ERROR,TUI_BASE_COLOR_ERROR,19);\par
00602     {\cf20 // \'CF\'EE\'EA\'E0\'E7\'FB\'E2\'E0\'E5\'EC \'F2\'E8\'F2\'EB \'E8 \'F1\'F7\'E8\'F2\'E0\'E5\'EC \'F0\'E0\'E2\'ED\'E5\'ED\'E8\'E5 \'EF\'EE \'F6\'E5\'ED\'F2\'F0\'F3}\par
00603     uint32_t centerTitle = (maxStrLineBox/2)-(strlen(title)/2);\par
00604 \par
00605     setPosX(((3+centerTitle+padding_w)*8));\par
00606     setPosY(16*((10)+padding_h));\par
00607     tty_puts_color(title,TUI_TEXT_COLOR_ERROR,TUI_BASE_COLOR_ERROR);\par
00608 \par
00609     {\cf20 // \'D0\'E8\'F1\'F3\'E5\'EC \'E1\'F3\'EA\'EE\'E2\'EA\'E8}\par
00610     {\cf19 if} (strlen(text) > maxStrLineBox)\{\par
00611         {\cf19 for} ({\cf18 int} i = 0;i < lineHeight;i++)\{\par
00612             {\cf20 //substr(title, title, 0+(i*maxStrLineBox), ((i+1)*maxStrLineBox));}\par
00613 \par
00614         \}\par
00615     \} {\cf19 else} \{\par
00616         setPosX(((3+padding_w)*8));\par
00617         setPosY(16*((12)+padding_h));\par
00618         tty_puts_color(text,TUI_TEXT_COLOR_ERROR,TUI_BASE_COLOR_ERROR);\par
00619     \}\par
00620 \}\par
00621 \par
00622 {\cf18 void} updateLoop()\{\par
00623     {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'EF\'EE\'F1\'EB\'E5\'E4\'ED\'E8\'FE \'EF\'EE\'E7\'E8\'F6\'E8\'FE \'EA\'F3\'F0\'F1\'EE\'F0\'E0}\par
00624     oldPosX = getPosX();\par
00625     oldPosY = getPosY();\par
00626 \par
00627     {\cf20 // \'C2\'FB\'E2\'EE\'E4\'E8\'EC \'ED\'E0\'E6\'E0\'F2\'F3\'FE \'EA\'ED\'EE\'EF\'EA\'F3 \'E2\'EE \'E2\'F2\'EE\'F0\'EE\'E9 \'EA\'EE\'EB\'EE\'ED\'EA\'E5 \'E2 \'F8\'E0\'EF\'EA\'E5}\par
00628 \par
00629      {\cf17 struct }synapse_time TIME = get_time();\par
00630     {\cf20 //char* TIME = "10/10/2022 12:23";}\par
00631     setPosX((maxStrLine-18)*8);\par
00632     setPosY(0);\par
00633     tty_setcolor(txColor);\par
00634     drawRect((maxStrLine-18)*8,0,20*8, 15,TUI_BASE_COLOR_HEAD);\par
00635     {\cf20 //#if CLOCK_FORMAT==1}\par
00636     tty_printf({\cf22 "%d/%d/%d %d:%d:%d"}, TIME.day, TIME.month, TIME.year, TIME.hours, TIME.minutes, TIME.seconds);\par
00637     {\cf20 /* CAUSES PageFault}\par
00638 {\cf20     #elif CLOCK_FORMAT==2}\par
00639 {\cf20     tty_printf("%d %s %d %d:%d:%d", TIME.day, months_list[TIME.month-1], TIME.year, TIME.hours, TIME.minutes, TIME.seconds);}\par
00640 {\cf20     #endif}\par
00641 {\cf20     */}\par
00642     {\cf20 //tty_printf("%d",keyLastInset());}\par
00643     {\cf19 if} (keyLastInset() != 0)\{\par
00644         qemu_log({\cf22 "Last key ID: %d"},keyLastInset());\par
00645     \}\par
00646     {\cf20 // \'C2\'EE\'E7\'F0\'E0\'F9\'E0\'E5\'EC \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'EE\'E1\'F0\'E0\'F2\'ED\'EE}\par
00647     setPosX(oldPosX);\par
00648     setPosY(oldPosY);\par
00649 \}\par
00650 \par
00651 {\cf18 bool} tui()\{\par
00652     int32_t i = 0;\par
00653     w = getWidthScreen();\par
00654     h = getHeightScreen();\par
00655     ww = w-16;\par
00656     wh = h-(80);\par
00657     maxHeightLine = wh/16;\par
00658     maxStrLine = (w/8)-2;\par
00659     changeStageKeyboard(2); {\cf20 // \'C1\'EB\'EE\'EA\'E8\'F0\'F3\'E5\'EC \'ED\'E0\'E6\'E0\'F2\'E8\'E5 \'E8 \'EE\'F2\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'E5 \'EA\'ED\'EE\'EF\'EE\'EA}\par
00660     testDisplay(w,h);       {\cf20 // \'D2\'E5\'F1\'F2\'E8\'F0\'F3\'E5\'EC \'EC\'EE\'ED\'E8\'F2\'EE\'F0 \'ED\'E0 \'E2\'E0\'EB\'E8\'E4\'ED\'EE\'F1\'F2\'FC (\'D1\'EA\'EE\'F0\'E5\'E5 \'E2\'F1\'E5\'E3\'EE \'EE\'F1\'F2\'E0\'ED\'E5\'F2\'FC\'F1\'FF \'F2\'EE\'EB\'FC\'EA\'EE \'E4\'EB\'FF \'E4\'E5\'F2\'E5\'EA\'F2\'E0, \'EA\'EE\'E3\'E4\'E0 \'F0\'E5\'E7\'E8\'ED\'E0 \'E1\'F3\'E4\'E5\'F2 \'E3\'EE\'F2\'EE\'E2\'E0)}\par
00661     bgColor = TUI_BASE_COLOR_BODY;\par
00662     txColor = TUI_TEXT_COLOR_BODY;\par
00663     tty_printf({\cf22 "TUI Starting...\\n"});\par
00664     TUIMode = TUI_DEFAULT;\par
00665     lastUpdate = timer_get_ticks()+3;\par
00666     {\cf19 while}(1)\{\par
00667         {\cf19 if} (timer_get_ticks() < lastUpdate)\{\par
00668             {\cf20 // \'CF\'F0\'EE\'F1\'F2\'EE \'E8\'E3\'ED\'EE\'F0\'E8\'F0\'F3\'E5\'EC \'F0\'E0\'E1\'EE\'F2\'F3 \'F6\'E8\'EA\'EB\'E0}\par
00669             {\cf19 continue};\par
00670         \}\par
00671         {\cf20 // \'C2\'FB\'EF\'EE\'EB\'ED\'FF\'E5\'EC \'F6\'E8\'EA\'EB}\par
00672         updateLoop();\par
00673         {\cf19 if} (TUIMode == TUI_ERROR_BOX)\{\par
00674             {\cf20 // \'D0\'E5\'E6\'E8\'EC \'EE\'E1\'F0\'E0\'E1\'EE\'F2\'EA\'E8 \'F4\'E0\'F2\'E0\'EB\'FC\'ED\'EE\'E3\'EE \'EE\'EA\'ED\'E0}\par
00675         \} {\cf19 else} {\cf19 if} (TUIMode == TUI_MENU_BOX)\{\par
00676              changeStageKeyboard(0);\par
00677             {\cf19 if} (keyLastInset() == 72)\{\par
00678                 currentList--;\par
00679                 {\cf20 // \'CD\'E0\'E6\'E0\'F2\'E0 \'EA\'EB\'E0\'E2\'E8\'F8\'E0 \'E2\'E2\'E5\'F0\'F5}\par
00680                 {\cf19 if} (currentList < 0)\{\par
00681                     currentList = maxListMenu-1;\par
00682                 \}\par
00683                 createMenuBox({\cf22 "Base menu:"});\par
00684             \} {\cf19 else} {\cf19 if} (keyLastInset() == 80)\{\par
00685                 {\cf20 // \'CD\'E0\'E6\'E0\'F2\'E0 \'EA\'EB\'E0\'E2\'E8\'F8\'E0 \'E2\'ED\'E8\'E7}\par
00686                 currentList++;\par
00687                 {\cf19 if} (currentList >= maxListMenu)\{\par
00688                     currentList = 0;\par
00689                 \}\par
00690                 createMenuBox({\cf22 "Base menu:"});\par
00691             \} {\cf19 else} {\cf19 if} (keyLastInset() == 1)\{\par
00692                 {\cf20 // \'CD\'E0\'E6\'E0\'F2\'E0 \'EA\'EB\'E0\'E2\'E8\'F8\'E0 ESC}\par
00693                 cleanWorkSpace(TUI_BASE_COLOR_BODY);\par
00694                 TUIMode = TUI_DEFAULT;\par
00695             \}\par
00696             lastUpdate = timer_get_ticks()+5;\par
00697             {\cf19 continue};\par
00698         \} {\cf19 else} {\cf19 if} (keyLastInset() == 91)\{\par
00699             cleanWorkSpace(TUI_BASE_COLOR_BODY);\par
00700             listMenu[0] = {\cf22 "Info PC"};\par
00701             listMenu[1] = {\cf22 "List PCI-Devices"};\par
00702             listMenu[2] = {\cf22 "Show ErrorBox"};\par
00703             listMenu[3] = {\cf22 "Exit to Console"};\par
00704             listMenu[4] = {\cf22 "Reboot"};\par
00705             listMenu[5] = {\cf22 "Shutdown"};\par
00706             listMenu[6] = {\cf22 "6Info PC"};\par
00707             listMenu[7] = {\cf22 "7List PCI-Devices"};\par
00708             listMenu[8] = {\cf22 "8Show ErrorBox"};\par
00709             listMenu[9] = {\cf22 "9Exit to Console"};\par
00710             listMenu[10] = {\cf22 "10Reboot"};\par
00711             listMenu[11] = {\cf22 "11Shutdown"};\par
00712             maxListMenu = 12;\par
00713             createMenuBox({\cf22 "Base menu:"});\par
00714             qemu_log({\cf22 "PAGE -> Items: %d/%d -> ScreenMax: %d"},currentList,maxListMenu,maxItemScreen);\par
00715             {\cf20 //createErrorBox("Error","Test Fatal Screen");}\par
00716             {\cf20 //sleep_ms(100);}\par
00717             {\cf20 //cleanWorkSpace(TUI_BASE_COLOR_BODY);}\par
00718             {\cf20 //break;}\par
00719         \} {\cf19 else} {\cf19 if} (keyLastInset() == 88)\{\par
00720             {\cf20 // \'CD\'E0\'E6\'E0\'F2\'E0 \'EA\'EB\'E0\'E2\'E8\'F8\'E0 F12 - \'E7\'E0\'EA\'F0\'EE\'E5\'EC TUI \'E8 \'E2\'E5\'F0\'ED\'E5\'EC \'F3\'EF\'F0\'E0\'E2\'EB\'E5\'ED\'E8\'E5 shell()}\par
00721             createErrorBox({\cf22 "Error in TUI module. "},{\cf22 "You will be returned to the console in 1 seconds."});\par
00722             sleep_ms(1000);\par
00723             bgColor = VESA_BLACK;\par
00724             cleanScreen({\cf17 true});\par
00725             {\cf19 break};\par
00726         \} {\cf19 else} \{\par
00727             {\cf19 if} (i == 0)\{\par
00728                 i = 1;\par
00729                 {\cf20 // \'D7\'E8\'F1\'F2\'E8\'EC \'FD\'EA\'F0\'E0\'ED}\par
00730                 cleanScreen({\cf17 true});\par
00731                 {\cf20 // \'D0\'E8\'F1\'F3\'E5\'EC \'EE\'E1\'E2\'EE\'E4\'EA\'F3}\par
00732                 {\cf20 //drawRectLine(0,0,w,h,txColor,VESA_LIGHT_GREY,178);}\par
00733                 {\cf20 // \'C2\'FB\'E2\'EE\'E4\'E8\'EC \'F8\'E0\'EF\'EA\'F3}\par
00734                 headBar();\par
00735                 cleanWorkSpace(TUI_BASE_COLOR_BODY);\par
00736 \par
00737                 {\cf20 // \'C2\'FB\'E2\'EE\'E4\'E8\'EC \'ED\'EE\'E3\'E8}\par
00738                 footBar({\cf22 " Press 'Start' to open menu"});\par
00739                 {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'EF\'EE\'E7\'E8\'F6\'E8\'E8 \'E4\'EB\'FF \'EF\'E5\'F7\'E0\'F2\'E8}\par
00740                 setPosX(8);\par
00741                 setPosY(16*8);\par
00742                 changeStageKeyboard(1);\par
00743             \}\par
00744 \par
00745             {\cf20 // \'CE\'E1\'ED\'EE\'E2\'EB\'FF\'E5\'EC \'F2\'E0\'E9\'EC\'E5\'F0, \'E4\'EB\'FF \'EF\'E5\'F0\'E5\'EE\'F2\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF}\par
00746             lastUpdate = timer_get_ticks()+3;\par
00747         \}\par
00748     \}\par
00749     {\cf19 return} {\cf17 true};\par
00750 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
vgafnt.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/io/vgafnt.c}
{\xe \v kernel/src/io/vgafnt.c}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdint.h>}\par
00002 \par
00003 int32_t vgafnt_size = 4096;\par
00004 \par
00005 uint8_t vgafnt[] = \{\par
00006     0x00, {\cf20 // 0b00000000}\par
00007     0x00, {\cf20 // 0b00000000}\par
00008     0x00, {\cf20 // 0b00000000}\par
00009     0x00, {\cf20 // 0b00000000}\par
00010     0x00, {\cf20 // 0b00000000}\par
00011     0x00, {\cf20 // 0b00000000}\par
00012     0x00, {\cf20 // 0b00000000}\par
00013     0x00, {\cf20 // 0b00000000}\par
00014     0x00, {\cf20 // 0b00000000}\par
00015     0x00, {\cf20 // 0b00000000}\par
00016     0x00, {\cf20 // 0b00000000}\par
00017     0x00, {\cf20 // 0b00000000}\par
00018     0x00, {\cf20 // 0b00000000}\par
00019     0x00, {\cf20 // 0b00000000}\par
00020     0x00, {\cf20 // 0b00000000}\par
00021     0x00, {\cf20 // 0b00000000}\par
00022     0x00, {\cf20 // 0b00000000}\par
00023     0x00, {\cf20 // 0b00000000}\par
00024     0x7e, {\cf20 // 0b01111110}\par
00025     0x81, {\cf20 // 0b10000001}\par
00026     0xa5, {\cf20 // 0b10100101}\par
00027     0x81, {\cf20 // 0b10000001}\par
00028     0x81, {\cf20 // 0b10000001}\par
00029     0xbd, {\cf20 // 0b10111101}\par
00030     0x99, {\cf20 // 0b10011001}\par
00031     0x81, {\cf20 // 0b10000001}\par
00032     0x81, {\cf20 // 0b10000001}\par
00033     0x7e, {\cf20 // 0b01111110}\par
00034     0x00, {\cf20 // 0b00000000}\par
00035     0x00, {\cf20 // 0b00000000}\par
00036     0x00, {\cf20 // 0b00000000}\par
00037     0x00, {\cf20 // 0b00000000}\par
00038     0x00, {\cf20 // 0b00000000}\par
00039     0x00, {\cf20 // 0b00000000}\par
00040     0x7e, {\cf20 // 0b01111110}\par
00041     0xff, {\cf20 // 0b11111111}\par
00042     0xdb, {\cf20 // 0b11011011}\par
00043     0xff, {\cf20 // 0b11111111}\par
00044     0xff, {\cf20 // 0b11111111}\par
00045     0xc3, {\cf20 // 0b11000011}\par
00046     0xe7, {\cf20 // 0b11100111}\par
00047     0xff, {\cf20 // 0b11111111}\par
00048     0xff, {\cf20 // 0b11111111}\par
00049     0x7e, {\cf20 // 0b01111110}\par
00050     0x00, {\cf20 // 0b00000000}\par
00051     0x00, {\cf20 // 0b00000000}\par
00052     0x00, {\cf20 // 0b00000000}\par
00053     0x00, {\cf20 // 0b00000000}\par
00054     0x00, {\cf20 // 0b00000000}\par
00055     0x00, {\cf20 // 0b00000000}\par
00056     0x00, {\cf20 // 0b00000000}\par
00057     0x00, {\cf20 // 0b00000000}\par
00058     0x6c, {\cf20 // 0b01101100}\par
00059     0xfe, {\cf20 // 0b11111110}\par
00060     0xfe, {\cf20 // 0b11111110}\par
00061     0xfe, {\cf20 // 0b11111110}\par
00062     0xfe, {\cf20 // 0b11111110}\par
00063     0x7c, {\cf20 // 0b01111100}\par
00064     0x38, {\cf20 // 0b00111000}\par
00065     0x10, {\cf20 // 0b00010000}\par
00066     0x00, {\cf20 // 0b00000000}\par
00067     0x00, {\cf20 // 0b00000000}\par
00068     0x00, {\cf20 // 0b00000000}\par
00069     0x00, {\cf20 // 0b00000000}\par
00070     0x00, {\cf20 // 0b00000000}\par
00071     0x00, {\cf20 // 0b00000000}\par
00072     0x00, {\cf20 // 0b00000000}\par
00073     0x00, {\cf20 // 0b00000000}\par
00074     0x10, {\cf20 // 0b00010000}\par
00075     0x38, {\cf20 // 0b00111000}\par
00076     0x7c, {\cf20 // 0b01111100}\par
00077     0xfe, {\cf20 // 0b11111110}\par
00078     0x7c, {\cf20 // 0b01111100}\par
00079     0x38, {\cf20 // 0b00111000}\par
00080     0x10, {\cf20 // 0b00010000}\par
00081     0x00, {\cf20 // 0b00000000}\par
00082     0x00, {\cf20 // 0b00000000}\par
00083     0x00, {\cf20 // 0b00000000}\par
00084     0x00, {\cf20 // 0b00000000}\par
00085     0x00, {\cf20 // 0b00000000}\par
00086     0x00, {\cf20 // 0b00000000}\par
00087     0x00, {\cf20 // 0b00000000}\par
00088     0x00, {\cf20 // 0b00000000}\par
00089     0x18, {\cf20 // 0b00011000}\par
00090     0x3c, {\cf20 // 0b00111100}\par
00091     0x3c, {\cf20 // 0b00111100}\par
00092     0xe7, {\cf20 // 0b11100111}\par
00093     0xe7, {\cf20 // 0b11100111}\par
00094     0xe7, {\cf20 // 0b11100111}\par
00095     0x18, {\cf20 // 0b00011000}\par
00096     0x18, {\cf20 // 0b00011000}\par
00097     0x3c, {\cf20 // 0b00111100}\par
00098     0x00, {\cf20 // 0b00000000}\par
00099     0x00, {\cf20 // 0b00000000}\par
00100     0x00, {\cf20 // 0b00000000}\par
00101     0x00, {\cf20 // 0b00000000}\par
00102     0x00, {\cf20 // 0b00000000}\par
00103     0x00, {\cf20 // 0b00000000}\par
00104     0x00, {\cf20 // 0b00000000}\par
00105     0x18, {\cf20 // 0b00011000}\par
00106     0x3c, {\cf20 // 0b00111100}\par
00107     0x7e, {\cf20 // 0b01111110}\par
00108     0xff, {\cf20 // 0b11111111}\par
00109     0xff, {\cf20 // 0b11111111}\par
00110     0x7e, {\cf20 // 0b01111110}\par
00111     0x18, {\cf20 // 0b00011000}\par
00112     0x18, {\cf20 // 0b00011000}\par
00113     0x3c, {\cf20 // 0b00111100}\par
00114     0x00, {\cf20 // 0b00000000}\par
00115     0x00, {\cf20 // 0b00000000}\par
00116     0x00, {\cf20 // 0b00000000}\par
00117     0x00, {\cf20 // 0b00000000}\par
00118     0x00, {\cf20 // 0b00000000}\par
00119     0x00, {\cf20 // 0b00000000}\par
00120     0x00, {\cf20 // 0b00000000}\par
00121     0x00, {\cf20 // 0b00000000}\par
00122     0x00, {\cf20 // 0b00000000}\par
00123     0x00, {\cf20 // 0b00000000}\par
00124     0x18, {\cf20 // 0b00011000}\par
00125     0x3c, {\cf20 // 0b00111100}\par
00126     0x3c, {\cf20 // 0b00111100}\par
00127     0x18, {\cf20 // 0b00011000}\par
00128     0x00, {\cf20 // 0b00000000}\par
00129     0x00, {\cf20 // 0b00000000}\par
00130     0x00, {\cf20 // 0b00000000}\par
00131     0x00, {\cf20 // 0b00000000}\par
00132     0x00, {\cf20 // 0b00000000}\par
00133     0x00, {\cf20 // 0b00000000}\par
00134     0xff, {\cf20 // 0b11111111}\par
00135     0xff, {\cf20 // 0b11111111}\par
00136     0xff, {\cf20 // 0b11111111}\par
00137     0xff, {\cf20 // 0b11111111}\par
00138     0xff, {\cf20 // 0b11111111}\par
00139     0xff, {\cf20 // 0b11111111}\par
00140     0xe7, {\cf20 // 0b11100111}\par
00141     0xc3, {\cf20 // 0b11000011}\par
00142     0xc3, {\cf20 // 0b11000011}\par
00143     0xe7, {\cf20 // 0b11100111}\par
00144     0xff, {\cf20 // 0b11111111}\par
00145     0xff, {\cf20 // 0b11111111}\par
00146     0xff, {\cf20 // 0b11111111}\par
00147     0xff, {\cf20 // 0b11111111}\par
00148     0xff, {\cf20 // 0b11111111}\par
00149     0xff, {\cf20 // 0b11111111}\par
00150     0x00, {\cf20 // 0b00000000}\par
00151     0x00, {\cf20 // 0b00000000}\par
00152     0x00, {\cf20 // 0b00000000}\par
00153     0x00, {\cf20 // 0b00000000}\par
00154     0x00, {\cf20 // 0b00000000}\par
00155     0x3c, {\cf20 // 0b00111100}\par
00156     0x66, {\cf20 // 0b01100110}\par
00157     0x42, {\cf20 // 0b01000010}\par
00158     0x42, {\cf20 // 0b01000010}\par
00159     0x66, {\cf20 // 0b01100110}\par
00160     0x3c, {\cf20 // 0b00111100}\par
00161     0x00, {\cf20 // 0b00000000}\par
00162     0x00, {\cf20 // 0b00000000}\par
00163     0x00, {\cf20 // 0b00000000}\par
00164     0x00, {\cf20 // 0b00000000}\par
00165     0x00, {\cf20 // 0b00000000}\par
00166     0xff, {\cf20 // 0b11111111}\par
00167     0xff, {\cf20 // 0b11111111}\par
00168     0xff, {\cf20 // 0b11111111}\par
00169     0xff, {\cf20 // 0b11111111}\par
00170     0xff, {\cf20 // 0b11111111}\par
00171     0xc3, {\cf20 // 0b11000011}\par
00172     0x99, {\cf20 // 0b10011001}\par
00173     0xbd, {\cf20 // 0b10111101}\par
00174     0xbd, {\cf20 // 0b10111101}\par
00175     0x99, {\cf20 // 0b10011001}\par
00176     0xc3, {\cf20 // 0b11000011}\par
00177     0xff, {\cf20 // 0b11111111}\par
00178     0xff, {\cf20 // 0b11111111}\par
00179     0xff, {\cf20 // 0b11111111}\par
00180     0xff, {\cf20 // 0b11111111}\par
00181     0xff, {\cf20 // 0b11111111}\par
00182     0x00, {\cf20 // 0b00000000}\par
00183     0x00, {\cf20 // 0b00000000}\par
00184     0x1e, {\cf20 // 0b00011110}\par
00185     0xe, {\cf20 // 0b00001110}\par
00186     0x1a, {\cf20 // 0b00011010}\par
00187     0x32, {\cf20 // 0b00110010}\par
00188     0x78, {\cf20 // 0b01111000}\par
00189     0xcc, {\cf20 // 0b11001100}\par
00190     0xcc, {\cf20 // 0b11001100}\par
00191     0xcc, {\cf20 // 0b11001100}\par
00192     0xcc, {\cf20 // 0b11001100}\par
00193     0x78, {\cf20 // 0b01111000}\par
00194     0x00, {\cf20 // 0b00000000}\par
00195     0x00, {\cf20 // 0b00000000}\par
00196     0x00, {\cf20 // 0b00000000}\par
00197     0x00, {\cf20 // 0b00000000}\par
00198     0x00, {\cf20 // 0b00000000}\par
00199     0x00, {\cf20 // 0b00000000}\par
00200     0x3c, {\cf20 // 0b00111100}\par
00201     0x66, {\cf20 // 0b01100110}\par
00202     0x66, {\cf20 // 0b01100110}\par
00203     0x66, {\cf20 // 0b01100110}\par
00204     0x66, {\cf20 // 0b01100110}\par
00205     0x3c, {\cf20 // 0b00111100}\par
00206     0x18, {\cf20 // 0b00011000}\par
00207     0x7e, {\cf20 // 0b01111110}\par
00208     0x18, {\cf20 // 0b00011000}\par
00209     0x18, {\cf20 // 0b00011000}\par
00210     0x00, {\cf20 // 0b00000000}\par
00211     0x00, {\cf20 // 0b00000000}\par
00212     0x00, {\cf20 // 0b00000000}\par
00213     0x00, {\cf20 // 0b00000000}\par
00214     0x00, {\cf20 // 0b00000000}\par
00215     0x00, {\cf20 // 0b00000000}\par
00216     0x3f, {\cf20 // 0b00111111}\par
00217     0x33, {\cf20 // 0b00110011}\par
00218     0x3f, {\cf20 // 0b00111111}\par
00219     0x30, {\cf20 // 0b00110000}\par
00220     0x30, {\cf20 // 0b00110000}\par
00221     0x30, {\cf20 // 0b00110000}\par
00222     0x30, {\cf20 // 0b00110000}\par
00223     0x70, {\cf20 // 0b01110000}\par
00224     0xf0, {\cf20 // 0b11110000}\par
00225     0xe0, {\cf20 // 0b11100000}\par
00226     0x00, {\cf20 // 0b00000000}\par
00227     0x00, {\cf20 // 0b00000000}\par
00228     0x00, {\cf20 // 0b00000000}\par
00229     0x00, {\cf20 // 0b00000000}\par
00230     0x00, {\cf20 // 0b00000000}\par
00231     0x00, {\cf20 // 0b00000000}\par
00232     0x7f, {\cf20 // 0b01111111}\par
00233     0x63, {\cf20 // 0b01100011}\par
00234     0x7f, {\cf20 // 0b01111111}\par
00235     0x63, {\cf20 // 0b01100011}\par
00236     0x63, {\cf20 // 0b01100011}\par
00237     0x63, {\cf20 // 0b01100011}\par
00238     0x63, {\cf20 // 0b01100011}\par
00239     0x67, {\cf20 // 0b01100111}\par
00240     0xe7, {\cf20 // 0b11100111}\par
00241     0xe6, {\cf20 // 0b11100110}\par
00242     0xc0, {\cf20 // 0b11000000}\par
00243     0x00, {\cf20 // 0b00000000}\par
00244     0x00, {\cf20 // 0b00000000}\par
00245     0x00, {\cf20 // 0b00000000}\par
00246     0x00, {\cf20 // 0b00000000}\par
00247     0x00, {\cf20 // 0b00000000}\par
00248     0x00, {\cf20 // 0b00000000}\par
00249     0x18, {\cf20 // 0b00011000}\par
00250     0x18, {\cf20 // 0b00011000}\par
00251     0xdb, {\cf20 // 0b11011011}\par
00252     0x3c, {\cf20 // 0b00111100}\par
00253     0xe7, {\cf20 // 0b11100111}\par
00254     0x3c, {\cf20 // 0b00111100}\par
00255     0xdb, {\cf20 // 0b11011011}\par
00256     0x18, {\cf20 // 0b00011000}\par
00257     0x18, {\cf20 // 0b00011000}\par
00258     0x00, {\cf20 // 0b00000000}\par
00259     0x00, {\cf20 // 0b00000000}\par
00260     0x00, {\cf20 // 0b00000000}\par
00261     0x00, {\cf20 // 0b00000000}\par
00262     0x00, {\cf20 // 0b00000000}\par
00263     0x80, {\cf20 // 0b10000000}\par
00264     0xc0, {\cf20 // 0b11000000}\par
00265     0xe0, {\cf20 // 0b11100000}\par
00266     0xf0, {\cf20 // 0b11110000}\par
00267     0xf8, {\cf20 // 0b11111000}\par
00268     0xfe, {\cf20 // 0b11111110}\par
00269     0xf8, {\cf20 // 0b11111000}\par
00270     0xf0, {\cf20 // 0b11110000}\par
00271     0xe0, {\cf20 // 0b11100000}\par
00272     0xc0, {\cf20 // 0b11000000}\par
00273     0x80, {\cf20 // 0b10000000}\par
00274     0x00, {\cf20 // 0b00000000}\par
00275     0x00, {\cf20 // 0b00000000}\par
00276     0x00, {\cf20 // 0b00000000}\par
00277     0x00, {\cf20 // 0b00000000}\par
00278     0x00, {\cf20 // 0b00000000}\par
00279     0x2, {\cf20 // 0b00000010}\par
00280     0x6, {\cf20 // 0b00000110}\par
00281     0xe, {\cf20 // 0b00001110}\par
00282     0x1e, {\cf20 // 0b00011110}\par
00283     0x3e, {\cf20 // 0b00111110}\par
00284     0xfe, {\cf20 // 0b11111110}\par
00285     0x3e, {\cf20 // 0b00111110}\par
00286     0x1e, {\cf20 // 0b00011110}\par
00287     0xe, {\cf20 // 0b00001110}\par
00288     0x6, {\cf20 // 0b00000110}\par
00289     0x2, {\cf20 // 0b00000010}\par
00290     0x00, {\cf20 // 0b00000000}\par
00291     0x00, {\cf20 // 0b00000000}\par
00292     0x00, {\cf20 // 0b00000000}\par
00293     0x00, {\cf20 // 0b00000000}\par
00294     0x00, {\cf20 // 0b00000000}\par
00295     0x00, {\cf20 // 0b00000000}\par
00296     0x18, {\cf20 // 0b00011000}\par
00297     0x3c, {\cf20 // 0b00111100}\par
00298     0x7e, {\cf20 // 0b01111110}\par
00299     0x18, {\cf20 // 0b00011000}\par
00300     0x18, {\cf20 // 0b00011000}\par
00301     0x18, {\cf20 // 0b00011000}\par
00302     0x7e, {\cf20 // 0b01111110}\par
00303     0x3c, {\cf20 // 0b00111100}\par
00304     0x18, {\cf20 // 0b00011000}\par
00305     0x00, {\cf20 // 0b00000000}\par
00306     0x00, {\cf20 // 0b00000000}\par
00307     0x00, {\cf20 // 0b00000000}\par
00308     0x00, {\cf20 // 0b00000000}\par
00309     0x00, {\cf20 // 0b00000000}\par
00310     0x00, {\cf20 // 0b00000000}\par
00311     0x00, {\cf20 // 0b00000000}\par
00312     0x66, {\cf20 // 0b01100110}\par
00313     0x66, {\cf20 // 0b01100110}\par
00314     0x66, {\cf20 // 0b01100110}\par
00315     0x66, {\cf20 // 0b01100110}\par
00316     0x66, {\cf20 // 0b01100110}\par
00317     0x66, {\cf20 // 0b01100110}\par
00318     0x66, {\cf20 // 0b01100110}\par
00319     0x00, {\cf20 // 0b00000000}\par
00320     0x66, {\cf20 // 0b01100110}\par
00321     0x66, {\cf20 // 0b01100110}\par
00322     0x00, {\cf20 // 0b00000000}\par
00323     0x00, {\cf20 // 0b00000000}\par
00324     0x00, {\cf20 // 0b00000000}\par
00325     0x00, {\cf20 // 0b00000000}\par
00326     0x00, {\cf20 // 0b00000000}\par
00327     0x00, {\cf20 // 0b00000000}\par
00328     0x7f, {\cf20 // 0b01111111}\par
00329     0xdb, {\cf20 // 0b11011011}\par
00330     0xdb, {\cf20 // 0b11011011}\par
00331     0xdb, {\cf20 // 0b11011011}\par
00332     0x7b, {\cf20 // 0b01111011}\par
00333     0x1b, {\cf20 // 0b00011011}\par
00334     0x1b, {\cf20 // 0b00011011}\par
00335     0x1b, {\cf20 // 0b00011011}\par
00336     0x1b, {\cf20 // 0b00011011}\par
00337     0x1b, {\cf20 // 0b00011011}\par
00338     0x00, {\cf20 // 0b00000000}\par
00339     0x00, {\cf20 // 0b00000000}\par
00340     0x00, {\cf20 // 0b00000000}\par
00341     0x00, {\cf20 // 0b00000000}\par
00342     0x00, {\cf20 // 0b00000000}\par
00343     0x7c, {\cf20 // 0b01111100}\par
00344     0xc6, {\cf20 // 0b11000110}\par
00345     0x60, {\cf20 // 0b01100000}\par
00346     0x38, {\cf20 // 0b00111000}\par
00347     0x6c, {\cf20 // 0b01101100}\par
00348     0xc6, {\cf20 // 0b11000110}\par
00349     0xc6, {\cf20 // 0b11000110}\par
00350     0x6c, {\cf20 // 0b01101100}\par
00351     0x38, {\cf20 // 0b00111000}\par
00352     0xc, {\cf20 // 0b00001100}\par
00353     0xc6, {\cf20 // 0b11000110}\par
00354     0x7c, {\cf20 // 0b01111100}\par
00355     0x00, {\cf20 // 0b00000000}\par
00356     0x00, {\cf20 // 0b00000000}\par
00357     0x00, {\cf20 // 0b00000000}\par
00358     0x00, {\cf20 // 0b00000000}\par
00359     0x00, {\cf20 // 0b00000000}\par
00360     0x00, {\cf20 // 0b00000000}\par
00361     0x00, {\cf20 // 0b00000000}\par
00362     0x00, {\cf20 // 0b00000000}\par
00363     0x00, {\cf20 // 0b00000000}\par
00364     0x00, {\cf20 // 0b00000000}\par
00365     0x00, {\cf20 // 0b00000000}\par
00366     0xfe, {\cf20 // 0b11111110}\par
00367     0xfe, {\cf20 // 0b11111110}\par
00368     0xfe, {\cf20 // 0b11111110}\par
00369     0xfe, {\cf20 // 0b11111110}\par
00370     0x00, {\cf20 // 0b00000000}\par
00371     0x00, {\cf20 // 0b00000000}\par
00372     0x00, {\cf20 // 0b00000000}\par
00373     0x00, {\cf20 // 0b00000000}\par
00374     0x00, {\cf20 // 0b00000000}\par
00375     0x00, {\cf20 // 0b00000000}\par
00376     0x18, {\cf20 // 0b00011000}\par
00377     0x3c, {\cf20 // 0b00111100}\par
00378     0x7e, {\cf20 // 0b01111110}\par
00379     0x18, {\cf20 // 0b00011000}\par
00380     0x18, {\cf20 // 0b00011000}\par
00381     0x18, {\cf20 // 0b00011000}\par
00382     0x7e, {\cf20 // 0b01111110}\par
00383     0x3c, {\cf20 // 0b00111100}\par
00384     0x18, {\cf20 // 0b00011000}\par
00385     0x7e, {\cf20 // 0b01111110}\par
00386     0x00, {\cf20 // 0b00000000}\par
00387     0x00, {\cf20 // 0b00000000}\par
00388     0x00, {\cf20 // 0b00000000}\par
00389     0x00, {\cf20 // 0b00000000}\par
00390     0x00, {\cf20 // 0b00000000}\par
00391     0x00, {\cf20 // 0b00000000}\par
00392     0x18, {\cf20 // 0b00011000}\par
00393     0x3c, {\cf20 // 0b00111100}\par
00394     0x7e, {\cf20 // 0b01111110}\par
00395     0x18, {\cf20 // 0b00011000}\par
00396     0x18, {\cf20 // 0b00011000}\par
00397     0x18, {\cf20 // 0b00011000}\par
00398     0x18, {\cf20 // 0b00011000}\par
00399     0x18, {\cf20 // 0b00011000}\par
00400     0x18, {\cf20 // 0b00011000}\par
00401     0x18, {\cf20 // 0b00011000}\par
00402     0x00, {\cf20 // 0b00000000}\par
00403     0x00, {\cf20 // 0b00000000}\par
00404     0x00, {\cf20 // 0b00000000}\par
00405     0x00, {\cf20 // 0b00000000}\par
00406     0x00, {\cf20 // 0b00000000}\par
00407     0x00, {\cf20 // 0b00000000}\par
00408     0x18, {\cf20 // 0b00011000}\par
00409     0x18, {\cf20 // 0b00011000}\par
00410     0x18, {\cf20 // 0b00011000}\par
00411     0x18, {\cf20 // 0b00011000}\par
00412     0x18, {\cf20 // 0b00011000}\par
00413     0x18, {\cf20 // 0b00011000}\par
00414     0x18, {\cf20 // 0b00011000}\par
00415     0x7e, {\cf20 // 0b01111110}\par
00416     0x3c, {\cf20 // 0b00111100}\par
00417     0x18, {\cf20 // 0b00011000}\par
00418     0x00, {\cf20 // 0b00000000}\par
00419     0x00, {\cf20 // 0b00000000}\par
00420     0x00, {\cf20 // 0b00000000}\par
00421     0x00, {\cf20 // 0b00000000}\par
00422     0x00, {\cf20 // 0b00000000}\par
00423     0x00, {\cf20 // 0b00000000}\par
00424     0x00, {\cf20 // 0b00000000}\par
00425     0x00, {\cf20 // 0b00000000}\par
00426     0x00, {\cf20 // 0b00000000}\par
00427     0x18, {\cf20 // 0b00011000}\par
00428     0xc, {\cf20 // 0b00001100}\par
00429     0xfe, {\cf20 // 0b11111110}\par
00430     0xc, {\cf20 // 0b00001100}\par
00431     0x18, {\cf20 // 0b00011000}\par
00432     0x00, {\cf20 // 0b00000000}\par
00433     0x00, {\cf20 // 0b00000000}\par
00434     0x00, {\cf20 // 0b00000000}\par
00435     0x00, {\cf20 // 0b00000000}\par
00436     0x00, {\cf20 // 0b00000000}\par
00437     0x00, {\cf20 // 0b00000000}\par
00438     0x00, {\cf20 // 0b00000000}\par
00439     0x00, {\cf20 // 0b00000000}\par
00440     0x00, {\cf20 // 0b00000000}\par
00441     0x00, {\cf20 // 0b00000000}\par
00442     0x00, {\cf20 // 0b00000000}\par
00443     0x30, {\cf20 // 0b00110000}\par
00444     0x60, {\cf20 // 0b01100000}\par
00445     0xfe, {\cf20 // 0b11111110}\par
00446     0x60, {\cf20 // 0b01100000}\par
00447     0x30, {\cf20 // 0b00110000}\par
00448     0x00, {\cf20 // 0b00000000}\par
00449     0x00, {\cf20 // 0b00000000}\par
00450     0x00, {\cf20 // 0b00000000}\par
00451     0x00, {\cf20 // 0b00000000}\par
00452     0x00, {\cf20 // 0b00000000}\par
00453     0x00, {\cf20 // 0b00000000}\par
00454     0x00, {\cf20 // 0b00000000}\par
00455     0x00, {\cf20 // 0b00000000}\par
00456     0x00, {\cf20 // 0b00000000}\par
00457     0x00, {\cf20 // 0b00000000}\par
00458     0x00, {\cf20 // 0b00000000}\par
00459     0x00, {\cf20 // 0b00000000}\par
00460     0xc0, {\cf20 // 0b11000000}\par
00461     0xc0, {\cf20 // 0b11000000}\par
00462     0xc0, {\cf20 // 0b11000000}\par
00463     0xfe, {\cf20 // 0b11111110}\par
00464     0x00, {\cf20 // 0b00000000}\par
00465     0x00, {\cf20 // 0b00000000}\par
00466     0x00, {\cf20 // 0b00000000}\par
00467     0x00, {\cf20 // 0b00000000}\par
00468     0x00, {\cf20 // 0b00000000}\par
00469     0x00, {\cf20 // 0b00000000}\par
00470     0x00, {\cf20 // 0b00000000}\par
00471     0x00, {\cf20 // 0b00000000}\par
00472     0x00, {\cf20 // 0b00000000}\par
00473     0x00, {\cf20 // 0b00000000}\par
00474     0x00, {\cf20 // 0b00000000}\par
00475     0x28, {\cf20 // 0b00101000}\par
00476     0x6c, {\cf20 // 0b01101100}\par
00477     0xfe, {\cf20 // 0b11111110}\par
00478     0x6c, {\cf20 // 0b01101100}\par
00479     0x28, {\cf20 // 0b00101000}\par
00480     0x00, {\cf20 // 0b00000000}\par
00481     0x00, {\cf20 // 0b00000000}\par
00482     0x00, {\cf20 // 0b00000000}\par
00483     0x00, {\cf20 // 0b00000000}\par
00484     0x00, {\cf20 // 0b00000000}\par
00485     0x00, {\cf20 // 0b00000000}\par
00486     0x00, {\cf20 // 0b00000000}\par
00487     0x00, {\cf20 // 0b00000000}\par
00488     0x00, {\cf20 // 0b00000000}\par
00489     0x00, {\cf20 // 0b00000000}\par
00490     0x10, {\cf20 // 0b00010000}\par
00491     0x38, {\cf20 // 0b00111000}\par
00492     0x38, {\cf20 // 0b00111000}\par
00493     0x7c, {\cf20 // 0b01111100}\par
00494     0x7c, {\cf20 // 0b01111100}\par
00495     0xfe, {\cf20 // 0b11111110}\par
00496     0xfe, {\cf20 // 0b11111110}\par
00497     0x00, {\cf20 // 0b00000000}\par
00498     0x00, {\cf20 // 0b00000000}\par
00499     0x00, {\cf20 // 0b00000000}\par
00500     0x00, {\cf20 // 0b00000000}\par
00501     0x00, {\cf20 // 0b00000000}\par
00502     0x00, {\cf20 // 0b00000000}\par
00503     0x00, {\cf20 // 0b00000000}\par
00504     0x00, {\cf20 // 0b00000000}\par
00505     0x00, {\cf20 // 0b00000000}\par
00506     0xfe, {\cf20 // 0b11111110}\par
00507     0xfe, {\cf20 // 0b11111110}\par
00508     0x7c, {\cf20 // 0b01111100}\par
00509     0x7c, {\cf20 // 0b01111100}\par
00510     0x38, {\cf20 // 0b00111000}\par
00511     0x38, {\cf20 // 0b00111000}\par
00512     0x10, {\cf20 // 0b00010000}\par
00513     0x00, {\cf20 // 0b00000000}\par
00514     0x00, {\cf20 // 0b00000000}\par
00515     0x00, {\cf20 // 0b00000000}\par
00516     0x00, {\cf20 // 0b00000000}\par
00517     0x00, {\cf20 // 0b00000000}\par
00518     0x00, {\cf20 // 0b00000000}\par
00519     0x00, {\cf20 // 0b00000000}\par
00520     0x00, {\cf20 // 0b00000000}\par
00521     0x00, {\cf20 // 0b00000000}\par
00522     0x00, {\cf20 // 0b00000000}\par
00523     0x00, {\cf20 // 0b00000000}\par
00524     0x00, {\cf20 // 0b00000000}\par
00525     0x00, {\cf20 // 0b00000000}\par
00526     0x00, {\cf20 // 0b00000000}\par
00527     0x00, {\cf20 // 0b00000000}\par
00528     0x00, {\cf20 // 0b00000000}\par
00529     0x00, {\cf20 // 0b00000000}\par
00530     0x00, {\cf20 // 0b00000000}\par
00531     0x00, {\cf20 // 0b00000000}\par
00532     0x00, {\cf20 // 0b00000000}\par
00533     0x00, {\cf20 // 0b00000000}\par
00534     0x00, {\cf20 // 0b00000000}\par
00535     0x00, {\cf20 // 0b00000000}\par
00536     0x18, {\cf20 // 0b00011000}\par
00537     0x3c, {\cf20 // 0b00111100}\par
00538     0x3c, {\cf20 // 0b00111100}\par
00539     0x3c, {\cf20 // 0b00111100}\par
00540     0x18, {\cf20 // 0b00011000}\par
00541     0x18, {\cf20 // 0b00011000}\par
00542     0x18, {\cf20 // 0b00011000}\par
00543     0x00, {\cf20 // 0b00000000}\par
00544     0x18, {\cf20 // 0b00011000}\par
00545     0x18, {\cf20 // 0b00011000}\par
00546     0x00, {\cf20 // 0b00000000}\par
00547     0x00, {\cf20 // 0b00000000}\par
00548     0x00, {\cf20 // 0b00000000}\par
00549     0x00, {\cf20 // 0b00000000}\par
00550     0x00, {\cf20 // 0b00000000}\par
00551     0x66, {\cf20 // 0b01100110}\par
00552     0x66, {\cf20 // 0b01100110}\par
00553     0x66, {\cf20 // 0b01100110}\par
00554     0x24, {\cf20 // 0b00100100}\par
00555     0x00, {\cf20 // 0b00000000}\par
00556     0x00, {\cf20 // 0b00000000}\par
00557     0x00, {\cf20 // 0b00000000}\par
00558     0x00, {\cf20 // 0b00000000}\par
00559     0x00, {\cf20 // 0b00000000}\par
00560     0x00, {\cf20 // 0b00000000}\par
00561     0x00, {\cf20 // 0b00000000}\par
00562     0x00, {\cf20 // 0b00000000}\par
00563     0x00, {\cf20 // 0b00000000}\par
00564     0x00, {\cf20 // 0b00000000}\par
00565     0x00, {\cf20 // 0b00000000}\par
00566     0x00, {\cf20 // 0b00000000}\par
00567     0x00, {\cf20 // 0b00000000}\par
00568     0x00, {\cf20 // 0b00000000}\par
00569     0x6c, {\cf20 // 0b01101100}\par
00570     0x6c, {\cf20 // 0b01101100}\par
00571     0xfe, {\cf20 // 0b11111110}\par
00572     0x6c, {\cf20 // 0b01101100}\par
00573     0x6c, {\cf20 // 0b01101100}\par
00574     0x6c, {\cf20 // 0b01101100}\par
00575     0xfe, {\cf20 // 0b11111110}\par
00576     0x6c, {\cf20 // 0b01101100}\par
00577     0x6c, {\cf20 // 0b01101100}\par
00578     0x00, {\cf20 // 0b00000000}\par
00579     0x00, {\cf20 // 0b00000000}\par
00580     0x00, {\cf20 // 0b00000000}\par
00581     0x00, {\cf20 // 0b00000000}\par
00582     0x18, {\cf20 // 0b00011000}\par
00583     0x18, {\cf20 // 0b00011000}\par
00584     0x7c, {\cf20 // 0b01111100}\par
00585     0xc6, {\cf20 // 0b11000110}\par
00586     0xc2, {\cf20 // 0b11000010}\par
00587     0xc0, {\cf20 // 0b11000000}\par
00588     0x7c, {\cf20 // 0b01111100}\par
00589     0x6, {\cf20 // 0b00000110}\par
00590     0x6, {\cf20 // 0b00000110}\par
00591     0x86, {\cf20 // 0b10000110}\par
00592     0xc6, {\cf20 // 0b11000110}\par
00593     0x7c, {\cf20 // 0b01111100}\par
00594     0x18, {\cf20 // 0b00011000}\par
00595     0x18, {\cf20 // 0b00011000}\par
00596     0x00, {\cf20 // 0b00000000}\par
00597     0x00, {\cf20 // 0b00000000}\par
00598     0x00, {\cf20 // 0b00000000}\par
00599     0x00, {\cf20 // 0b00000000}\par
00600     0x00, {\cf20 // 0b00000000}\par
00601     0x00, {\cf20 // 0b00000000}\par
00602     0xc2, {\cf20 // 0b11000010}\par
00603     0xc6, {\cf20 // 0b11000110}\par
00604     0xc, {\cf20 // 0b00001100}\par
00605     0x18, {\cf20 // 0b00011000}\par
00606     0x30, {\cf20 // 0b00110000}\par
00607     0x60, {\cf20 // 0b01100000}\par
00608     0xc6, {\cf20 // 0b11000110}\par
00609     0x86, {\cf20 // 0b10000110}\par
00610     0x00, {\cf20 // 0b00000000}\par
00611     0x00, {\cf20 // 0b00000000}\par
00612     0x00, {\cf20 // 0b00000000}\par
00613     0x00, {\cf20 // 0b00000000}\par
00614     0x00, {\cf20 // 0b00000000}\par
00615     0x00, {\cf20 // 0b00000000}\par
00616     0x38, {\cf20 // 0b00111000}\par
00617     0x6c, {\cf20 // 0b01101100}\par
00618     0x6c, {\cf20 // 0b01101100}\par
00619     0x38, {\cf20 // 0b00111000}\par
00620     0x76, {\cf20 // 0b01110110}\par
00621     0xdc, {\cf20 // 0b11011100}\par
00622     0xcc, {\cf20 // 0b11001100}\par
00623     0xcc, {\cf20 // 0b11001100}\par
00624     0xcc, {\cf20 // 0b11001100}\par
00625     0x76, {\cf20 // 0b01110110}\par
00626     0x00, {\cf20 // 0b00000000}\par
00627     0x00, {\cf20 // 0b00000000}\par
00628     0x00, {\cf20 // 0b00000000}\par
00629     0x00, {\cf20 // 0b00000000}\par
00630     0x00, {\cf20 // 0b00000000}\par
00631     0x30, {\cf20 // 0b00110000}\par
00632     0x30, {\cf20 // 0b00110000}\par
00633     0x30, {\cf20 // 0b00110000}\par
00634     0x60, {\cf20 // 0b01100000}\par
00635     0x00, {\cf20 // 0b00000000}\par
00636     0x00, {\cf20 // 0b00000000}\par
00637     0x00, {\cf20 // 0b00000000}\par
00638     0x00, {\cf20 // 0b00000000}\par
00639     0x00, {\cf20 // 0b00000000}\par
00640     0x00, {\cf20 // 0b00000000}\par
00641     0x00, {\cf20 // 0b00000000}\par
00642     0x00, {\cf20 // 0b00000000}\par
00643     0x00, {\cf20 // 0b00000000}\par
00644     0x00, {\cf20 // 0b00000000}\par
00645     0x00, {\cf20 // 0b00000000}\par
00646     0x00, {\cf20 // 0b00000000}\par
00647     0x00, {\cf20 // 0b00000000}\par
00648     0xc, {\cf20 // 0b00001100}\par
00649     0x18, {\cf20 // 0b00011000}\par
00650     0x30, {\cf20 // 0b00110000}\par
00651     0x30, {\cf20 // 0b00110000}\par
00652     0x30, {\cf20 // 0b00110000}\par
00653     0x30, {\cf20 // 0b00110000}\par
00654     0x30, {\cf20 // 0b00110000}\par
00655     0x30, {\cf20 // 0b00110000}\par
00656     0x18, {\cf20 // 0b00011000}\par
00657     0xc, {\cf20 // 0b00001100}\par
00658     0x00, {\cf20 // 0b00000000}\par
00659     0x00, {\cf20 // 0b00000000}\par
00660     0x00, {\cf20 // 0b00000000}\par
00661     0x00, {\cf20 // 0b00000000}\par
00662     0x00, {\cf20 // 0b00000000}\par
00663     0x00, {\cf20 // 0b00000000}\par
00664     0x30, {\cf20 // 0b00110000}\par
00665     0x18, {\cf20 // 0b00011000}\par
00666     0xc, {\cf20 // 0b00001100}\par
00667     0xc, {\cf20 // 0b00001100}\par
00668     0xc, {\cf20 // 0b00001100}\par
00669     0xc, {\cf20 // 0b00001100}\par
00670     0xc, {\cf20 // 0b00001100}\par
00671     0xc, {\cf20 // 0b00001100}\par
00672     0x18, {\cf20 // 0b00011000}\par
00673     0x30, {\cf20 // 0b00110000}\par
00674     0x00, {\cf20 // 0b00000000}\par
00675     0x00, {\cf20 // 0b00000000}\par
00676     0x00, {\cf20 // 0b00000000}\par
00677     0x00, {\cf20 // 0b00000000}\par
00678     0x00, {\cf20 // 0b00000000}\par
00679     0x00, {\cf20 // 0b00000000}\par
00680     0x00, {\cf20 // 0b00000000}\par
00681     0x00, {\cf20 // 0b00000000}\par
00682     0x00, {\cf20 // 0b00000000}\par
00683     0x66, {\cf20 // 0b01100110}\par
00684     0x3c, {\cf20 // 0b00111100}\par
00685     0xff, {\cf20 // 0b11111111}\par
00686     0x3c, {\cf20 // 0b00111100}\par
00687     0x66, {\cf20 // 0b01100110}\par
00688     0x00, {\cf20 // 0b00000000}\par
00689     0x00, {\cf20 // 0b00000000}\par
00690     0x00, {\cf20 // 0b00000000}\par
00691     0x00, {\cf20 // 0b00000000}\par
00692     0x00, {\cf20 // 0b00000000}\par
00693     0x00, {\cf20 // 0b00000000}\par
00694     0x00, {\cf20 // 0b00000000}\par
00695     0x00, {\cf20 // 0b00000000}\par
00696     0x00, {\cf20 // 0b00000000}\par
00697     0x00, {\cf20 // 0b00000000}\par
00698     0x00, {\cf20 // 0b00000000}\par
00699     0x18, {\cf20 // 0b00011000}\par
00700     0x18, {\cf20 // 0b00011000}\par
00701     0x7e, {\cf20 // 0b01111110}\par
00702     0x18, {\cf20 // 0b00011000}\par
00703     0x18, {\cf20 // 0b00011000}\par
00704     0x00, {\cf20 // 0b00000000}\par
00705     0x00, {\cf20 // 0b00000000}\par
00706     0x00, {\cf20 // 0b00000000}\par
00707     0x00, {\cf20 // 0b00000000}\par
00708     0x00, {\cf20 // 0b00000000}\par
00709     0x00, {\cf20 // 0b00000000}\par
00710     0x00, {\cf20 // 0b00000000}\par
00711     0x00, {\cf20 // 0b00000000}\par
00712     0x00, {\cf20 // 0b00000000}\par
00713     0x00, {\cf20 // 0b00000000}\par
00714     0x00, {\cf20 // 0b00000000}\par
00715     0x00, {\cf20 // 0b00000000}\par
00716     0x00, {\cf20 // 0b00000000}\par
00717     0x00, {\cf20 // 0b00000000}\par
00718     0x00, {\cf20 // 0b00000000}\par
00719     0x18, {\cf20 // 0b00011000}\par
00720     0x18, {\cf20 // 0b00011000}\par
00721     0x18, {\cf20 // 0b00011000}\par
00722     0x30, {\cf20 // 0b00110000}\par
00723     0x00, {\cf20 // 0b00000000}\par
00724     0x00, {\cf20 // 0b00000000}\par
00725     0x00, {\cf20 // 0b00000000}\par
00726     0x00, {\cf20 // 0b00000000}\par
00727     0x00, {\cf20 // 0b00000000}\par
00728     0x00, {\cf20 // 0b00000000}\par
00729     0x00, {\cf20 // 0b00000000}\par
00730     0x00, {\cf20 // 0b00000000}\par
00731     0x00, {\cf20 // 0b00000000}\par
00732     0x00, {\cf20 // 0b00000000}\par
00733     0xfe, {\cf20 // 0b11111110}\par
00734     0x00, {\cf20 // 0b00000000}\par
00735     0x00, {\cf20 // 0b00000000}\par
00736     0x00, {\cf20 // 0b00000000}\par
00737     0x00, {\cf20 // 0b00000000}\par
00738     0x00, {\cf20 // 0b00000000}\par
00739     0x00, {\cf20 // 0b00000000}\par
00740     0x00, {\cf20 // 0b00000000}\par
00741     0x00, {\cf20 // 0b00000000}\par
00742     0x00, {\cf20 // 0b00000000}\par
00743     0x00, {\cf20 // 0b00000000}\par
00744     0x00, {\cf20 // 0b00000000}\par
00745     0x00, {\cf20 // 0b00000000}\par
00746     0x00, {\cf20 // 0b00000000}\par
00747     0x00, {\cf20 // 0b00000000}\par
00748     0x00, {\cf20 // 0b00000000}\par
00749     0x00, {\cf20 // 0b00000000}\par
00750     0x00, {\cf20 // 0b00000000}\par
00751     0x00, {\cf20 // 0b00000000}\par
00752     0x18, {\cf20 // 0b00011000}\par
00753     0x18, {\cf20 // 0b00011000}\par
00754     0x00, {\cf20 // 0b00000000}\par
00755     0x00, {\cf20 // 0b00000000}\par
00756     0x00, {\cf20 // 0b00000000}\par
00757     0x00, {\cf20 // 0b00000000}\par
00758     0x00, {\cf20 // 0b00000000}\par
00759     0x00, {\cf20 // 0b00000000}\par
00760     0x00, {\cf20 // 0b00000000}\par
00761     0x00, {\cf20 // 0b00000000}\par
00762     0x2, {\cf20 // 0b00000010}\par
00763     0x6, {\cf20 // 0b00000110}\par
00764     0xc, {\cf20 // 0b00001100}\par
00765     0x18, {\cf20 // 0b00011000}\par
00766     0x30, {\cf20 // 0b00110000}\par
00767     0x60, {\cf20 // 0b01100000}\par
00768     0xc0, {\cf20 // 0b11000000}\par
00769     0x80, {\cf20 // 0b10000000}\par
00770     0x00, {\cf20 // 0b00000000}\par
00771     0x00, {\cf20 // 0b00000000}\par
00772     0x00, {\cf20 // 0b00000000}\par
00773     0x00, {\cf20 // 0b00000000}\par
00774     0x00, {\cf20 // 0b00000000}\par
00775     0x00, {\cf20 // 0b00000000}\par
00776     0x38, {\cf20 // 0b00111000}\par
00777     0x6c, {\cf20 // 0b01101100}\par
00778     0xc6, {\cf20 // 0b11000110}\par
00779     0xc6, {\cf20 // 0b11000110}\par
00780     0xd6, {\cf20 // 0b11010110}\par
00781     0xd6, {\cf20 // 0b11010110}\par
00782     0xc6, {\cf20 // 0b11000110}\par
00783     0xc6, {\cf20 // 0b11000110}\par
00784     0x6c, {\cf20 // 0b01101100}\par
00785     0x38, {\cf20 // 0b00111000}\par
00786     0x00, {\cf20 // 0b00000000}\par
00787     0x00, {\cf20 // 0b00000000}\par
00788     0x00, {\cf20 // 0b00000000}\par
00789     0x00, {\cf20 // 0b00000000}\par
00790     0x00, {\cf20 // 0b00000000}\par
00791     0x00, {\cf20 // 0b00000000}\par
00792     0x18, {\cf20 // 0b00011000}\par
00793     0x38, {\cf20 // 0b00111000}\par
00794     0x78, {\cf20 // 0b01111000}\par
00795     0x18, {\cf20 // 0b00011000}\par
00796     0x18, {\cf20 // 0b00011000}\par
00797     0x18, {\cf20 // 0b00011000}\par
00798     0x18, {\cf20 // 0b00011000}\par
00799     0x18, {\cf20 // 0b00011000}\par
00800     0x18, {\cf20 // 0b00011000}\par
00801     0x7e, {\cf20 // 0b01111110}\par
00802     0x00, {\cf20 // 0b00000000}\par
00803     0x00, {\cf20 // 0b00000000}\par
00804     0x00, {\cf20 // 0b00000000}\par
00805     0x00, {\cf20 // 0b00000000}\par
00806     0x00, {\cf20 // 0b00000000}\par
00807     0x00, {\cf20 // 0b00000000}\par
00808     0x7c, {\cf20 // 0b01111100}\par
00809     0xc6, {\cf20 // 0b11000110}\par
00810     0x6, {\cf20 // 0b00000110}\par
00811     0xc, {\cf20 // 0b00001100}\par
00812     0x18, {\cf20 // 0b00011000}\par
00813     0x30, {\cf20 // 0b00110000}\par
00814     0x60, {\cf20 // 0b01100000}\par
00815     0xc0, {\cf20 // 0b11000000}\par
00816     0xc6, {\cf20 // 0b11000110}\par
00817     0xfe, {\cf20 // 0b11111110}\par
00818     0x00, {\cf20 // 0b00000000}\par
00819     0x00, {\cf20 // 0b00000000}\par
00820     0x00, {\cf20 // 0b00000000}\par
00821     0x00, {\cf20 // 0b00000000}\par
00822     0x00, {\cf20 // 0b00000000}\par
00823     0x00, {\cf20 // 0b00000000}\par
00824     0x7c, {\cf20 // 0b01111100}\par
00825     0xc6, {\cf20 // 0b11000110}\par
00826     0x6, {\cf20 // 0b00000110}\par
00827     0x6, {\cf20 // 0b00000110}\par
00828     0x3c, {\cf20 // 0b00111100}\par
00829     0x6, {\cf20 // 0b00000110}\par
00830     0x6, {\cf20 // 0b00000110}\par
00831     0x6, {\cf20 // 0b00000110}\par
00832     0xc6, {\cf20 // 0b11000110}\par
00833     0x7c, {\cf20 // 0b01111100}\par
00834     0x00, {\cf20 // 0b00000000}\par
00835     0x00, {\cf20 // 0b00000000}\par
00836     0x00, {\cf20 // 0b00000000}\par
00837     0x00, {\cf20 // 0b00000000}\par
00838     0x00, {\cf20 // 0b00000000}\par
00839     0x00, {\cf20 // 0b00000000}\par
00840     0xc, {\cf20 // 0b00001100}\par
00841     0x1c, {\cf20 // 0b00011100}\par
00842     0x3c, {\cf20 // 0b00111100}\par
00843     0x6c, {\cf20 // 0b01101100}\par
00844     0xcc, {\cf20 // 0b11001100}\par
00845     0xfe, {\cf20 // 0b11111110}\par
00846     0xc, {\cf20 // 0b00001100}\par
00847     0xc, {\cf20 // 0b00001100}\par
00848     0xc, {\cf20 // 0b00001100}\par
00849     0x1e, {\cf20 // 0b00011110}\par
00850     0x00, {\cf20 // 0b00000000}\par
00851     0x00, {\cf20 // 0b00000000}\par
00852     0x00, {\cf20 // 0b00000000}\par
00853     0x00, {\cf20 // 0b00000000}\par
00854     0x00, {\cf20 // 0b00000000}\par
00855     0x00, {\cf20 // 0b00000000}\par
00856     0xfe, {\cf20 // 0b11111110}\par
00857     0xc0, {\cf20 // 0b11000000}\par
00858     0xc0, {\cf20 // 0b11000000}\par
00859     0xc0, {\cf20 // 0b11000000}\par
00860     0xfc, {\cf20 // 0b11111100}\par
00861     0x6, {\cf20 // 0b00000110}\par
00862     0x6, {\cf20 // 0b00000110}\par
00863     0x6, {\cf20 // 0b00000110}\par
00864     0xc6, {\cf20 // 0b11000110}\par
00865     0x7c, {\cf20 // 0b01111100}\par
00866     0x00, {\cf20 // 0b00000000}\par
00867     0x00, {\cf20 // 0b00000000}\par
00868     0x00, {\cf20 // 0b00000000}\par
00869     0x00, {\cf20 // 0b00000000}\par
00870     0x00, {\cf20 // 0b00000000}\par
00871     0x00, {\cf20 // 0b00000000}\par
00872     0x38, {\cf20 // 0b00111000}\par
00873     0x60, {\cf20 // 0b01100000}\par
00874     0xc0, {\cf20 // 0b11000000}\par
00875     0xc0, {\cf20 // 0b11000000}\par
00876     0xfc, {\cf20 // 0b11111100}\par
00877     0xc6, {\cf20 // 0b11000110}\par
00878     0xc6, {\cf20 // 0b11000110}\par
00879     0xc6, {\cf20 // 0b11000110}\par
00880     0xc6, {\cf20 // 0b11000110}\par
00881     0x7c, {\cf20 // 0b01111100}\par
00882     0x00, {\cf20 // 0b00000000}\par
00883     0x00, {\cf20 // 0b00000000}\par
00884     0x00, {\cf20 // 0b00000000}\par
00885     0x00, {\cf20 // 0b00000000}\par
00886     0x00, {\cf20 // 0b00000000}\par
00887     0x00, {\cf20 // 0b00000000}\par
00888     0xfe, {\cf20 // 0b11111110}\par
00889     0xc6, {\cf20 // 0b11000110}\par
00890     0x6, {\cf20 // 0b00000110}\par
00891     0x6, {\cf20 // 0b00000110}\par
00892     0xc, {\cf20 // 0b00001100}\par
00893     0x18, {\cf20 // 0b00011000}\par
00894     0x30, {\cf20 // 0b00110000}\par
00895     0x30, {\cf20 // 0b00110000}\par
00896     0x30, {\cf20 // 0b00110000}\par
00897     0x30, {\cf20 // 0b00110000}\par
00898     0x00, {\cf20 // 0b00000000}\par
00899     0x00, {\cf20 // 0b00000000}\par
00900     0x00, {\cf20 // 0b00000000}\par
00901     0x00, {\cf20 // 0b00000000}\par
00902     0x00, {\cf20 // 0b00000000}\par
00903     0x00, {\cf20 // 0b00000000}\par
00904     0x7c, {\cf20 // 0b01111100}\par
00905     0xc6, {\cf20 // 0b11000110}\par
00906     0xc6, {\cf20 // 0b11000110}\par
00907     0xc6, {\cf20 // 0b11000110}\par
00908     0x7c, {\cf20 // 0b01111100}\par
00909     0xc6, {\cf20 // 0b11000110}\par
00910     0xc6, {\cf20 // 0b11000110}\par
00911     0xc6, {\cf20 // 0b11000110}\par
00912     0xc6, {\cf20 // 0b11000110}\par
00913     0x7c, {\cf20 // 0b01111100}\par
00914     0x00, {\cf20 // 0b00000000}\par
00915     0x00, {\cf20 // 0b00000000}\par
00916     0x00, {\cf20 // 0b00000000}\par
00917     0x00, {\cf20 // 0b00000000}\par
00918     0x00, {\cf20 // 0b00000000}\par
00919     0x00, {\cf20 // 0b00000000}\par
00920     0x7c, {\cf20 // 0b01111100}\par
00921     0xc6, {\cf20 // 0b11000110}\par
00922     0xc6, {\cf20 // 0b11000110}\par
00923     0xc6, {\cf20 // 0b11000110}\par
00924     0x7e, {\cf20 // 0b01111110}\par
00925     0x6, {\cf20 // 0b00000110}\par
00926     0x6, {\cf20 // 0b00000110}\par
00927     0x6, {\cf20 // 0b00000110}\par
00928     0xc, {\cf20 // 0b00001100}\par
00929     0x78, {\cf20 // 0b01111000}\par
00930     0x00, {\cf20 // 0b00000000}\par
00931     0x00, {\cf20 // 0b00000000}\par
00932     0x00, {\cf20 // 0b00000000}\par
00933     0x00, {\cf20 // 0b00000000}\par
00934     0x00, {\cf20 // 0b00000000}\par
00935     0x00, {\cf20 // 0b00000000}\par
00936     0x00, {\cf20 // 0b00000000}\par
00937     0x00, {\cf20 // 0b00000000}\par
00938     0x18, {\cf20 // 0b00011000}\par
00939     0x18, {\cf20 // 0b00011000}\par
00940     0x00, {\cf20 // 0b00000000}\par
00941     0x00, {\cf20 // 0b00000000}\par
00942     0x00, {\cf20 // 0b00000000}\par
00943     0x18, {\cf20 // 0b00011000}\par
00944     0x18, {\cf20 // 0b00011000}\par
00945     0x00, {\cf20 // 0b00000000}\par
00946     0x00, {\cf20 // 0b00000000}\par
00947     0x00, {\cf20 // 0b00000000}\par
00948     0x00, {\cf20 // 0b00000000}\par
00949     0x00, {\cf20 // 0b00000000}\par
00950     0x00, {\cf20 // 0b00000000}\par
00951     0x00, {\cf20 // 0b00000000}\par
00952     0x00, {\cf20 // 0b00000000}\par
00953     0x00, {\cf20 // 0b00000000}\par
00954     0x18, {\cf20 // 0b00011000}\par
00955     0x18, {\cf20 // 0b00011000}\par
00956     0x00, {\cf20 // 0b00000000}\par
00957     0x00, {\cf20 // 0b00000000}\par
00958     0x00, {\cf20 // 0b00000000}\par
00959     0x18, {\cf20 // 0b00011000}\par
00960     0x18, {\cf20 // 0b00011000}\par
00961     0x30, {\cf20 // 0b00110000}\par
00962     0x00, {\cf20 // 0b00000000}\par
00963     0x00, {\cf20 // 0b00000000}\par
00964     0x00, {\cf20 // 0b00000000}\par
00965     0x00, {\cf20 // 0b00000000}\par
00966     0x00, {\cf20 // 0b00000000}\par
00967     0x00, {\cf20 // 0b00000000}\par
00968     0x00, {\cf20 // 0b00000000}\par
00969     0x6, {\cf20 // 0b00000110}\par
00970     0xc, {\cf20 // 0b00001100}\par
00971     0x18, {\cf20 // 0b00011000}\par
00972     0x30, {\cf20 // 0b00110000}\par
00973     0x60, {\cf20 // 0b01100000}\par
00974     0x30, {\cf20 // 0b00110000}\par
00975     0x18, {\cf20 // 0b00011000}\par
00976     0xc, {\cf20 // 0b00001100}\par
00977     0x6, {\cf20 // 0b00000110}\par
00978     0x00, {\cf20 // 0b00000000}\par
00979     0x00, {\cf20 // 0b00000000}\par
00980     0x00, {\cf20 // 0b00000000}\par
00981     0x00, {\cf20 // 0b00000000}\par
00982     0x00, {\cf20 // 0b00000000}\par
00983     0x00, {\cf20 // 0b00000000}\par
00984     0x00, {\cf20 // 0b00000000}\par
00985     0x00, {\cf20 // 0b00000000}\par
00986     0x00, {\cf20 // 0b00000000}\par
00987     0x7e, {\cf20 // 0b01111110}\par
00988     0x00, {\cf20 // 0b00000000}\par
00989     0x00, {\cf20 // 0b00000000}\par
00990     0x7e, {\cf20 // 0b01111110}\par
00991     0x00, {\cf20 // 0b00000000}\par
00992     0x00, {\cf20 // 0b00000000}\par
00993     0x00, {\cf20 // 0b00000000}\par
00994     0x00, {\cf20 // 0b00000000}\par
00995     0x00, {\cf20 // 0b00000000}\par
00996     0x00, {\cf20 // 0b00000000}\par
00997     0x00, {\cf20 // 0b00000000}\par
00998     0x00, {\cf20 // 0b00000000}\par
00999     0x00, {\cf20 // 0b00000000}\par
01000     0x00, {\cf20 // 0b00000000}\par
01001     0x60, {\cf20 // 0b01100000}\par
01002     0x30, {\cf20 // 0b00110000}\par
01003     0x18, {\cf20 // 0b00011000}\par
01004     0xc, {\cf20 // 0b00001100}\par
01005     0x6, {\cf20 // 0b00000110}\par
01006     0xc, {\cf20 // 0b00001100}\par
01007     0x18, {\cf20 // 0b00011000}\par
01008     0x30, {\cf20 // 0b00110000}\par
01009     0x60, {\cf20 // 0b01100000}\par
01010     0x00, {\cf20 // 0b00000000}\par
01011     0x00, {\cf20 // 0b00000000}\par
01012     0x00, {\cf20 // 0b00000000}\par
01013     0x00, {\cf20 // 0b00000000}\par
01014     0x00, {\cf20 // 0b00000000}\par
01015     0x00, {\cf20 // 0b00000000}\par
01016     0x7c, {\cf20 // 0b01111100}\par
01017     0xc6, {\cf20 // 0b11000110}\par
01018     0xc6, {\cf20 // 0b11000110}\par
01019     0xc, {\cf20 // 0b00001100}\par
01020     0x18, {\cf20 // 0b00011000}\par
01021     0x18, {\cf20 // 0b00011000}\par
01022     0x18, {\cf20 // 0b00011000}\par
01023     0x00, {\cf20 // 0b00000000}\par
01024     0x18, {\cf20 // 0b00011000}\par
01025     0x18, {\cf20 // 0b00011000}\par
01026     0x00, {\cf20 // 0b00000000}\par
01027     0x00, {\cf20 // 0b00000000}\par
01028     0x00, {\cf20 // 0b00000000}\par
01029     0x00, {\cf20 // 0b00000000}\par
01030     0x00, {\cf20 // 0b00000000}\par
01031     0x00, {\cf20 // 0b00000000}\par
01032     0x00, {\cf20 // 0b00000000}\par
01033     0x7c, {\cf20 // 0b01111100}\par
01034     0xc6, {\cf20 // 0b11000110}\par
01035     0xc6, {\cf20 // 0b11000110}\par
01036     0xde, {\cf20 // 0b11011110}\par
01037     0xde, {\cf20 // 0b11011110}\par
01038     0xde, {\cf20 // 0b11011110}\par
01039     0xdc, {\cf20 // 0b11011100}\par
01040     0xc0, {\cf20 // 0b11000000}\par
01041     0x7c, {\cf20 // 0b01111100}\par
01042     0x00, {\cf20 // 0b00000000}\par
01043     0x00, {\cf20 // 0b00000000}\par
01044     0x00, {\cf20 // 0b00000000}\par
01045     0x00, {\cf20 // 0b00000000}\par
01046     0x00, {\cf20 // 0b00000000}\par
01047     0x00, {\cf20 // 0b00000000}\par
01048     0x10, {\cf20 // 0b00010000}\par
01049     0x38, {\cf20 // 0b00111000}\par
01050     0x6c, {\cf20 // 0b01101100}\par
01051     0xc6, {\cf20 // 0b11000110}\par
01052     0xc6, {\cf20 // 0b11000110}\par
01053     0xfe, {\cf20 // 0b11111110}\par
01054     0xc6, {\cf20 // 0b11000110}\par
01055     0xc6, {\cf20 // 0b11000110}\par
01056     0xc6, {\cf20 // 0b11000110}\par
01057     0xc6, {\cf20 // 0b11000110}\par
01058     0x00, {\cf20 // 0b00000000}\par
01059     0x00, {\cf20 // 0b00000000}\par
01060     0x00, {\cf20 // 0b00000000}\par
01061     0x00, {\cf20 // 0b00000000}\par
01062     0x00, {\cf20 // 0b00000000}\par
01063     0x00, {\cf20 // 0b00000000}\par
01064     0xfc, {\cf20 // 0b11111100}\par
01065     0x66, {\cf20 // 0b01100110}\par
01066     0x66, {\cf20 // 0b01100110}\par
01067     0x66, {\cf20 // 0b01100110}\par
01068     0x7c, {\cf20 // 0b01111100}\par
01069     0x66, {\cf20 // 0b01100110}\par
01070     0x66, {\cf20 // 0b01100110}\par
01071     0x66, {\cf20 // 0b01100110}\par
01072     0x66, {\cf20 // 0b01100110}\par
01073     0xfc, {\cf20 // 0b11111100}\par
01074     0x00, {\cf20 // 0b00000000}\par
01075     0x00, {\cf20 // 0b00000000}\par
01076     0x00, {\cf20 // 0b00000000}\par
01077     0x00, {\cf20 // 0b00000000}\par
01078     0x00, {\cf20 // 0b00000000}\par
01079     0x00, {\cf20 // 0b00000000}\par
01080     0x3c, {\cf20 // 0b00111100}\par
01081     0x66, {\cf20 // 0b01100110}\par
01082     0xc2, {\cf20 // 0b11000010}\par
01083     0xc0, {\cf20 // 0b11000000}\par
01084     0xc0, {\cf20 // 0b11000000}\par
01085     0xc0, {\cf20 // 0b11000000}\par
01086     0xc0, {\cf20 // 0b11000000}\par
01087     0xc2, {\cf20 // 0b11000010}\par
01088     0x66, {\cf20 // 0b01100110}\par
01089     0x3c, {\cf20 // 0b00111100}\par
01090     0x00, {\cf20 // 0b00000000}\par
01091     0x00, {\cf20 // 0b00000000}\par
01092     0x00, {\cf20 // 0b00000000}\par
01093     0x00, {\cf20 // 0b00000000}\par
01094     0x00, {\cf20 // 0b00000000}\par
01095     0x00, {\cf20 // 0b00000000}\par
01096     0xf8, {\cf20 // 0b11111000}\par
01097     0x6c, {\cf20 // 0b01101100}\par
01098     0x66, {\cf20 // 0b01100110}\par
01099     0x66, {\cf20 // 0b01100110}\par
01100     0x66, {\cf20 // 0b01100110}\par
01101     0x66, {\cf20 // 0b01100110}\par
01102     0x66, {\cf20 // 0b01100110}\par
01103     0x66, {\cf20 // 0b01100110}\par
01104     0x6c, {\cf20 // 0b01101100}\par
01105     0xf8, {\cf20 // 0b11111000}\par
01106     0x00, {\cf20 // 0b00000000}\par
01107     0x00, {\cf20 // 0b00000000}\par
01108     0x00, {\cf20 // 0b00000000}\par
01109     0x00, {\cf20 // 0b00000000}\par
01110     0x00, {\cf20 // 0b00000000}\par
01111     0x00, {\cf20 // 0b00000000}\par
01112     0xfe, {\cf20 // 0b11111110}\par
01113     0x66, {\cf20 // 0b01100110}\par
01114     0x62, {\cf20 // 0b01100010}\par
01115     0x68, {\cf20 // 0b01101000}\par
01116     0x78, {\cf20 // 0b01111000}\par
01117     0x68, {\cf20 // 0b01101000}\par
01118     0x60, {\cf20 // 0b01100000}\par
01119     0x62, {\cf20 // 0b01100010}\par
01120     0x66, {\cf20 // 0b01100110}\par
01121     0xfe, {\cf20 // 0b11111110}\par
01122     0x00, {\cf20 // 0b00000000}\par
01123     0x00, {\cf20 // 0b00000000}\par
01124     0x00, {\cf20 // 0b00000000}\par
01125     0x00, {\cf20 // 0b00000000}\par
01126     0x00, {\cf20 // 0b00000000}\par
01127     0x00, {\cf20 // 0b00000000}\par
01128     0xfe, {\cf20 // 0b11111110}\par
01129     0x66, {\cf20 // 0b01100110}\par
01130     0x62, {\cf20 // 0b01100010}\par
01131     0x68, {\cf20 // 0b01101000}\par
01132     0x78, {\cf20 // 0b01111000}\par
01133     0x68, {\cf20 // 0b01101000}\par
01134     0x60, {\cf20 // 0b01100000}\par
01135     0x60, {\cf20 // 0b01100000}\par
01136     0x60, {\cf20 // 0b01100000}\par
01137     0xf0, {\cf20 // 0b11110000}\par
01138     0x00, {\cf20 // 0b00000000}\par
01139     0x00, {\cf20 // 0b00000000}\par
01140     0x00, {\cf20 // 0b00000000}\par
01141     0x00, {\cf20 // 0b00000000}\par
01142     0x00, {\cf20 // 0b00000000}\par
01143     0x00, {\cf20 // 0b00000000}\par
01144     0x3c, {\cf20 // 0b00111100}\par
01145     0x66, {\cf20 // 0b01100110}\par
01146     0xc2, {\cf20 // 0b11000010}\par
01147     0xc0, {\cf20 // 0b11000000}\par
01148     0xc0, {\cf20 // 0b11000000}\par
01149     0xde, {\cf20 // 0b11011110}\par
01150     0xc6, {\cf20 // 0b11000110}\par
01151     0xc6, {\cf20 // 0b11000110}\par
01152     0x66, {\cf20 // 0b01100110}\par
01153     0x3a, {\cf20 // 0b00111010}\par
01154     0x00, {\cf20 // 0b00000000}\par
01155     0x00, {\cf20 // 0b00000000}\par
01156     0x00, {\cf20 // 0b00000000}\par
01157     0x00, {\cf20 // 0b00000000}\par
01158     0x00, {\cf20 // 0b00000000}\par
01159     0x00, {\cf20 // 0b00000000}\par
01160     0xc6, {\cf20 // 0b11000110}\par
01161     0xc6, {\cf20 // 0b11000110}\par
01162     0xc6, {\cf20 // 0b11000110}\par
01163     0xc6, {\cf20 // 0b11000110}\par
01164     0xfe, {\cf20 // 0b11111110}\par
01165     0xc6, {\cf20 // 0b11000110}\par
01166     0xc6, {\cf20 // 0b11000110}\par
01167     0xc6, {\cf20 // 0b11000110}\par
01168     0xc6, {\cf20 // 0b11000110}\par
01169     0xc6, {\cf20 // 0b11000110}\par
01170     0x00, {\cf20 // 0b00000000}\par
01171     0x00, {\cf20 // 0b00000000}\par
01172     0x00, {\cf20 // 0b00000000}\par
01173     0x00, {\cf20 // 0b00000000}\par
01174     0x00, {\cf20 // 0b00000000}\par
01175     0x00, {\cf20 // 0b00000000}\par
01176     0x3c, {\cf20 // 0b00111100}\par
01177     0x18, {\cf20 // 0b00011000}\par
01178     0x18, {\cf20 // 0b00011000}\par
01179     0x18, {\cf20 // 0b00011000}\par
01180     0x18, {\cf20 // 0b00011000}\par
01181     0x18, {\cf20 // 0b00011000}\par
01182     0x18, {\cf20 // 0b00011000}\par
01183     0x18, {\cf20 // 0b00011000}\par
01184     0x18, {\cf20 // 0b00011000}\par
01185     0x3c, {\cf20 // 0b00111100}\par
01186     0x00, {\cf20 // 0b00000000}\par
01187     0x00, {\cf20 // 0b00000000}\par
01188     0x00, {\cf20 // 0b00000000}\par
01189     0x00, {\cf20 // 0b00000000}\par
01190     0x00, {\cf20 // 0b00000000}\par
01191     0x00, {\cf20 // 0b00000000}\par
01192     0x1e, {\cf20 // 0b00011110}\par
01193     0xc, {\cf20 // 0b00001100}\par
01194     0xc, {\cf20 // 0b00001100}\par
01195     0xc, {\cf20 // 0b00001100}\par
01196     0xc, {\cf20 // 0b00001100}\par
01197     0xc, {\cf20 // 0b00001100}\par
01198     0xcc, {\cf20 // 0b11001100}\par
01199     0xcc, {\cf20 // 0b11001100}\par
01200     0xcc, {\cf20 // 0b11001100}\par
01201     0x78, {\cf20 // 0b01111000}\par
01202     0x00, {\cf20 // 0b00000000}\par
01203     0x00, {\cf20 // 0b00000000}\par
01204     0x00, {\cf20 // 0b00000000}\par
01205     0x00, {\cf20 // 0b00000000}\par
01206     0x00, {\cf20 // 0b00000000}\par
01207     0x00, {\cf20 // 0b00000000}\par
01208     0xe6, {\cf20 // 0b11100110}\par
01209     0x66, {\cf20 // 0b01100110}\par
01210     0x66, {\cf20 // 0b01100110}\par
01211     0x6c, {\cf20 // 0b01101100}\par
01212     0x78, {\cf20 // 0b01111000}\par
01213     0x78, {\cf20 // 0b01111000}\par
01214     0x6c, {\cf20 // 0b01101100}\par
01215     0x66, {\cf20 // 0b01100110}\par
01216     0x66, {\cf20 // 0b01100110}\par
01217     0xe6, {\cf20 // 0b11100110}\par
01218     0x00, {\cf20 // 0b00000000}\par
01219     0x00, {\cf20 // 0b00000000}\par
01220     0x00, {\cf20 // 0b00000000}\par
01221     0x00, {\cf20 // 0b00000000}\par
01222     0x00, {\cf20 // 0b00000000}\par
01223     0x00, {\cf20 // 0b00000000}\par
01224     0xf0, {\cf20 // 0b11110000}\par
01225     0x60, {\cf20 // 0b01100000}\par
01226     0x60, {\cf20 // 0b01100000}\par
01227     0x60, {\cf20 // 0b01100000}\par
01228     0x60, {\cf20 // 0b01100000}\par
01229     0x60, {\cf20 // 0b01100000}\par
01230     0x60, {\cf20 // 0b01100000}\par
01231     0x62, {\cf20 // 0b01100010}\par
01232     0x66, {\cf20 // 0b01100110}\par
01233     0xfe, {\cf20 // 0b11111110}\par
01234     0x00, {\cf20 // 0b00000000}\par
01235     0x00, {\cf20 // 0b00000000}\par
01236     0x00, {\cf20 // 0b00000000}\par
01237     0x00, {\cf20 // 0b00000000}\par
01238     0x00, {\cf20 // 0b00000000}\par
01239     0x00, {\cf20 // 0b00000000}\par
01240     0xc6, {\cf20 // 0b11000110}\par
01241     0xee, {\cf20 // 0b11101110}\par
01242     0xfe, {\cf20 // 0b11111110}\par
01243     0xfe, {\cf20 // 0b11111110}\par
01244     0xd6, {\cf20 // 0b11010110}\par
01245     0xc6, {\cf20 // 0b11000110}\par
01246     0xc6, {\cf20 // 0b11000110}\par
01247     0xc6, {\cf20 // 0b11000110}\par
01248     0xc6, {\cf20 // 0b11000110}\par
01249     0xc6, {\cf20 // 0b11000110}\par
01250     0x00, {\cf20 // 0b00000000}\par
01251     0x00, {\cf20 // 0b00000000}\par
01252     0x00, {\cf20 // 0b00000000}\par
01253     0x00, {\cf20 // 0b00000000}\par
01254     0x00, {\cf20 // 0b00000000}\par
01255     0x00, {\cf20 // 0b00000000}\par
01256     0xc6, {\cf20 // 0b11000110}\par
01257     0xe6, {\cf20 // 0b11100110}\par
01258     0xf6, {\cf20 // 0b11110110}\par
01259     0xfe, {\cf20 // 0b11111110}\par
01260     0xde, {\cf20 // 0b11011110}\par
01261     0xce, {\cf20 // 0b11001110}\par
01262     0xc6, {\cf20 // 0b11000110}\par
01263     0xc6, {\cf20 // 0b11000110}\par
01264     0xc6, {\cf20 // 0b11000110}\par
01265     0xc6, {\cf20 // 0b11000110}\par
01266     0x00, {\cf20 // 0b00000000}\par
01267     0x00, {\cf20 // 0b00000000}\par
01268     0x00, {\cf20 // 0b00000000}\par
01269     0x00, {\cf20 // 0b00000000}\par
01270     0x00, {\cf20 // 0b00000000}\par
01271     0x00, {\cf20 // 0b00000000}\par
01272     0x7c, {\cf20 // 0b01111100}\par
01273     0xc6, {\cf20 // 0b11000110}\par
01274     0xc6, {\cf20 // 0b11000110}\par
01275     0xc6, {\cf20 // 0b11000110}\par
01276     0xc6, {\cf20 // 0b11000110}\par
01277     0xc6, {\cf20 // 0b11000110}\par
01278     0xc6, {\cf20 // 0b11000110}\par
01279     0xc6, {\cf20 // 0b11000110}\par
01280     0xc6, {\cf20 // 0b11000110}\par
01281     0x7c, {\cf20 // 0b01111100}\par
01282     0x00, {\cf20 // 0b00000000}\par
01283     0x00, {\cf20 // 0b00000000}\par
01284     0x00, {\cf20 // 0b00000000}\par
01285     0x00, {\cf20 // 0b00000000}\par
01286     0x00, {\cf20 // 0b00000000}\par
01287     0x00, {\cf20 // 0b00000000}\par
01288     0xfc, {\cf20 // 0b11111100}\par
01289     0x66, {\cf20 // 0b01100110}\par
01290     0x66, {\cf20 // 0b01100110}\par
01291     0x66, {\cf20 // 0b01100110}\par
01292     0x7c, {\cf20 // 0b01111100}\par
01293     0x60, {\cf20 // 0b01100000}\par
01294     0x60, {\cf20 // 0b01100000}\par
01295     0x60, {\cf20 // 0b01100000}\par
01296     0x60, {\cf20 // 0b01100000}\par
01297     0xf0, {\cf20 // 0b11110000}\par
01298     0x00, {\cf20 // 0b00000000}\par
01299     0x00, {\cf20 // 0b00000000}\par
01300     0x00, {\cf20 // 0b00000000}\par
01301     0x00, {\cf20 // 0b00000000}\par
01302     0x00, {\cf20 // 0b00000000}\par
01303     0x00, {\cf20 // 0b00000000}\par
01304     0x7c, {\cf20 // 0b01111100}\par
01305     0xc6, {\cf20 // 0b11000110}\par
01306     0xc6, {\cf20 // 0b11000110}\par
01307     0xc6, {\cf20 // 0b11000110}\par
01308     0xc6, {\cf20 // 0b11000110}\par
01309     0xc6, {\cf20 // 0b11000110}\par
01310     0xc6, {\cf20 // 0b11000110}\par
01311     0xd6, {\cf20 // 0b11010110}\par
01312     0xde, {\cf20 // 0b11011110}\par
01313     0x7c, {\cf20 // 0b01111100}\par
01314     0xc, {\cf20 // 0b00001100}\par
01315     0xe, {\cf20 // 0b00001110}\par
01316     0x00, {\cf20 // 0b00000000}\par
01317     0x00, {\cf20 // 0b00000000}\par
01318     0x00, {\cf20 // 0b00000000}\par
01319     0x00, {\cf20 // 0b00000000}\par
01320     0xfc, {\cf20 // 0b11111100}\par
01321     0x66, {\cf20 // 0b01100110}\par
01322     0x66, {\cf20 // 0b01100110}\par
01323     0x66, {\cf20 // 0b01100110}\par
01324     0x7c, {\cf20 // 0b01111100}\par
01325     0x6c, {\cf20 // 0b01101100}\par
01326     0x66, {\cf20 // 0b01100110}\par
01327     0x66, {\cf20 // 0b01100110}\par
01328     0x66, {\cf20 // 0b01100110}\par
01329     0xe6, {\cf20 // 0b11100110}\par
01330     0x00, {\cf20 // 0b00000000}\par
01331     0x00, {\cf20 // 0b00000000}\par
01332     0x00, {\cf20 // 0b00000000}\par
01333     0x00, {\cf20 // 0b00000000}\par
01334     0x00, {\cf20 // 0b00000000}\par
01335     0x00, {\cf20 // 0b00000000}\par
01336     0x7c, {\cf20 // 0b01111100}\par
01337     0xc6, {\cf20 // 0b11000110}\par
01338     0xc6, {\cf20 // 0b11000110}\par
01339     0x60, {\cf20 // 0b01100000}\par
01340     0x38, {\cf20 // 0b00111000}\par
01341     0xc, {\cf20 // 0b00001100}\par
01342     0x6, {\cf20 // 0b00000110}\par
01343     0xc6, {\cf20 // 0b11000110}\par
01344     0xc6, {\cf20 // 0b11000110}\par
01345     0x7c, {\cf20 // 0b01111100}\par
01346     0x00, {\cf20 // 0b00000000}\par
01347     0x00, {\cf20 // 0b00000000}\par
01348     0x00, {\cf20 // 0b00000000}\par
01349     0x00, {\cf20 // 0b00000000}\par
01350     0x00, {\cf20 // 0b00000000}\par
01351     0x00, {\cf20 // 0b00000000}\par
01352     0x7e, {\cf20 // 0b01111110}\par
01353     0x7e, {\cf20 // 0b01111110}\par
01354     0x5a, {\cf20 // 0b01011010}\par
01355     0x18, {\cf20 // 0b00011000}\par
01356     0x18, {\cf20 // 0b00011000}\par
01357     0x18, {\cf20 // 0b00011000}\par
01358     0x18, {\cf20 // 0b00011000}\par
01359     0x18, {\cf20 // 0b00011000}\par
01360     0x18, {\cf20 // 0b00011000}\par
01361     0x3c, {\cf20 // 0b00111100}\par
01362     0x00, {\cf20 // 0b00000000}\par
01363     0x00, {\cf20 // 0b00000000}\par
01364     0x00, {\cf20 // 0b00000000}\par
01365     0x00, {\cf20 // 0b00000000}\par
01366     0x00, {\cf20 // 0b00000000}\par
01367     0x00, {\cf20 // 0b00000000}\par
01368     0xc6, {\cf20 // 0b11000110}\par
01369     0xc6, {\cf20 // 0b11000110}\par
01370     0xc6, {\cf20 // 0b11000110}\par
01371     0xc6, {\cf20 // 0b11000110}\par
01372     0xc6, {\cf20 // 0b11000110}\par
01373     0xc6, {\cf20 // 0b11000110}\par
01374     0xc6, {\cf20 // 0b11000110}\par
01375     0xc6, {\cf20 // 0b11000110}\par
01376     0xc6, {\cf20 // 0b11000110}\par
01377     0x7c, {\cf20 // 0b01111100}\par
01378     0x00, {\cf20 // 0b00000000}\par
01379     0x00, {\cf20 // 0b00000000}\par
01380     0x00, {\cf20 // 0b00000000}\par
01381     0x00, {\cf20 // 0b00000000}\par
01382     0x00, {\cf20 // 0b00000000}\par
01383     0x00, {\cf20 // 0b00000000}\par
01384     0xc6, {\cf20 // 0b11000110}\par
01385     0xc6, {\cf20 // 0b11000110}\par
01386     0xc6, {\cf20 // 0b11000110}\par
01387     0xc6, {\cf20 // 0b11000110}\par
01388     0xc6, {\cf20 // 0b11000110}\par
01389     0xc6, {\cf20 // 0b11000110}\par
01390     0xc6, {\cf20 // 0b11000110}\par
01391     0x6c, {\cf20 // 0b01101100}\par
01392     0x38, {\cf20 // 0b00111000}\par
01393     0x10, {\cf20 // 0b00010000}\par
01394     0x00, {\cf20 // 0b00000000}\par
01395     0x00, {\cf20 // 0b00000000}\par
01396     0x00, {\cf20 // 0b00000000}\par
01397     0x00, {\cf20 // 0b00000000}\par
01398     0x00, {\cf20 // 0b00000000}\par
01399     0x00, {\cf20 // 0b00000000}\par
01400     0xc6, {\cf20 // 0b11000110}\par
01401     0xc6, {\cf20 // 0b11000110}\par
01402     0xc6, {\cf20 // 0b11000110}\par
01403     0xc6, {\cf20 // 0b11000110}\par
01404     0xd6, {\cf20 // 0b11010110}\par
01405     0xd6, {\cf20 // 0b11010110}\par
01406     0xd6, {\cf20 // 0b11010110}\par
01407     0xfe, {\cf20 // 0b11111110}\par
01408     0xee, {\cf20 // 0b11101110}\par
01409     0x6c, {\cf20 // 0b01101100}\par
01410     0x00, {\cf20 // 0b00000000}\par
01411     0x00, {\cf20 // 0b00000000}\par
01412     0x00, {\cf20 // 0b00000000}\par
01413     0x00, {\cf20 // 0b00000000}\par
01414     0x00, {\cf20 // 0b00000000}\par
01415     0x00, {\cf20 // 0b00000000}\par
01416     0xc6, {\cf20 // 0b11000110}\par
01417     0xc6, {\cf20 // 0b11000110}\par
01418     0x6c, {\cf20 // 0b01101100}\par
01419     0x7c, {\cf20 // 0b01111100}\par
01420     0x38, {\cf20 // 0b00111000}\par
01421     0x38, {\cf20 // 0b00111000}\par
01422     0x7c, {\cf20 // 0b01111100}\par
01423     0x6c, {\cf20 // 0b01101100}\par
01424     0xc6, {\cf20 // 0b11000110}\par
01425     0xc6, {\cf20 // 0b11000110}\par
01426     0x00, {\cf20 // 0b00000000}\par
01427     0x00, {\cf20 // 0b00000000}\par
01428     0x00, {\cf20 // 0b00000000}\par
01429     0x00, {\cf20 // 0b00000000}\par
01430     0x00, {\cf20 // 0b00000000}\par
01431     0x00, {\cf20 // 0b00000000}\par
01432     0x66, {\cf20 // 0b01100110}\par
01433     0x66, {\cf20 // 0b01100110}\par
01434     0x66, {\cf20 // 0b01100110}\par
01435     0x66, {\cf20 // 0b01100110}\par
01436     0x3c, {\cf20 // 0b00111100}\par
01437     0x18, {\cf20 // 0b00011000}\par
01438     0x18, {\cf20 // 0b00011000}\par
01439     0x18, {\cf20 // 0b00011000}\par
01440     0x18, {\cf20 // 0b00011000}\par
01441     0x3c, {\cf20 // 0b00111100}\par
01442     0x00, {\cf20 // 0b00000000}\par
01443     0x00, {\cf20 // 0b00000000}\par
01444     0x00, {\cf20 // 0b00000000}\par
01445     0x00, {\cf20 // 0b00000000}\par
01446     0x00, {\cf20 // 0b00000000}\par
01447     0x00, {\cf20 // 0b00000000}\par
01448     0xfe, {\cf20 // 0b11111110}\par
01449     0xc6, {\cf20 // 0b11000110}\par
01450     0x86, {\cf20 // 0b10000110}\par
01451     0xc, {\cf20 // 0b00001100}\par
01452     0x18, {\cf20 // 0b00011000}\par
01453     0x30, {\cf20 // 0b00110000}\par
01454     0x60, {\cf20 // 0b01100000}\par
01455     0xc2, {\cf20 // 0b11000010}\par
01456     0xc6, {\cf20 // 0b11000110}\par
01457     0xfe, {\cf20 // 0b11111110}\par
01458     0x00, {\cf20 // 0b00000000}\par
01459     0x00, {\cf20 // 0b00000000}\par
01460     0x00, {\cf20 // 0b00000000}\par
01461     0x00, {\cf20 // 0b00000000}\par
01462     0x00, {\cf20 // 0b00000000}\par
01463     0x00, {\cf20 // 0b00000000}\par
01464     0x3c, {\cf20 // 0b00111100}\par
01465     0x30, {\cf20 // 0b00110000}\par
01466     0x30, {\cf20 // 0b00110000}\par
01467     0x30, {\cf20 // 0b00110000}\par
01468     0x30, {\cf20 // 0b00110000}\par
01469     0x30, {\cf20 // 0b00110000}\par
01470     0x30, {\cf20 // 0b00110000}\par
01471     0x30, {\cf20 // 0b00110000}\par
01472     0x30, {\cf20 // 0b00110000}\par
01473     0x3c, {\cf20 // 0b00111100}\par
01474     0x00, {\cf20 // 0b00000000}\par
01475     0x00, {\cf20 // 0b00000000}\par
01476     0x00, {\cf20 // 0b00000000}\par
01477     0x00, {\cf20 // 0b00000000}\par
01478     0x00, {\cf20 // 0b00000000}\par
01479     0x00, {\cf20 // 0b00000000}\par
01480     0x00, {\cf20 // 0b00000000}\par
01481     0x80, {\cf20 // 0b10000000}\par
01482     0xc0, {\cf20 // 0b11000000}\par
01483     0xe0, {\cf20 // 0b11100000}\par
01484     0x70, {\cf20 // 0b01110000}\par
01485     0x38, {\cf20 // 0b00111000}\par
01486     0x1c, {\cf20 // 0b00011100}\par
01487     0xe, {\cf20 // 0b00001110}\par
01488     0x6, {\cf20 // 0b00000110}\par
01489     0x2, {\cf20 // 0b00000010}\par
01490     0x00, {\cf20 // 0b00000000}\par
01491     0x00, {\cf20 // 0b00000000}\par
01492     0x00, {\cf20 // 0b00000000}\par
01493     0x00, {\cf20 // 0b00000000}\par
01494     0x00, {\cf20 // 0b00000000}\par
01495     0x00, {\cf20 // 0b00000000}\par
01496     0x3c, {\cf20 // 0b00111100}\par
01497     0xc, {\cf20 // 0b00001100}\par
01498     0xc, {\cf20 // 0b00001100}\par
01499     0xc, {\cf20 // 0b00001100}\par
01500     0xc, {\cf20 // 0b00001100}\par
01501     0xc, {\cf20 // 0b00001100}\par
01502     0xc, {\cf20 // 0b00001100}\par
01503     0xc, {\cf20 // 0b00001100}\par
01504     0xc, {\cf20 // 0b00001100}\par
01505     0x3c, {\cf20 // 0b00111100}\par
01506     0x00, {\cf20 // 0b00000000}\par
01507     0x00, {\cf20 // 0b00000000}\par
01508     0x00, {\cf20 // 0b00000000}\par
01509     0x00, {\cf20 // 0b00000000}\par
01510     0x10, {\cf20 // 0b00010000}\par
01511     0x38, {\cf20 // 0b00111000}\par
01512     0x6c, {\cf20 // 0b01101100}\par
01513     0xc6, {\cf20 // 0b11000110}\par
01514     0x00, {\cf20 // 0b00000000}\par
01515     0x00, {\cf20 // 0b00000000}\par
01516     0x00, {\cf20 // 0b00000000}\par
01517     0x00, {\cf20 // 0b00000000}\par
01518     0x00, {\cf20 // 0b00000000}\par
01519     0x00, {\cf20 // 0b00000000}\par
01520     0x00, {\cf20 // 0b00000000}\par
01521     0x00, {\cf20 // 0b00000000}\par
01522     0x00, {\cf20 // 0b00000000}\par
01523     0x00, {\cf20 // 0b00000000}\par
01524     0x00, {\cf20 // 0b00000000}\par
01525     0x00, {\cf20 // 0b00000000}\par
01526     0x00, {\cf20 // 0b00000000}\par
01527     0x00, {\cf20 // 0b00000000}\par
01528     0x00, {\cf20 // 0b00000000}\par
01529     0x00, {\cf20 // 0b00000000}\par
01530     0x00, {\cf20 // 0b00000000}\par
01531     0x00, {\cf20 // 0b00000000}\par
01532     0x00, {\cf20 // 0b00000000}\par
01533     0x00, {\cf20 // 0b00000000}\par
01534     0x00, {\cf20 // 0b00000000}\par
01535     0x00, {\cf20 // 0b00000000}\par
01536     0x00, {\cf20 // 0b00000000}\par
01537     0x00, {\cf20 // 0b00000000}\par
01538     0x00, {\cf20 // 0b00000000}\par
01539     0xff, {\cf20 // 0b11111111}\par
01540     0x00, {\cf20 // 0b00000000}\par
01541     0x00, {\cf20 // 0b00000000}\par
01542     0x00, {\cf20 // 0b00000000}\par
01543     0x30, {\cf20 // 0b00110000}\par
01544     0x18, {\cf20 // 0b00011000}\par
01545     0xc, {\cf20 // 0b00001100}\par
01546     0x00, {\cf20 // 0b00000000}\par
01547     0x00, {\cf20 // 0b00000000}\par
01548     0x00, {\cf20 // 0b00000000}\par
01549     0x00, {\cf20 // 0b00000000}\par
01550     0x00, {\cf20 // 0b00000000}\par
01551     0x00, {\cf20 // 0b00000000}\par
01552     0x00, {\cf20 // 0b00000000}\par
01553     0x00, {\cf20 // 0b00000000}\par
01554     0x00, {\cf20 // 0b00000000}\par
01555     0x00, {\cf20 // 0b00000000}\par
01556     0x00, {\cf20 // 0b00000000}\par
01557     0x00, {\cf20 // 0b00000000}\par
01558     0x00, {\cf20 // 0b00000000}\par
01559     0x00, {\cf20 // 0b00000000}\par
01560     0x00, {\cf20 // 0b00000000}\par
01561     0x00, {\cf20 // 0b00000000}\par
01562     0x00, {\cf20 // 0b00000000}\par
01563     0x78, {\cf20 // 0b01111000}\par
01564     0xc, {\cf20 // 0b00001100}\par
01565     0x7c, {\cf20 // 0b01111100}\par
01566     0xcc, {\cf20 // 0b11001100}\par
01567     0xcc, {\cf20 // 0b11001100}\par
01568     0xcc, {\cf20 // 0b11001100}\par
01569     0x76, {\cf20 // 0b01110110}\par
01570     0x00, {\cf20 // 0b00000000}\par
01571     0x00, {\cf20 // 0b00000000}\par
01572     0x00, {\cf20 // 0b00000000}\par
01573     0x00, {\cf20 // 0b00000000}\par
01574     0x00, {\cf20 // 0b00000000}\par
01575     0x00, {\cf20 // 0b00000000}\par
01576     0xe0, {\cf20 // 0b11100000}\par
01577     0x60, {\cf20 // 0b01100000}\par
01578     0x60, {\cf20 // 0b01100000}\par
01579     0x78, {\cf20 // 0b01111000}\par
01580     0x6c, {\cf20 // 0b01101100}\par
01581     0x66, {\cf20 // 0b01100110}\par
01582     0x66, {\cf20 // 0b01100110}\par
01583     0x66, {\cf20 // 0b01100110}\par
01584     0x66, {\cf20 // 0b01100110}\par
01585     0x7c, {\cf20 // 0b01111100}\par
01586     0x00, {\cf20 // 0b00000000}\par
01587     0x00, {\cf20 // 0b00000000}\par
01588     0x00, {\cf20 // 0b00000000}\par
01589     0x00, {\cf20 // 0b00000000}\par
01590     0x00, {\cf20 // 0b00000000}\par
01591     0x00, {\cf20 // 0b00000000}\par
01592     0x00, {\cf20 // 0b00000000}\par
01593     0x00, {\cf20 // 0b00000000}\par
01594     0x00, {\cf20 // 0b00000000}\par
01595     0x7c, {\cf20 // 0b01111100}\par
01596     0xc6, {\cf20 // 0b11000110}\par
01597     0xc0, {\cf20 // 0b11000000}\par
01598     0xc0, {\cf20 // 0b11000000}\par
01599     0xc0, {\cf20 // 0b11000000}\par
01600     0xc6, {\cf20 // 0b11000110}\par
01601     0x7c, {\cf20 // 0b01111100}\par
01602     0x00, {\cf20 // 0b00000000}\par
01603     0x00, {\cf20 // 0b00000000}\par
01604     0x00, {\cf20 // 0b00000000}\par
01605     0x00, {\cf20 // 0b00000000}\par
01606     0x00, {\cf20 // 0b00000000}\par
01607     0x00, {\cf20 // 0b00000000}\par
01608     0x1c, {\cf20 // 0b00011100}\par
01609     0xc, {\cf20 // 0b00001100}\par
01610     0xc, {\cf20 // 0b00001100}\par
01611     0x3c, {\cf20 // 0b00111100}\par
01612     0x6c, {\cf20 // 0b01101100}\par
01613     0xcc, {\cf20 // 0b11001100}\par
01614     0xcc, {\cf20 // 0b11001100}\par
01615     0xcc, {\cf20 // 0b11001100}\par
01616     0xcc, {\cf20 // 0b11001100}\par
01617     0x76, {\cf20 // 0b01110110}\par
01618     0x00, {\cf20 // 0b00000000}\par
01619     0x00, {\cf20 // 0b00000000}\par
01620     0x00, {\cf20 // 0b00000000}\par
01621     0x00, {\cf20 // 0b00000000}\par
01622     0x00, {\cf20 // 0b00000000}\par
01623     0x00, {\cf20 // 0b00000000}\par
01624     0x00, {\cf20 // 0b00000000}\par
01625     0x00, {\cf20 // 0b00000000}\par
01626     0x00, {\cf20 // 0b00000000}\par
01627     0x7c, {\cf20 // 0b01111100}\par
01628     0xc6, {\cf20 // 0b11000110}\par
01629     0xfe, {\cf20 // 0b11111110}\par
01630     0xc0, {\cf20 // 0b11000000}\par
01631     0xc0, {\cf20 // 0b11000000}\par
01632     0xc6, {\cf20 // 0b11000110}\par
01633     0x7c, {\cf20 // 0b01111100}\par
01634     0x00, {\cf20 // 0b00000000}\par
01635     0x00, {\cf20 // 0b00000000}\par
01636     0x00, {\cf20 // 0b00000000}\par
01637     0x00, {\cf20 // 0b00000000}\par
01638     0x00, {\cf20 // 0b00000000}\par
01639     0x00, {\cf20 // 0b00000000}\par
01640     0x1c, {\cf20 // 0b00011100}\par
01641     0x36, {\cf20 // 0b00110110}\par
01642     0x32, {\cf20 // 0b00110010}\par
01643     0x30, {\cf20 // 0b00110000}\par
01644     0x78, {\cf20 // 0b01111000}\par
01645     0x30, {\cf20 // 0b00110000}\par
01646     0x30, {\cf20 // 0b00110000}\par
01647     0x30, {\cf20 // 0b00110000}\par
01648     0x30, {\cf20 // 0b00110000}\par
01649     0x78, {\cf20 // 0b01111000}\par
01650     0x00, {\cf20 // 0b00000000}\par
01651     0x00, {\cf20 // 0b00000000}\par
01652     0x00, {\cf20 // 0b00000000}\par
01653     0x00, {\cf20 // 0b00000000}\par
01654     0x00, {\cf20 // 0b00000000}\par
01655     0x00, {\cf20 // 0b00000000}\par
01656     0x00, {\cf20 // 0b00000000}\par
01657     0x00, {\cf20 // 0b00000000}\par
01658     0x00, {\cf20 // 0b00000000}\par
01659     0x76, {\cf20 // 0b01110110}\par
01660     0xcc, {\cf20 // 0b11001100}\par
01661     0xcc, {\cf20 // 0b11001100}\par
01662     0xcc, {\cf20 // 0b11001100}\par
01663     0xcc, {\cf20 // 0b11001100}\par
01664     0xcc, {\cf20 // 0b11001100}\par
01665     0x7c, {\cf20 // 0b01111100}\par
01666     0xc, {\cf20 // 0b00001100}\par
01667     0xcc, {\cf20 // 0b11001100}\par
01668     0x78, {\cf20 // 0b01111000}\par
01669     0x00, {\cf20 // 0b00000000}\par
01670     0x00, {\cf20 // 0b00000000}\par
01671     0x00, {\cf20 // 0b00000000}\par
01672     0xe0, {\cf20 // 0b11100000}\par
01673     0x60, {\cf20 // 0b01100000}\par
01674     0x60, {\cf20 // 0b01100000}\par
01675     0x6c, {\cf20 // 0b01101100}\par
01676     0x76, {\cf20 // 0b01110110}\par
01677     0x66, {\cf20 // 0b01100110}\par
01678     0x66, {\cf20 // 0b01100110}\par
01679     0x66, {\cf20 // 0b01100110}\par
01680     0x66, {\cf20 // 0b01100110}\par
01681     0xe6, {\cf20 // 0b11100110}\par
01682     0x00, {\cf20 // 0b00000000}\par
01683     0x00, {\cf20 // 0b00000000}\par
01684     0x00, {\cf20 // 0b00000000}\par
01685     0x00, {\cf20 // 0b00000000}\par
01686     0x00, {\cf20 // 0b00000000}\par
01687     0x00, {\cf20 // 0b00000000}\par
01688     0x18, {\cf20 // 0b00011000}\par
01689     0x18, {\cf20 // 0b00011000}\par
01690     0x00, {\cf20 // 0b00000000}\par
01691     0x38, {\cf20 // 0b00111000}\par
01692     0x18, {\cf20 // 0b00011000}\par
01693     0x18, {\cf20 // 0b00011000}\par
01694     0x18, {\cf20 // 0b00011000}\par
01695     0x18, {\cf20 // 0b00011000}\par
01696     0x18, {\cf20 // 0b00011000}\par
01697     0x3c, {\cf20 // 0b00111100}\par
01698     0x00, {\cf20 // 0b00000000}\par
01699     0x00, {\cf20 // 0b00000000}\par
01700     0x00, {\cf20 // 0b00000000}\par
01701     0x00, {\cf20 // 0b00000000}\par
01702     0x00, {\cf20 // 0b00000000}\par
01703     0x00, {\cf20 // 0b00000000}\par
01704     0x6, {\cf20 // 0b00000110}\par
01705     0x6, {\cf20 // 0b00000110}\par
01706     0x00, {\cf20 // 0b00000000}\par
01707     0xe, {\cf20 // 0b00001110}\par
01708     0x6, {\cf20 // 0b00000110}\par
01709     0x6, {\cf20 // 0b00000110}\par
01710     0x6, {\cf20 // 0b00000110}\par
01711     0x6, {\cf20 // 0b00000110}\par
01712     0x6, {\cf20 // 0b00000110}\par
01713     0x6, {\cf20 // 0b00000110}\par
01714     0x66, {\cf20 // 0b01100110}\par
01715     0x66, {\cf20 // 0b01100110}\par
01716     0x3c, {\cf20 // 0b00111100}\par
01717     0x00, {\cf20 // 0b00000000}\par
01718     0x00, {\cf20 // 0b00000000}\par
01719     0x00, {\cf20 // 0b00000000}\par
01720     0xe0, {\cf20 // 0b11100000}\par
01721     0x60, {\cf20 // 0b01100000}\par
01722     0x60, {\cf20 // 0b01100000}\par
01723     0x66, {\cf20 // 0b01100110}\par
01724     0x6c, {\cf20 // 0b01101100}\par
01725     0x78, {\cf20 // 0b01111000}\par
01726     0x78, {\cf20 // 0b01111000}\par
01727     0x6c, {\cf20 // 0b01101100}\par
01728     0x66, {\cf20 // 0b01100110}\par
01729     0xe6, {\cf20 // 0b11100110}\par
01730     0x00, {\cf20 // 0b00000000}\par
01731     0x00, {\cf20 // 0b00000000}\par
01732     0x00, {\cf20 // 0b00000000}\par
01733     0x00, {\cf20 // 0b00000000}\par
01734     0x00, {\cf20 // 0b00000000}\par
01735     0x00, {\cf20 // 0b00000000}\par
01736     0x38, {\cf20 // 0b00111000}\par
01737     0x18, {\cf20 // 0b00011000}\par
01738     0x18, {\cf20 // 0b00011000}\par
01739     0x18, {\cf20 // 0b00011000}\par
01740     0x18, {\cf20 // 0b00011000}\par
01741     0x18, {\cf20 // 0b00011000}\par
01742     0x18, {\cf20 // 0b00011000}\par
01743     0x18, {\cf20 // 0b00011000}\par
01744     0x18, {\cf20 // 0b00011000}\par
01745     0x3c, {\cf20 // 0b00111100}\par
01746     0x00, {\cf20 // 0b00000000}\par
01747     0x00, {\cf20 // 0b00000000}\par
01748     0x00, {\cf20 // 0b00000000}\par
01749     0x00, {\cf20 // 0b00000000}\par
01750     0x00, {\cf20 // 0b00000000}\par
01751     0x00, {\cf20 // 0b00000000}\par
01752     0x00, {\cf20 // 0b00000000}\par
01753     0x00, {\cf20 // 0b00000000}\par
01754     0x00, {\cf20 // 0b00000000}\par
01755     0xec, {\cf20 // 0b11101100}\par
01756     0xfe, {\cf20 // 0b11111110}\par
01757     0xd6, {\cf20 // 0b11010110}\par
01758     0xd6, {\cf20 // 0b11010110}\par
01759     0xd6, {\cf20 // 0b11010110}\par
01760     0xd6, {\cf20 // 0b11010110}\par
01761     0xc6, {\cf20 // 0b11000110}\par
01762     0x00, {\cf20 // 0b00000000}\par
01763     0x00, {\cf20 // 0b00000000}\par
01764     0x00, {\cf20 // 0b00000000}\par
01765     0x00, {\cf20 // 0b00000000}\par
01766     0x00, {\cf20 // 0b00000000}\par
01767     0x00, {\cf20 // 0b00000000}\par
01768     0x00, {\cf20 // 0b00000000}\par
01769     0x00, {\cf20 // 0b00000000}\par
01770     0x00, {\cf20 // 0b00000000}\par
01771     0xdc, {\cf20 // 0b11011100}\par
01772     0x66, {\cf20 // 0b01100110}\par
01773     0x66, {\cf20 // 0b01100110}\par
01774     0x66, {\cf20 // 0b01100110}\par
01775     0x66, {\cf20 // 0b01100110}\par
01776     0x66, {\cf20 // 0b01100110}\par
01777     0x66, {\cf20 // 0b01100110}\par
01778     0x00, {\cf20 // 0b00000000}\par
01779     0x00, {\cf20 // 0b00000000}\par
01780     0x00, {\cf20 // 0b00000000}\par
01781     0x00, {\cf20 // 0b00000000}\par
01782     0x00, {\cf20 // 0b00000000}\par
01783     0x00, {\cf20 // 0b00000000}\par
01784     0x00, {\cf20 // 0b00000000}\par
01785     0x00, {\cf20 // 0b00000000}\par
01786     0x00, {\cf20 // 0b00000000}\par
01787     0x7c, {\cf20 // 0b01111100}\par
01788     0xc6, {\cf20 // 0b11000110}\par
01789     0xc6, {\cf20 // 0b11000110}\par
01790     0xc6, {\cf20 // 0b11000110}\par
01791     0xc6, {\cf20 // 0b11000110}\par
01792     0xc6, {\cf20 // 0b11000110}\par
01793     0x7c, {\cf20 // 0b01111100}\par
01794     0x00, {\cf20 // 0b00000000}\par
01795     0x00, {\cf20 // 0b00000000}\par
01796     0x00, {\cf20 // 0b00000000}\par
01797     0x00, {\cf20 // 0b00000000}\par
01798     0x00, {\cf20 // 0b00000000}\par
01799     0x00, {\cf20 // 0b00000000}\par
01800     0x00, {\cf20 // 0b00000000}\par
01801     0x00, {\cf20 // 0b00000000}\par
01802     0x00, {\cf20 // 0b00000000}\par
01803     0xdc, {\cf20 // 0b11011100}\par
01804     0x66, {\cf20 // 0b01100110}\par
01805     0x66, {\cf20 // 0b01100110}\par
01806     0x66, {\cf20 // 0b01100110}\par
01807     0x66, {\cf20 // 0b01100110}\par
01808     0x66, {\cf20 // 0b01100110}\par
01809     0x7c, {\cf20 // 0b01111100}\par
01810     0x60, {\cf20 // 0b01100000}\par
01811     0x60, {\cf20 // 0b01100000}\par
01812     0xf0, {\cf20 // 0b11110000}\par
01813     0x00, {\cf20 // 0b00000000}\par
01814     0x00, {\cf20 // 0b00000000}\par
01815     0x00, {\cf20 // 0b00000000}\par
01816     0x00, {\cf20 // 0b00000000}\par
01817     0x00, {\cf20 // 0b00000000}\par
01818     0x00, {\cf20 // 0b00000000}\par
01819     0x76, {\cf20 // 0b01110110}\par
01820     0xcc, {\cf20 // 0b11001100}\par
01821     0xcc, {\cf20 // 0b11001100}\par
01822     0xcc, {\cf20 // 0b11001100}\par
01823     0xcc, {\cf20 // 0b11001100}\par
01824     0xcc, {\cf20 // 0b11001100}\par
01825     0x7c, {\cf20 // 0b01111100}\par
01826     0xc, {\cf20 // 0b00001100}\par
01827     0xc, {\cf20 // 0b00001100}\par
01828     0x1e, {\cf20 // 0b00011110}\par
01829     0x00, {\cf20 // 0b00000000}\par
01830     0x00, {\cf20 // 0b00000000}\par
01831     0x00, {\cf20 // 0b00000000}\par
01832     0x00, {\cf20 // 0b00000000}\par
01833     0x00, {\cf20 // 0b00000000}\par
01834     0x00, {\cf20 // 0b00000000}\par
01835     0xdc, {\cf20 // 0b11011100}\par
01836     0x76, {\cf20 // 0b01110110}\par
01837     0x66, {\cf20 // 0b01100110}\par
01838     0x60, {\cf20 // 0b01100000}\par
01839     0x60, {\cf20 // 0b01100000}\par
01840     0x60, {\cf20 // 0b01100000}\par
01841     0xf0, {\cf20 // 0b11110000}\par
01842     0x00, {\cf20 // 0b00000000}\par
01843     0x00, {\cf20 // 0b00000000}\par
01844     0x00, {\cf20 // 0b00000000}\par
01845     0x00, {\cf20 // 0b00000000}\par
01846     0x00, {\cf20 // 0b00000000}\par
01847     0x00, {\cf20 // 0b00000000}\par
01848     0x00, {\cf20 // 0b00000000}\par
01849     0x00, {\cf20 // 0b00000000}\par
01850     0x00, {\cf20 // 0b00000000}\par
01851     0x7c, {\cf20 // 0b01111100}\par
01852     0xc6, {\cf20 // 0b11000110}\par
01853     0x60, {\cf20 // 0b01100000}\par
01854     0x38, {\cf20 // 0b00111000}\par
01855     0xc, {\cf20 // 0b00001100}\par
01856     0xc6, {\cf20 // 0b11000110}\par
01857     0x7c, {\cf20 // 0b01111100}\par
01858     0x00, {\cf20 // 0b00000000}\par
01859     0x00, {\cf20 // 0b00000000}\par
01860     0x00, {\cf20 // 0b00000000}\par
01861     0x00, {\cf20 // 0b00000000}\par
01862     0x00, {\cf20 // 0b00000000}\par
01863     0x00, {\cf20 // 0b00000000}\par
01864     0x10, {\cf20 // 0b00010000}\par
01865     0x30, {\cf20 // 0b00110000}\par
01866     0x30, {\cf20 // 0b00110000}\par
01867     0xfc, {\cf20 // 0b11111100}\par
01868     0x30, {\cf20 // 0b00110000}\par
01869     0x30, {\cf20 // 0b00110000}\par
01870     0x30, {\cf20 // 0b00110000}\par
01871     0x30, {\cf20 // 0b00110000}\par
01872     0x36, {\cf20 // 0b00110110}\par
01873     0x1c, {\cf20 // 0b00011100}\par
01874     0x00, {\cf20 // 0b00000000}\par
01875     0x00, {\cf20 // 0b00000000}\par
01876     0x00, {\cf20 // 0b00000000}\par
01877     0x00, {\cf20 // 0b00000000}\par
01878     0x00, {\cf20 // 0b00000000}\par
01879     0x00, {\cf20 // 0b00000000}\par
01880     0x00, {\cf20 // 0b00000000}\par
01881     0x00, {\cf20 // 0b00000000}\par
01882     0x00, {\cf20 // 0b00000000}\par
01883     0xcc, {\cf20 // 0b11001100}\par
01884     0xcc, {\cf20 // 0b11001100}\par
01885     0xcc, {\cf20 // 0b11001100}\par
01886     0xcc, {\cf20 // 0b11001100}\par
01887     0xcc, {\cf20 // 0b11001100}\par
01888     0xcc, {\cf20 // 0b11001100}\par
01889     0x76, {\cf20 // 0b01110110}\par
01890     0x00, {\cf20 // 0b00000000}\par
01891     0x00, {\cf20 // 0b00000000}\par
01892     0x00, {\cf20 // 0b00000000}\par
01893     0x00, {\cf20 // 0b00000000}\par
01894     0x00, {\cf20 // 0b00000000}\par
01895     0x00, {\cf20 // 0b00000000}\par
01896     0x00, {\cf20 // 0b00000000}\par
01897     0x00, {\cf20 // 0b00000000}\par
01898     0x00, {\cf20 // 0b00000000}\par
01899     0xc6, {\cf20 // 0b11000110}\par
01900     0xc6, {\cf20 // 0b11000110}\par
01901     0xc6, {\cf20 // 0b11000110}\par
01902     0xc6, {\cf20 // 0b11000110}\par
01903     0xc6, {\cf20 // 0b11000110}\par
01904     0x6c, {\cf20 // 0b01101100}\par
01905     0x38, {\cf20 // 0b00111000}\par
01906     0x00, {\cf20 // 0b00000000}\par
01907     0x00, {\cf20 // 0b00000000}\par
01908     0x00, {\cf20 // 0b00000000}\par
01909     0x00, {\cf20 // 0b00000000}\par
01910     0x00, {\cf20 // 0b00000000}\par
01911     0x00, {\cf20 // 0b00000000}\par
01912     0x00, {\cf20 // 0b00000000}\par
01913     0x00, {\cf20 // 0b00000000}\par
01914     0x00, {\cf20 // 0b00000000}\par
01915     0xc6, {\cf20 // 0b11000110}\par
01916     0xc6, {\cf20 // 0b11000110}\par
01917     0xd6, {\cf20 // 0b11010110}\par
01918     0xd6, {\cf20 // 0b11010110}\par
01919     0xd6, {\cf20 // 0b11010110}\par
01920     0xfe, {\cf20 // 0b11111110}\par
01921     0x6c, {\cf20 // 0b01101100}\par
01922     0x00, {\cf20 // 0b00000000}\par
01923     0x00, {\cf20 // 0b00000000}\par
01924     0x00, {\cf20 // 0b00000000}\par
01925     0x00, {\cf20 // 0b00000000}\par
01926     0x00, {\cf20 // 0b00000000}\par
01927     0x00, {\cf20 // 0b00000000}\par
01928     0x00, {\cf20 // 0b00000000}\par
01929     0x00, {\cf20 // 0b00000000}\par
01930     0x00, {\cf20 // 0b00000000}\par
01931     0xc6, {\cf20 // 0b11000110}\par
01932     0x6c, {\cf20 // 0b01101100}\par
01933     0x38, {\cf20 // 0b00111000}\par
01934     0x38, {\cf20 // 0b00111000}\par
01935     0x38, {\cf20 // 0b00111000}\par
01936     0x6c, {\cf20 // 0b01101100}\par
01937     0xc6, {\cf20 // 0b11000110}\par
01938     0x00, {\cf20 // 0b00000000}\par
01939     0x00, {\cf20 // 0b00000000}\par
01940     0x00, {\cf20 // 0b00000000}\par
01941     0x00, {\cf20 // 0b00000000}\par
01942     0x00, {\cf20 // 0b00000000}\par
01943     0x00, {\cf20 // 0b00000000}\par
01944     0x00, {\cf20 // 0b00000000}\par
01945     0x00, {\cf20 // 0b00000000}\par
01946     0x00, {\cf20 // 0b00000000}\par
01947     0xc6, {\cf20 // 0b11000110}\par
01948     0xc6, {\cf20 // 0b11000110}\par
01949     0xc6, {\cf20 // 0b11000110}\par
01950     0xc6, {\cf20 // 0b11000110}\par
01951     0xc6, {\cf20 // 0b11000110}\par
01952     0xc6, {\cf20 // 0b11000110}\par
01953     0x7e, {\cf20 // 0b01111110}\par
01954     0x6, {\cf20 // 0b00000110}\par
01955     0xc, {\cf20 // 0b00001100}\par
01956     0xf8, {\cf20 // 0b11111000}\par
01957     0x00, {\cf20 // 0b00000000}\par
01958     0x00, {\cf20 // 0b00000000}\par
01959     0x00, {\cf20 // 0b00000000}\par
01960     0x00, {\cf20 // 0b00000000}\par
01961     0x00, {\cf20 // 0b00000000}\par
01962     0x00, {\cf20 // 0b00000000}\par
01963     0xfe, {\cf20 // 0b11111110}\par
01964     0xcc, {\cf20 // 0b11001100}\par
01965     0x18, {\cf20 // 0b00011000}\par
01966     0x30, {\cf20 // 0b00110000}\par
01967     0x60, {\cf20 // 0b01100000}\par
01968     0xc6, {\cf20 // 0b11000110}\par
01969     0xfe, {\cf20 // 0b11111110}\par
01970     0x00, {\cf20 // 0b00000000}\par
01971     0x00, {\cf20 // 0b00000000}\par
01972     0x00, {\cf20 // 0b00000000}\par
01973     0x00, {\cf20 // 0b00000000}\par
01974     0x00, {\cf20 // 0b00000000}\par
01975     0x00, {\cf20 // 0b00000000}\par
01976     0xe, {\cf20 // 0b00001110}\par
01977     0x18, {\cf20 // 0b00011000}\par
01978     0x18, {\cf20 // 0b00011000}\par
01979     0x18, {\cf20 // 0b00011000}\par
01980     0x70, {\cf20 // 0b01110000}\par
01981     0x18, {\cf20 // 0b00011000}\par
01982     0x18, {\cf20 // 0b00011000}\par
01983     0x18, {\cf20 // 0b00011000}\par
01984     0x18, {\cf20 // 0b00011000}\par
01985     0xe, {\cf20 // 0b00001110}\par
01986     0x00, {\cf20 // 0b00000000}\par
01987     0x00, {\cf20 // 0b00000000}\par
01988     0x00, {\cf20 // 0b00000000}\par
01989     0x00, {\cf20 // 0b00000000}\par
01990     0x00, {\cf20 // 0b00000000}\par
01991     0x00, {\cf20 // 0b00000000}\par
01992     0x18, {\cf20 // 0b00011000}\par
01993     0x18, {\cf20 // 0b00011000}\par
01994     0x18, {\cf20 // 0b00011000}\par
01995     0x18, {\cf20 // 0b00011000}\par
01996     0x18, {\cf20 // 0b00011000}\par
01997     0x18, {\cf20 // 0b00011000}\par
01998     0x18, {\cf20 // 0b00011000}\par
01999     0x18, {\cf20 // 0b00011000}\par
02000     0x18, {\cf20 // 0b00011000}\par
02001     0x18, {\cf20 // 0b00011000}\par
02002     0x00, {\cf20 // 0b00000000}\par
02003     0x00, {\cf20 // 0b00000000}\par
02004     0x00, {\cf20 // 0b00000000}\par
02005     0x00, {\cf20 // 0b00000000}\par
02006     0x00, {\cf20 // 0b00000000}\par
02007     0x00, {\cf20 // 0b00000000}\par
02008     0x70, {\cf20 // 0b01110000}\par
02009     0x18, {\cf20 // 0b00011000}\par
02010     0x18, {\cf20 // 0b00011000}\par
02011     0x18, {\cf20 // 0b00011000}\par
02012     0xe, {\cf20 // 0b00001110}\par
02013     0x18, {\cf20 // 0b00011000}\par
02014     0x18, {\cf20 // 0b00011000}\par
02015     0x18, {\cf20 // 0b00011000}\par
02016     0x18, {\cf20 // 0b00011000}\par
02017     0x70, {\cf20 // 0b01110000}\par
02018     0x00, {\cf20 // 0b00000000}\par
02019     0x00, {\cf20 // 0b00000000}\par
02020     0x00, {\cf20 // 0b00000000}\par
02021     0x00, {\cf20 // 0b00000000}\par
02022     0x00, {\cf20 // 0b00000000}\par
02023     0x76, {\cf20 // 0b01110110}\par
02024     0xdc, {\cf20 // 0b11011100}\par
02025     0x00, {\cf20 // 0b00000000}\par
02026     0x00, {\cf20 // 0b00000000}\par
02027     0x00, {\cf20 // 0b00000000}\par
02028     0x00, {\cf20 // 0b00000000}\par
02029     0x00, {\cf20 // 0b00000000}\par
02030     0x00, {\cf20 // 0b00000000}\par
02031     0x00, {\cf20 // 0b00000000}\par
02032     0x00, {\cf20 // 0b00000000}\par
02033     0x00, {\cf20 // 0b00000000}\par
02034     0x00, {\cf20 // 0b00000000}\par
02035     0x00, {\cf20 // 0b00000000}\par
02036     0x00, {\cf20 // 0b00000000}\par
02037     0x00, {\cf20 // 0b00000000}\par
02038     0x00, {\cf20 // 0b00000000}\par
02039     0x00, {\cf20 // 0b00000000}\par
02040     0x00, {\cf20 // 0b00000000}\par
02041     0x00, {\cf20 // 0b00000000}\par
02042     0x10, {\cf20 // 0b00010000}\par
02043     0x38, {\cf20 // 0b00111000}\par
02044     0x6c, {\cf20 // 0b01101100}\par
02045     0xc6, {\cf20 // 0b11000110}\par
02046     0xc6, {\cf20 // 0b11000110}\par
02047     0xc6, {\cf20 // 0b11000110}\par
02048     0xfe, {\cf20 // 0b11111110}\par
02049     0x00, {\cf20 // 0b00000000}\par
02050     0x00, {\cf20 // 0b00000000}\par
02051     0x00, {\cf20 // 0b00000000}\par
02052     0x00, {\cf20 // 0b00000000}\par
02053     0x00, {\cf20 // 0b00000000}\par
02054     0x00, {\cf20 // 0b00000000}\par
02055     0x00, {\cf20 // 0b00000000}\par
02056     0x3c, {\cf20 // 0b00111100}\par
02057     0x66, {\cf20 // 0b01100110}\par
02058     0xc2, {\cf20 // 0b11000010}\par
02059     0xc0, {\cf20 // 0b11000000}\par
02060     0xc0, {\cf20 // 0b11000000}\par
02061     0xc0, {\cf20 // 0b11000000}\par
02062     0xc0, {\cf20 // 0b11000000}\par
02063     0xc2, {\cf20 // 0b11000010}\par
02064     0x66, {\cf20 // 0b01100110}\par
02065     0x3c, {\cf20 // 0b00111100}\par
02066     0x18, {\cf20 // 0b00011000}\par
02067     0x70, {\cf20 // 0b01110000}\par
02068     0x00, {\cf20 // 0b00000000}\par
02069     0x00, {\cf20 // 0b00000000}\par
02070     0x00, {\cf20 // 0b00000000}\par
02071     0x00, {\cf20 // 0b00000000}\par
02072     0xcc, {\cf20 // 0b11001100}\par
02073     0x00, {\cf20 // 0b00000000}\par
02074     0x00, {\cf20 // 0b00000000}\par
02075     0xcc, {\cf20 // 0b11001100}\par
02076     0xcc, {\cf20 // 0b11001100}\par
02077     0xcc, {\cf20 // 0b11001100}\par
02078     0xcc, {\cf20 // 0b11001100}\par
02079     0xcc, {\cf20 // 0b11001100}\par
02080     0xcc, {\cf20 // 0b11001100}\par
02081     0x76, {\cf20 // 0b01110110}\par
02082     0x00, {\cf20 // 0b00000000}\par
02083     0x00, {\cf20 // 0b00000000}\par
02084     0x00, {\cf20 // 0b00000000}\par
02085     0x00, {\cf20 // 0b00000000}\par
02086     0x00, {\cf20 // 0b00000000}\par
02087     0xc, {\cf20 // 0b00001100}\par
02088     0x18, {\cf20 // 0b00011000}\par
02089     0x30, {\cf20 // 0b00110000}\par
02090     0x00, {\cf20 // 0b00000000}\par
02091     0x7c, {\cf20 // 0b01111100}\par
02092     0xc6, {\cf20 // 0b11000110}\par
02093     0xfe, {\cf20 // 0b11111110}\par
02094     0xc0, {\cf20 // 0b11000000}\par
02095     0xc0, {\cf20 // 0b11000000}\par
02096     0xc6, {\cf20 // 0b11000110}\par
02097     0x7c, {\cf20 // 0b01111100}\par
02098     0x00, {\cf20 // 0b00000000}\par
02099     0x00, {\cf20 // 0b00000000}\par
02100     0x00, {\cf20 // 0b00000000}\par
02101     0x00, {\cf20 // 0b00000000}\par
02102     0x00, {\cf20 // 0b00000000}\par
02103     0x10, {\cf20 // 0b00010000}\par
02104     0x38, {\cf20 // 0b00111000}\par
02105     0x6c, {\cf20 // 0b01101100}\par
02106     0x00, {\cf20 // 0b00000000}\par
02107     0x78, {\cf20 // 0b01111000}\par
02108     0xc, {\cf20 // 0b00001100}\par
02109     0x7c, {\cf20 // 0b01111100}\par
02110     0xcc, {\cf20 // 0b11001100}\par
02111     0xcc, {\cf20 // 0b11001100}\par
02112     0xcc, {\cf20 // 0b11001100}\par
02113     0x76, {\cf20 // 0b01110110}\par
02114     0x00, {\cf20 // 0b00000000}\par
02115     0x00, {\cf20 // 0b00000000}\par
02116     0x00, {\cf20 // 0b00000000}\par
02117     0x00, {\cf20 // 0b00000000}\par
02118     0x00, {\cf20 // 0b00000000}\par
02119     0x00, {\cf20 // 0b00000000}\par
02120     0xcc, {\cf20 // 0b11001100}\par
02121     0x00, {\cf20 // 0b00000000}\par
02122     0x00, {\cf20 // 0b00000000}\par
02123     0x78, {\cf20 // 0b01111000}\par
02124     0xc, {\cf20 // 0b00001100}\par
02125     0x7c, {\cf20 // 0b01111100}\par
02126     0xcc, {\cf20 // 0b11001100}\par
02127     0xcc, {\cf20 // 0b11001100}\par
02128     0xcc, {\cf20 // 0b11001100}\par
02129     0x76, {\cf20 // 0b01110110}\par
02130     0x00, {\cf20 // 0b00000000}\par
02131     0x00, {\cf20 // 0b00000000}\par
02132     0x00, {\cf20 // 0b00000000}\par
02133     0x00, {\cf20 // 0b00000000}\par
02134     0x00, {\cf20 // 0b00000000}\par
02135     0x60, {\cf20 // 0b01100000}\par
02136     0x30, {\cf20 // 0b00110000}\par
02137     0x18, {\cf20 // 0b00011000}\par
02138     0x00, {\cf20 // 0b00000000}\par
02139     0x78, {\cf20 // 0b01111000}\par
02140     0xc, {\cf20 // 0b00001100}\par
02141     0x7c, {\cf20 // 0b01111100}\par
02142     0xcc, {\cf20 // 0b11001100}\par
02143     0xcc, {\cf20 // 0b11001100}\par
02144     0xcc, {\cf20 // 0b11001100}\par
02145     0x76, {\cf20 // 0b01110110}\par
02146     0x00, {\cf20 // 0b00000000}\par
02147     0x00, {\cf20 // 0b00000000}\par
02148     0x00, {\cf20 // 0b00000000}\par
02149     0x00, {\cf20 // 0b00000000}\par
02150     0x00, {\cf20 // 0b00000000}\par
02151     0x38, {\cf20 // 0b00111000}\par
02152     0x6c, {\cf20 // 0b01101100}\par
02153     0x38, {\cf20 // 0b00111000}\par
02154     0x00, {\cf20 // 0b00000000}\par
02155     0x78, {\cf20 // 0b01111000}\par
02156     0xc, {\cf20 // 0b00001100}\par
02157     0x7c, {\cf20 // 0b01111100}\par
02158     0xcc, {\cf20 // 0b11001100}\par
02159     0xcc, {\cf20 // 0b11001100}\par
02160     0xcc, {\cf20 // 0b11001100}\par
02161     0x76, {\cf20 // 0b01110110}\par
02162     0x00, {\cf20 // 0b00000000}\par
02163     0x00, {\cf20 // 0b00000000}\par
02164     0x00, {\cf20 // 0b00000000}\par
02165     0x00, {\cf20 // 0b00000000}\par
02166     0x00, {\cf20 // 0b00000000}\par
02167     0x00, {\cf20 // 0b00000000}\par
02168     0x00, {\cf20 // 0b00000000}\par
02169     0x00, {\cf20 // 0b00000000}\par
02170     0x00, {\cf20 // 0b00000000}\par
02171     0x7c, {\cf20 // 0b01111100}\par
02172     0xc6, {\cf20 // 0b11000110}\par
02173     0xc0, {\cf20 // 0b11000000}\par
02174     0xc0, {\cf20 // 0b11000000}\par
02175     0xc0, {\cf20 // 0b11000000}\par
02176     0xc6, {\cf20 // 0b11000110}\par
02177     0x7c, {\cf20 // 0b01111100}\par
02178     0x18, {\cf20 // 0b00011000}\par
02179     0x70, {\cf20 // 0b01110000}\par
02180     0x00, {\cf20 // 0b00000000}\par
02181     0x00, {\cf20 // 0b00000000}\par
02182     0x00, {\cf20 // 0b00000000}\par
02183     0x10, {\cf20 // 0b00010000}\par
02184     0x38, {\cf20 // 0b00111000}\par
02185     0x6c, {\cf20 // 0b01101100}\par
02186     0x00, {\cf20 // 0b00000000}\par
02187     0x7c, {\cf20 // 0b01111100}\par
02188     0xc6, {\cf20 // 0b11000110}\par
02189     0xfe, {\cf20 // 0b11111110}\par
02190     0xc0, {\cf20 // 0b11000000}\par
02191     0xc0, {\cf20 // 0b11000000}\par
02192     0xc6, {\cf20 // 0b11000110}\par
02193     0x7c, {\cf20 // 0b01111100}\par
02194     0x00, {\cf20 // 0b00000000}\par
02195     0x00, {\cf20 // 0b00000000}\par
02196     0x00, {\cf20 // 0b00000000}\par
02197     0x00, {\cf20 // 0b00000000}\par
02198     0x00, {\cf20 // 0b00000000}\par
02199     0x00, {\cf20 // 0b00000000}\par
02200     0xc6, {\cf20 // 0b11000110}\par
02201     0x00, {\cf20 // 0b00000000}\par
02202     0x00, {\cf20 // 0b00000000}\par
02203     0x7c, {\cf20 // 0b01111100}\par
02204     0xc6, {\cf20 // 0b11000110}\par
02205     0xfe, {\cf20 // 0b11111110}\par
02206     0xc0, {\cf20 // 0b11000000}\par
02207     0xc0, {\cf20 // 0b11000000}\par
02208     0xc6, {\cf20 // 0b11000110}\par
02209     0x7c, {\cf20 // 0b01111100}\par
02210     0x00, {\cf20 // 0b00000000}\par
02211     0x00, {\cf20 // 0b00000000}\par
02212     0x00, {\cf20 // 0b00000000}\par
02213     0x00, {\cf20 // 0b00000000}\par
02214     0x00, {\cf20 // 0b00000000}\par
02215     0x60, {\cf20 // 0b01100000}\par
02216     0x30, {\cf20 // 0b00110000}\par
02217     0x18, {\cf20 // 0b00011000}\par
02218     0x00, {\cf20 // 0b00000000}\par
02219     0x7c, {\cf20 // 0b01111100}\par
02220     0xc6, {\cf20 // 0b11000110}\par
02221     0xfe, {\cf20 // 0b11111110}\par
02222     0xc0, {\cf20 // 0b11000000}\par
02223     0xc0, {\cf20 // 0b11000000}\par
02224     0xc6, {\cf20 // 0b11000110}\par
02225     0x7c, {\cf20 // 0b01111100}\par
02226     0x00, {\cf20 // 0b00000000}\par
02227     0x00, {\cf20 // 0b00000000}\par
02228     0x00, {\cf20 // 0b00000000}\par
02229     0x00, {\cf20 // 0b00000000}\par
02230     0x00, {\cf20 // 0b00000000}\par
02231     0x00, {\cf20 // 0b00000000}\par
02232     0x66, {\cf20 // 0b01100110}\par
02233     0x00, {\cf20 // 0b00000000}\par
02234     0x00, {\cf20 // 0b00000000}\par
02235     0x38, {\cf20 // 0b00111000}\par
02236     0x18, {\cf20 // 0b00011000}\par
02237     0x18, {\cf20 // 0b00011000}\par
02238     0x18, {\cf20 // 0b00011000}\par
02239     0x18, {\cf20 // 0b00011000}\par
02240     0x18, {\cf20 // 0b00011000}\par
02241     0x3c, {\cf20 // 0b00111100}\par
02242     0x00, {\cf20 // 0b00000000}\par
02243     0x00, {\cf20 // 0b00000000}\par
02244     0x00, {\cf20 // 0b00000000}\par
02245     0x00, {\cf20 // 0b00000000}\par
02246     0x00, {\cf20 // 0b00000000}\par
02247     0x18, {\cf20 // 0b00011000}\par
02248     0x3c, {\cf20 // 0b00111100}\par
02249     0x66, {\cf20 // 0b01100110}\par
02250     0x00, {\cf20 // 0b00000000}\par
02251     0x38, {\cf20 // 0b00111000}\par
02252     0x18, {\cf20 // 0b00011000}\par
02253     0x18, {\cf20 // 0b00011000}\par
02254     0x18, {\cf20 // 0b00011000}\par
02255     0x18, {\cf20 // 0b00011000}\par
02256     0x18, {\cf20 // 0b00011000}\par
02257     0x3c, {\cf20 // 0b00111100}\par
02258     0x00, {\cf20 // 0b00000000}\par
02259     0x00, {\cf20 // 0b00000000}\par
02260     0x00, {\cf20 // 0b00000000}\par
02261     0x00, {\cf20 // 0b00000000}\par
02262     0x00, {\cf20 // 0b00000000}\par
02263     0x60, {\cf20 // 0b01100000}\par
02264     0x30, {\cf20 // 0b00110000}\par
02265     0x18, {\cf20 // 0b00011000}\par
02266     0x00, {\cf20 // 0b00000000}\par
02267     0x38, {\cf20 // 0b00111000}\par
02268     0x18, {\cf20 // 0b00011000}\par
02269     0x18, {\cf20 // 0b00011000}\par
02270     0x18, {\cf20 // 0b00011000}\par
02271     0x18, {\cf20 // 0b00011000}\par
02272     0x18, {\cf20 // 0b00011000}\par
02273     0x3c, {\cf20 // 0b00111100}\par
02274     0x00, {\cf20 // 0b00000000}\par
02275     0x00, {\cf20 // 0b00000000}\par
02276     0x00, {\cf20 // 0b00000000}\par
02277     0x00, {\cf20 // 0b00000000}\par
02278     0x00, {\cf20 // 0b00000000}\par
02279     0xc6, {\cf20 // 0b11000110}\par
02280     0x00, {\cf20 // 0b00000000}\par
02281     0x10, {\cf20 // 0b00010000}\par
02282     0x38, {\cf20 // 0b00111000}\par
02283     0x6c, {\cf20 // 0b01101100}\par
02284     0xc6, {\cf20 // 0b11000110}\par
02285     0xc6, {\cf20 // 0b11000110}\par
02286     0xfe, {\cf20 // 0b11111110}\par
02287     0xc6, {\cf20 // 0b11000110}\par
02288     0xc6, {\cf20 // 0b11000110}\par
02289     0xc6, {\cf20 // 0b11000110}\par
02290     0x00, {\cf20 // 0b00000000}\par
02291     0x00, {\cf20 // 0b00000000}\par
02292     0x00, {\cf20 // 0b00000000}\par
02293     0x00, {\cf20 // 0b00000000}\par
02294     0x38, {\cf20 // 0b00111000}\par
02295     0x6c, {\cf20 // 0b01101100}\par
02296     0x38, {\cf20 // 0b00111000}\par
02297     0x10, {\cf20 // 0b00010000}\par
02298     0x38, {\cf20 // 0b00111000}\par
02299     0x6c, {\cf20 // 0b01101100}\par
02300     0xc6, {\cf20 // 0b11000110}\par
02301     0xfe, {\cf20 // 0b11111110}\par
02302     0xc6, {\cf20 // 0b11000110}\par
02303     0xc6, {\cf20 // 0b11000110}\par
02304     0xc6, {\cf20 // 0b11000110}\par
02305     0xc6, {\cf20 // 0b11000110}\par
02306     0x00, {\cf20 // 0b00000000}\par
02307     0x00, {\cf20 // 0b00000000}\par
02308     0x00, {\cf20 // 0b00000000}\par
02309     0x00, {\cf20 // 0b00000000}\par
02310     0xc, {\cf20 // 0b00001100}\par
02311     0x18, {\cf20 // 0b00011000}\par
02312     0x00, {\cf20 // 0b00000000}\par
02313     0xfe, {\cf20 // 0b11111110}\par
02314     0x66, {\cf20 // 0b01100110}\par
02315     0x62, {\cf20 // 0b01100010}\par
02316     0x68, {\cf20 // 0b01101000}\par
02317     0x78, {\cf20 // 0b01111000}\par
02318     0x68, {\cf20 // 0b01101000}\par
02319     0x62, {\cf20 // 0b01100010}\par
02320     0x66, {\cf20 // 0b01100110}\par
02321     0xfe, {\cf20 // 0b11111110}\par
02322     0x00, {\cf20 // 0b00000000}\par
02323     0x00, {\cf20 // 0b00000000}\par
02324     0x00, {\cf20 // 0b00000000}\par
02325     0x00, {\cf20 // 0b00000000}\par
02326     0x00, {\cf20 // 0b00000000}\par
02327     0x00, {\cf20 // 0b00000000}\par
02328     0x00, {\cf20 // 0b00000000}\par
02329     0x00, {\cf20 // 0b00000000}\par
02330     0x00, {\cf20 // 0b00000000}\par
02331     0xec, {\cf20 // 0b11101100}\par
02332     0x36, {\cf20 // 0b00110110}\par
02333     0x36, {\cf20 // 0b00110110}\par
02334     0x7e, {\cf20 // 0b01111110}\par
02335     0xd8, {\cf20 // 0b11011000}\par
02336     0xd8, {\cf20 // 0b11011000}\par
02337     0x6e, {\cf20 // 0b01101110}\par
02338     0x00, {\cf20 // 0b00000000}\par
02339     0x00, {\cf20 // 0b00000000}\par
02340     0x00, {\cf20 // 0b00000000}\par
02341     0x00, {\cf20 // 0b00000000}\par
02342     0x00, {\cf20 // 0b00000000}\par
02343     0x00, {\cf20 // 0b00000000}\par
02344     0x3e, {\cf20 // 0b00111110}\par
02345     0x6c, {\cf20 // 0b01101100}\par
02346     0xcc, {\cf20 // 0b11001100}\par
02347     0xcc, {\cf20 // 0b11001100}\par
02348     0xfe, {\cf20 // 0b11111110}\par
02349     0xcc, {\cf20 // 0b11001100}\par
02350     0xcc, {\cf20 // 0b11001100}\par
02351     0xcc, {\cf20 // 0b11001100}\par
02352     0xcc, {\cf20 // 0b11001100}\par
02353     0xce, {\cf20 // 0b11001110}\par
02354     0x00, {\cf20 // 0b00000000}\par
02355     0x00, {\cf20 // 0b00000000}\par
02356     0x00, {\cf20 // 0b00000000}\par
02357     0x00, {\cf20 // 0b00000000}\par
02358     0x00, {\cf20 // 0b00000000}\par
02359     0x10, {\cf20 // 0b00010000}\par
02360     0x38, {\cf20 // 0b00111000}\par
02361     0x6c, {\cf20 // 0b01101100}\par
02362     0x00, {\cf20 // 0b00000000}\par
02363     0x7c, {\cf20 // 0b01111100}\par
02364     0xc6, {\cf20 // 0b11000110}\par
02365     0xc6, {\cf20 // 0b11000110}\par
02366     0xc6, {\cf20 // 0b11000110}\par
02367     0xc6, {\cf20 // 0b11000110}\par
02368     0xc6, {\cf20 // 0b11000110}\par
02369     0x7c, {\cf20 // 0b01111100}\par
02370     0x00, {\cf20 // 0b00000000}\par
02371     0x00, {\cf20 // 0b00000000}\par
02372     0x00, {\cf20 // 0b00000000}\par
02373     0x00, {\cf20 // 0b00000000}\par
02374     0x00, {\cf20 // 0b00000000}\par
02375     0x00, {\cf20 // 0b00000000}\par
02376     0xc6, {\cf20 // 0b11000110}\par
02377     0x00, {\cf20 // 0b00000000}\par
02378     0x00, {\cf20 // 0b00000000}\par
02379     0x7c, {\cf20 // 0b01111100}\par
02380     0xc6, {\cf20 // 0b11000110}\par
02381     0xc6, {\cf20 // 0b11000110}\par
02382     0xc6, {\cf20 // 0b11000110}\par
02383     0xc6, {\cf20 // 0b11000110}\par
02384     0xc6, {\cf20 // 0b11000110}\par
02385     0x7c, {\cf20 // 0b01111100}\par
02386     0x00, {\cf20 // 0b00000000}\par
02387     0x00, {\cf20 // 0b00000000}\par
02388     0x00, {\cf20 // 0b00000000}\par
02389     0x00, {\cf20 // 0b00000000}\par
02390     0x00, {\cf20 // 0b00000000}\par
02391     0x60, {\cf20 // 0b01100000}\par
02392     0x30, {\cf20 // 0b00110000}\par
02393     0x18, {\cf20 // 0b00011000}\par
02394     0x00, {\cf20 // 0b00000000}\par
02395     0x7c, {\cf20 // 0b01111100}\par
02396     0xc6, {\cf20 // 0b11000110}\par
02397     0xc6, {\cf20 // 0b11000110}\par
02398     0xc6, {\cf20 // 0b11000110}\par
02399     0xc6, {\cf20 // 0b11000110}\par
02400     0xc6, {\cf20 // 0b11000110}\par
02401     0x7c, {\cf20 // 0b01111100}\par
02402     0x00, {\cf20 // 0b00000000}\par
02403     0x00, {\cf20 // 0b00000000}\par
02404     0x00, {\cf20 // 0b00000000}\par
02405     0x00, {\cf20 // 0b00000000}\par
02406     0x00, {\cf20 // 0b00000000}\par
02407     0x30, {\cf20 // 0b00110000}\par
02408     0x78, {\cf20 // 0b01111000}\par
02409     0xcc, {\cf20 // 0b11001100}\par
02410     0x00, {\cf20 // 0b00000000}\par
02411     0xcc, {\cf20 // 0b11001100}\par
02412     0xcc, {\cf20 // 0b11001100}\par
02413     0xcc, {\cf20 // 0b11001100}\par
02414     0xcc, {\cf20 // 0b11001100}\par
02415     0xcc, {\cf20 // 0b11001100}\par
02416     0xcc, {\cf20 // 0b11001100}\par
02417     0x76, {\cf20 // 0b01110110}\par
02418     0x00, {\cf20 // 0b00000000}\par
02419     0x00, {\cf20 // 0b00000000}\par
02420     0x00, {\cf20 // 0b00000000}\par
02421     0x00, {\cf20 // 0b00000000}\par
02422     0x00, {\cf20 // 0b00000000}\par
02423     0x60, {\cf20 // 0b01100000}\par
02424     0x30, {\cf20 // 0b00110000}\par
02425     0x18, {\cf20 // 0b00011000}\par
02426     0x00, {\cf20 // 0b00000000}\par
02427     0xcc, {\cf20 // 0b11001100}\par
02428     0xcc, {\cf20 // 0b11001100}\par
02429     0xcc, {\cf20 // 0b11001100}\par
02430     0xcc, {\cf20 // 0b11001100}\par
02431     0xcc, {\cf20 // 0b11001100}\par
02432     0xcc, {\cf20 // 0b11001100}\par
02433     0x76, {\cf20 // 0b01110110}\par
02434     0x00, {\cf20 // 0b00000000}\par
02435     0x00, {\cf20 // 0b00000000}\par
02436     0x00, {\cf20 // 0b00000000}\par
02437     0x00, {\cf20 // 0b00000000}\par
02438     0x00, {\cf20 // 0b00000000}\par
02439     0x00, {\cf20 // 0b00000000}\par
02440     0xc6, {\cf20 // 0b11000110}\par
02441     0x00, {\cf20 // 0b00000000}\par
02442     0x00, {\cf20 // 0b00000000}\par
02443     0xc6, {\cf20 // 0b11000110}\par
02444     0xc6, {\cf20 // 0b11000110}\par
02445     0xc6, {\cf20 // 0b11000110}\par
02446     0xc6, {\cf20 // 0b11000110}\par
02447     0xc6, {\cf20 // 0b11000110}\par
02448     0xc6, {\cf20 // 0b11000110}\par
02449     0x7e, {\cf20 // 0b01111110}\par
02450     0x6, {\cf20 // 0b00000110}\par
02451     0xc, {\cf20 // 0b00001100}\par
02452     0x78, {\cf20 // 0b01111000}\par
02453     0x00, {\cf20 // 0b00000000}\par
02454     0x00, {\cf20 // 0b00000000}\par
02455     0xc6, {\cf20 // 0b11000110}\par
02456     0x00, {\cf20 // 0b00000000}\par
02457     0x7c, {\cf20 // 0b01111100}\par
02458     0xc6, {\cf20 // 0b11000110}\par
02459     0xc6, {\cf20 // 0b11000110}\par
02460     0xc6, {\cf20 // 0b11000110}\par
02461     0xc6, {\cf20 // 0b11000110}\par
02462     0xc6, {\cf20 // 0b11000110}\par
02463     0xc6, {\cf20 // 0b11000110}\par
02464     0xc6, {\cf20 // 0b11000110}\par
02465     0x7c, {\cf20 // 0b01111100}\par
02466     0x00, {\cf20 // 0b00000000}\par
02467     0x00, {\cf20 // 0b00000000}\par
02468     0x00, {\cf20 // 0b00000000}\par
02469     0x00, {\cf20 // 0b00000000}\par
02470     0x00, {\cf20 // 0b00000000}\par
02471     0xc6, {\cf20 // 0b11000110}\par
02472     0x00, {\cf20 // 0b00000000}\par
02473     0xc6, {\cf20 // 0b11000110}\par
02474     0xc6, {\cf20 // 0b11000110}\par
02475     0xc6, {\cf20 // 0b11000110}\par
02476     0xc6, {\cf20 // 0b11000110}\par
02477     0xc6, {\cf20 // 0b11000110}\par
02478     0xc6, {\cf20 // 0b11000110}\par
02479     0xc6, {\cf20 // 0b11000110}\par
02480     0xc6, {\cf20 // 0b11000110}\par
02481     0x7c, {\cf20 // 0b01111100}\par
02482     0x00, {\cf20 // 0b00000000}\par
02483     0x00, {\cf20 // 0b00000000}\par
02484     0x00, {\cf20 // 0b00000000}\par
02485     0x00, {\cf20 // 0b00000000}\par
02486     0x00, {\cf20 // 0b00000000}\par
02487     0x18, {\cf20 // 0b00011000}\par
02488     0x18, {\cf20 // 0b00011000}\par
02489     0x7c, {\cf20 // 0b01111100}\par
02490     0xc6, {\cf20 // 0b11000110}\par
02491     0xc0, {\cf20 // 0b11000000}\par
02492     0xc0, {\cf20 // 0b11000000}\par
02493     0xc0, {\cf20 // 0b11000000}\par
02494     0xc6, {\cf20 // 0b11000110}\par
02495     0x7c, {\cf20 // 0b01111100}\par
02496     0x18, {\cf20 // 0b00011000}\par
02497     0x18, {\cf20 // 0b00011000}\par
02498     0x00, {\cf20 // 0b00000000}\par
02499     0x00, {\cf20 // 0b00000000}\par
02500     0x00, {\cf20 // 0b00000000}\par
02501     0x00, {\cf20 // 0b00000000}\par
02502     0x00, {\cf20 // 0b00000000}\par
02503     0x38, {\cf20 // 0b00111000}\par
02504     0x6c, {\cf20 // 0b01101100}\par
02505     0x64, {\cf20 // 0b01100100}\par
02506     0x60, {\cf20 // 0b01100000}\par
02507     0xf0, {\cf20 // 0b11110000}\par
02508     0x60, {\cf20 // 0b01100000}\par
02509     0x60, {\cf20 // 0b01100000}\par
02510     0x60, {\cf20 // 0b01100000}\par
02511     0x60, {\cf20 // 0b01100000}\par
02512     0xe6, {\cf20 // 0b11100110}\par
02513     0xfc, {\cf20 // 0b11111100}\par
02514     0x00, {\cf20 // 0b00000000}\par
02515     0x00, {\cf20 // 0b00000000}\par
02516     0x00, {\cf20 // 0b00000000}\par
02517     0x00, {\cf20 // 0b00000000}\par
02518     0x00, {\cf20 // 0b00000000}\par
02519     0x00, {\cf20 // 0b00000000}\par
02520     0x66, {\cf20 // 0b01100110}\par
02521     0x66, {\cf20 // 0b01100110}\par
02522     0x3c, {\cf20 // 0b00111100}\par
02523     0x18, {\cf20 // 0b00011000}\par
02524     0x7e, {\cf20 // 0b01111110}\par
02525     0x18, {\cf20 // 0b00011000}\par
02526     0x7e, {\cf20 // 0b01111110}\par
02527     0x18, {\cf20 // 0b00011000}\par
02528     0x18, {\cf20 // 0b00011000}\par
02529     0x18, {\cf20 // 0b00011000}\par
02530     0x00, {\cf20 // 0b00000000}\par
02531     0x00, {\cf20 // 0b00000000}\par
02532     0x00, {\cf20 // 0b00000000}\par
02533     0x00, {\cf20 // 0b00000000}\par
02534     0x00, {\cf20 // 0b00000000}\par
02535     0xf8, {\cf20 // 0b11111000}\par
02536     0xcc, {\cf20 // 0b11001100}\par
02537     0xcc, {\cf20 // 0b11001100}\par
02538     0xf8, {\cf20 // 0b11111000}\par
02539     0xc4, {\cf20 // 0b11000100}\par
02540     0xcc, {\cf20 // 0b11001100}\par
02541     0xde, {\cf20 // 0b11011110}\par
02542     0xcc, {\cf20 // 0b11001100}\par
02543     0xcc, {\cf20 // 0b11001100}\par
02544     0xcc, {\cf20 // 0b11001100}\par
02545     0xc6, {\cf20 // 0b11000110}\par
02546     0x00, {\cf20 // 0b00000000}\par
02547     0x00, {\cf20 // 0b00000000}\par
02548     0x00, {\cf20 // 0b00000000}\par
02549     0x00, {\cf20 // 0b00000000}\par
02550     0x00, {\cf20 // 0b00000000}\par
02551     0xe, {\cf20 // 0b00001110}\par
02552     0x1b, {\cf20 // 0b00011011}\par
02553     0x18, {\cf20 // 0b00011000}\par
02554     0x18, {\cf20 // 0b00011000}\par
02555     0x18, {\cf20 // 0b00011000}\par
02556     0x7e, {\cf20 // 0b01111110}\par
02557     0x18, {\cf20 // 0b00011000}\par
02558     0x18, {\cf20 // 0b00011000}\par
02559     0x18, {\cf20 // 0b00011000}\par
02560     0xd8, {\cf20 // 0b11011000}\par
02561     0x70, {\cf20 // 0b01110000}\par
02562     0x00, {\cf20 // 0b00000000}\par
02563     0x00, {\cf20 // 0b00000000}\par
02564     0x00, {\cf20 // 0b00000000}\par
02565     0x00, {\cf20 // 0b00000000}\par
02566     0x00, {\cf20 // 0b00000000}\par
02567     0x18, {\cf20 // 0b00011000}\par
02568     0x30, {\cf20 // 0b00110000}\par
02569     0x60, {\cf20 // 0b01100000}\par
02570     0x00, {\cf20 // 0b00000000}\par
02571     0x78, {\cf20 // 0b01111000}\par
02572     0xc, {\cf20 // 0b00001100}\par
02573     0x7c, {\cf20 // 0b01111100}\par
02574     0xcc, {\cf20 // 0b11001100}\par
02575     0xcc, {\cf20 // 0b11001100}\par
02576     0xcc, {\cf20 // 0b11001100}\par
02577     0x76, {\cf20 // 0b01110110}\par
02578     0x00, {\cf20 // 0b00000000}\par
02579     0x00, {\cf20 // 0b00000000}\par
02580     0x00, {\cf20 // 0b00000000}\par
02581     0x00, {\cf20 // 0b00000000}\par
02582     0x00, {\cf20 // 0b00000000}\par
02583     0xc, {\cf20 // 0b00001100}\par
02584     0x18, {\cf20 // 0b00011000}\par
02585     0x30, {\cf20 // 0b00110000}\par
02586     0x00, {\cf20 // 0b00000000}\par
02587     0x38, {\cf20 // 0b00111000}\par
02588     0x18, {\cf20 // 0b00011000}\par
02589     0x18, {\cf20 // 0b00011000}\par
02590     0x18, {\cf20 // 0b00011000}\par
02591     0x18, {\cf20 // 0b00011000}\par
02592     0x18, {\cf20 // 0b00011000}\par
02593     0x3c, {\cf20 // 0b00111100}\par
02594     0x00, {\cf20 // 0b00000000}\par
02595     0x00, {\cf20 // 0b00000000}\par
02596     0x00, {\cf20 // 0b00000000}\par
02597     0x00, {\cf20 // 0b00000000}\par
02598     0x00, {\cf20 // 0b00000000}\par
02599     0x18, {\cf20 // 0b00011000}\par
02600     0x30, {\cf20 // 0b00110000}\par
02601     0x60, {\cf20 // 0b01100000}\par
02602     0x00, {\cf20 // 0b00000000}\par
02603     0x7c, {\cf20 // 0b01111100}\par
02604     0xc6, {\cf20 // 0b11000110}\par
02605     0xc6, {\cf20 // 0b11000110}\par
02606     0xc6, {\cf20 // 0b11000110}\par
02607     0xc6, {\cf20 // 0b11000110}\par
02608     0xc6, {\cf20 // 0b11000110}\par
02609     0x7c, {\cf20 // 0b01111100}\par
02610     0x00, {\cf20 // 0b00000000}\par
02611     0x00, {\cf20 // 0b00000000}\par
02612     0x00, {\cf20 // 0b00000000}\par
02613     0x00, {\cf20 // 0b00000000}\par
02614     0x00, {\cf20 // 0b00000000}\par
02615     0x18, {\cf20 // 0b00011000}\par
02616     0x30, {\cf20 // 0b00110000}\par
02617     0x60, {\cf20 // 0b01100000}\par
02618     0x00, {\cf20 // 0b00000000}\par
02619     0xcc, {\cf20 // 0b11001100}\par
02620     0xcc, {\cf20 // 0b11001100}\par
02621     0xcc, {\cf20 // 0b11001100}\par
02622     0xcc, {\cf20 // 0b11001100}\par
02623     0xcc, {\cf20 // 0b11001100}\par
02624     0xcc, {\cf20 // 0b11001100}\par
02625     0x76, {\cf20 // 0b01110110}\par
02626     0x00, {\cf20 // 0b00000000}\par
02627     0x00, {\cf20 // 0b00000000}\par
02628     0x00, {\cf20 // 0b00000000}\par
02629     0x00, {\cf20 // 0b00000000}\par
02630     0x00, {\cf20 // 0b00000000}\par
02631     0x00, {\cf20 // 0b00000000}\par
02632     0x76, {\cf20 // 0b01110110}\par
02633     0xdc, {\cf20 // 0b11011100}\par
02634     0x00, {\cf20 // 0b00000000}\par
02635     0xdc, {\cf20 // 0b11011100}\par
02636     0x66, {\cf20 // 0b01100110}\par
02637     0x66, {\cf20 // 0b01100110}\par
02638     0x66, {\cf20 // 0b01100110}\par
02639     0x66, {\cf20 // 0b01100110}\par
02640     0x66, {\cf20 // 0b01100110}\par
02641     0x66, {\cf20 // 0b01100110}\par
02642     0x00, {\cf20 // 0b00000000}\par
02643     0x00, {\cf20 // 0b00000000}\par
02644     0x00, {\cf20 // 0b00000000}\par
02645     0x00, {\cf20 // 0b00000000}\par
02646     0x76, {\cf20 // 0b01110110}\par
02647     0xdc, {\cf20 // 0b11011100}\par
02648     0x00, {\cf20 // 0b00000000}\par
02649     0xc6, {\cf20 // 0b11000110}\par
02650     0xe6, {\cf20 // 0b11100110}\par
02651     0xf6, {\cf20 // 0b11110110}\par
02652     0xfe, {\cf20 // 0b11111110}\par
02653     0xde, {\cf20 // 0b11011110}\par
02654     0xce, {\cf20 // 0b11001110}\par
02655     0xc6, {\cf20 // 0b11000110}\par
02656     0xc6, {\cf20 // 0b11000110}\par
02657     0xc6, {\cf20 // 0b11000110}\par
02658     0x00, {\cf20 // 0b00000000}\par
02659     0x00, {\cf20 // 0b00000000}\par
02660     0x00, {\cf20 // 0b00000000}\par
02661     0x00, {\cf20 // 0b00000000}\par
02662     0x00, {\cf20 // 0b00000000}\par
02663     0x00, {\cf20 // 0b00000000}\par
02664     0x3c, {\cf20 // 0b00111100}\par
02665     0x6c, {\cf20 // 0b01101100}\par
02666     0x6c, {\cf20 // 0b01101100}\par
02667     0x3e, {\cf20 // 0b00111110}\par
02668     0x00, {\cf20 // 0b00000000}\par
02669     0x7e, {\cf20 // 0b01111110}\par
02670     0x00, {\cf20 // 0b00000000}\par
02671     0x00, {\cf20 // 0b00000000}\par
02672     0x00, {\cf20 // 0b00000000}\par
02673     0x00, {\cf20 // 0b00000000}\par
02674     0x00, {\cf20 // 0b00000000}\par
02675     0x00, {\cf20 // 0b00000000}\par
02676     0x00, {\cf20 // 0b00000000}\par
02677     0x00, {\cf20 // 0b00000000}\par
02678     0x00, {\cf20 // 0b00000000}\par
02679     0x00, {\cf20 // 0b00000000}\par
02680     0x38, {\cf20 // 0b00111000}\par
02681     0x6c, {\cf20 // 0b01101100}\par
02682     0x6c, {\cf20 // 0b01101100}\par
02683     0x38, {\cf20 // 0b00111000}\par
02684     0x00, {\cf20 // 0b00000000}\par
02685     0x7c, {\cf20 // 0b01111100}\par
02686     0x00, {\cf20 // 0b00000000}\par
02687     0x00, {\cf20 // 0b00000000}\par
02688     0x00, {\cf20 // 0b00000000}\par
02689     0x00, {\cf20 // 0b00000000}\par
02690     0x00, {\cf20 // 0b00000000}\par
02691     0x00, {\cf20 // 0b00000000}\par
02692     0x00, {\cf20 // 0b00000000}\par
02693     0x00, {\cf20 // 0b00000000}\par
02694     0x00, {\cf20 // 0b00000000}\par
02695     0x00, {\cf20 // 0b00000000}\par
02696     0x30, {\cf20 // 0b00110000}\par
02697     0x30, {\cf20 // 0b00110000}\par
02698     0x00, {\cf20 // 0b00000000}\par
02699     0x30, {\cf20 // 0b00110000}\par
02700     0x30, {\cf20 // 0b00110000}\par
02701     0x60, {\cf20 // 0b01100000}\par
02702     0xc0, {\cf20 // 0b11000000}\par
02703     0xc6, {\cf20 // 0b11000110}\par
02704     0xc6, {\cf20 // 0b11000110}\par
02705     0x7c, {\cf20 // 0b01111100}\par
02706     0x00, {\cf20 // 0b00000000}\par
02707     0x00, {\cf20 // 0b00000000}\par
02708     0x00, {\cf20 // 0b00000000}\par
02709     0x00, {\cf20 // 0b00000000}\par
02710     0x00, {\cf20 // 0b00000000}\par
02711     0x00, {\cf20 // 0b00000000}\par
02712     0x00, {\cf20 // 0b00000000}\par
02713     0x00, {\cf20 // 0b00000000}\par
02714     0x00, {\cf20 // 0b00000000}\par
02715     0x00, {\cf20 // 0b00000000}\par
02716     0xfe, {\cf20 // 0b11111110}\par
02717     0xc0, {\cf20 // 0b11000000}\par
02718     0xc0, {\cf20 // 0b11000000}\par
02719     0xc0, {\cf20 // 0b11000000}\par
02720     0xc0, {\cf20 // 0b11000000}\par
02721     0x00, {\cf20 // 0b00000000}\par
02722     0x00, {\cf20 // 0b00000000}\par
02723     0x00, {\cf20 // 0b00000000}\par
02724     0x00, {\cf20 // 0b00000000}\par
02725     0x00, {\cf20 // 0b00000000}\par
02726     0x00, {\cf20 // 0b00000000}\par
02727     0x00, {\cf20 // 0b00000000}\par
02728     0x00, {\cf20 // 0b00000000}\par
02729     0x00, {\cf20 // 0b00000000}\par
02730     0x00, {\cf20 // 0b00000000}\par
02731     0x00, {\cf20 // 0b00000000}\par
02732     0xfe, {\cf20 // 0b11111110}\par
02733     0x6, {\cf20 // 0b00000110}\par
02734     0x6, {\cf20 // 0b00000110}\par
02735     0x6, {\cf20 // 0b00000110}\par
02736     0x6, {\cf20 // 0b00000110}\par
02737     0x00, {\cf20 // 0b00000000}\par
02738     0x00, {\cf20 // 0b00000000}\par
02739     0x00, {\cf20 // 0b00000000}\par
02740     0x00, {\cf20 // 0b00000000}\par
02741     0x00, {\cf20 // 0b00000000}\par
02742     0x00, {\cf20 // 0b00000000}\par
02743     0x60, {\cf20 // 0b01100000}\par
02744     0xe0, {\cf20 // 0b11100000}\par
02745     0x62, {\cf20 // 0b01100010}\par
02746     0x66, {\cf20 // 0b01100110}\par
02747     0x6c, {\cf20 // 0b01101100}\par
02748     0x18, {\cf20 // 0b00011000}\par
02749     0x30, {\cf20 // 0b00110000}\par
02750     0x60, {\cf20 // 0b01100000}\par
02751     0xdc, {\cf20 // 0b11011100}\par
02752     0x86, {\cf20 // 0b10000110}\par
02753     0xc, {\cf20 // 0b00001100}\par
02754     0x18, {\cf20 // 0b00011000}\par
02755     0x3e, {\cf20 // 0b00111110}\par
02756     0x00, {\cf20 // 0b00000000}\par
02757     0x00, {\cf20 // 0b00000000}\par
02758     0x00, {\cf20 // 0b00000000}\par
02759     0x60, {\cf20 // 0b01100000}\par
02760     0xe0, {\cf20 // 0b11100000}\par
02761     0x62, {\cf20 // 0b01100010}\par
02762     0x66, {\cf20 // 0b01100110}\par
02763     0x6c, {\cf20 // 0b01101100}\par
02764     0x18, {\cf20 // 0b00011000}\par
02765     0x30, {\cf20 // 0b00110000}\par
02766     0x66, {\cf20 // 0b01100110}\par
02767     0xce, {\cf20 // 0b11001110}\par
02768     0x9a, {\cf20 // 0b10011010}\par
02769     0x3f, {\cf20 // 0b00111111}\par
02770     0x6, {\cf20 // 0b00000110}\par
02771     0x6, {\cf20 // 0b00000110}\par
02772     0x00, {\cf20 // 0b00000000}\par
02773     0x00, {\cf20 // 0b00000000}\par
02774     0x00, {\cf20 // 0b00000000}\par
02775     0x00, {\cf20 // 0b00000000}\par
02776     0x18, {\cf20 // 0b00011000}\par
02777     0x18, {\cf20 // 0b00011000}\par
02778     0x00, {\cf20 // 0b00000000}\par
02779     0x18, {\cf20 // 0b00011000}\par
02780     0x18, {\cf20 // 0b00011000}\par
02781     0x18, {\cf20 // 0b00011000}\par
02782     0x3c, {\cf20 // 0b00111100}\par
02783     0x3c, {\cf20 // 0b00111100}\par
02784     0x3c, {\cf20 // 0b00111100}\par
02785     0x18, {\cf20 // 0b00011000}\par
02786     0x00, {\cf20 // 0b00000000}\par
02787     0x00, {\cf20 // 0b00000000}\par
02788     0x00, {\cf20 // 0b00000000}\par
02789     0x00, {\cf20 // 0b00000000}\par
02790     0x00, {\cf20 // 0b00000000}\par
02791     0x00, {\cf20 // 0b00000000}\par
02792     0x00, {\cf20 // 0b00000000}\par
02793     0x00, {\cf20 // 0b00000000}\par
02794     0x00, {\cf20 // 0b00000000}\par
02795     0x36, {\cf20 // 0b00110110}\par
02796     0x6c, {\cf20 // 0b01101100}\par
02797     0xd8, {\cf20 // 0b11011000}\par
02798     0x6c, {\cf20 // 0b01101100}\par
02799     0x36, {\cf20 // 0b00110110}\par
02800     0x00, {\cf20 // 0b00000000}\par
02801     0x00, {\cf20 // 0b00000000}\par
02802     0x00, {\cf20 // 0b00000000}\par
02803     0x00, {\cf20 // 0b00000000}\par
02804     0x00, {\cf20 // 0b00000000}\par
02805     0x00, {\cf20 // 0b00000000}\par
02806     0x00, {\cf20 // 0b00000000}\par
02807     0x00, {\cf20 // 0b00000000}\par
02808     0x00, {\cf20 // 0b00000000}\par
02809     0x00, {\cf20 // 0b00000000}\par
02810     0x00, {\cf20 // 0b00000000}\par
02811     0xd8, {\cf20 // 0b11011000}\par
02812     0x6c, {\cf20 // 0b01101100}\par
02813     0x36, {\cf20 // 0b00110110}\par
02814     0x6c, {\cf20 // 0b01101100}\par
02815     0xd8, {\cf20 // 0b11011000}\par
02816     0x00, {\cf20 // 0b00000000}\par
02817     0x00, {\cf20 // 0b00000000}\par
02818     0x00, {\cf20 // 0b00000000}\par
02819     0x00, {\cf20 // 0b00000000}\par
02820     0x00, {\cf20 // 0b00000000}\par
02821     0x00, {\cf20 // 0b00000000}\par
02822     0x11, {\cf20 // 0b00010001}\par
02823     0x44, {\cf20 // 0b01000100}\par
02824     0x11, {\cf20 // 0b00010001}\par
02825     0x44, {\cf20 // 0b01000100}\par
02826     0x11, {\cf20 // 0b00010001}\par
02827     0x44, {\cf20 // 0b01000100}\par
02828     0x11, {\cf20 // 0b00010001}\par
02829     0x44, {\cf20 // 0b01000100}\par
02830     0x11, {\cf20 // 0b00010001}\par
02831     0x44, {\cf20 // 0b01000100}\par
02832     0x11, {\cf20 // 0b00010001}\par
02833     0x44, {\cf20 // 0b01000100}\par
02834     0x11, {\cf20 // 0b00010001}\par
02835     0x44, {\cf20 // 0b01000100}\par
02836     0x11, {\cf20 // 0b00010001}\par
02837     0x44, {\cf20 // 0b01000100}\par
02838     0x55, {\cf20 // 0b01010101}\par
02839     0xaa, {\cf20 // 0b10101010}\par
02840     0x55, {\cf20 // 0b01010101}\par
02841     0xaa, {\cf20 // 0b10101010}\par
02842     0x55, {\cf20 // 0b01010101}\par
02843     0xaa, {\cf20 // 0b10101010}\par
02844     0x55, {\cf20 // 0b01010101}\par
02845     0xaa, {\cf20 // 0b10101010}\par
02846     0x55, {\cf20 // 0b01010101}\par
02847     0xaa, {\cf20 // 0b10101010}\par
02848     0x55, {\cf20 // 0b01010101}\par
02849     0xaa, {\cf20 // 0b10101010}\par
02850     0x55, {\cf20 // 0b01010101}\par
02851     0xaa, {\cf20 // 0b10101010}\par
02852     0x55, {\cf20 // 0b01010101}\par
02853     0xaa, {\cf20 // 0b10101010}\par
02854     0xdd, {\cf20 // 0b11011101}\par
02855     0x77, {\cf20 // 0b01110111}\par
02856     0xdd, {\cf20 // 0b11011101}\par
02857     0x77, {\cf20 // 0b01110111}\par
02858     0xdd, {\cf20 // 0b11011101}\par
02859     0x77, {\cf20 // 0b01110111}\par
02860     0xdd, {\cf20 // 0b11011101}\par
02861     0x77, {\cf20 // 0b01110111}\par
02862     0xdd, {\cf20 // 0b11011101}\par
02863     0x77, {\cf20 // 0b01110111}\par
02864     0xdd, {\cf20 // 0b11011101}\par
02865     0x77, {\cf20 // 0b01110111}\par
02866     0xdd, {\cf20 // 0b11011101}\par
02867     0x77, {\cf20 // 0b01110111}\par
02868     0xdd, {\cf20 // 0b11011101}\par
02869     0x77, {\cf20 // 0b01110111}\par
02870     0x18, {\cf20 // 0b00011000}\par
02871     0x18, {\cf20 // 0b00011000}\par
02872     0x18, {\cf20 // 0b00011000}\par
02873     0x18, {\cf20 // 0b00011000}\par
02874     0x18, {\cf20 // 0b00011000}\par
02875     0x18, {\cf20 // 0b00011000}\par
02876     0x18, {\cf20 // 0b00011000}\par
02877     0x18, {\cf20 // 0b00011000}\par
02878     0x18, {\cf20 // 0b00011000}\par
02879     0x18, {\cf20 // 0b00011000}\par
02880     0x18, {\cf20 // 0b00011000}\par
02881     0x18, {\cf20 // 0b00011000}\par
02882     0x18, {\cf20 // 0b00011000}\par
02883     0x18, {\cf20 // 0b00011000}\par
02884     0x18, {\cf20 // 0b00011000}\par
02885     0x18, {\cf20 // 0b00011000}\par
02886     0x18, {\cf20 // 0b00011000}\par
02887     0x18, {\cf20 // 0b00011000}\par
02888     0x18, {\cf20 // 0b00011000}\par
02889     0x18, {\cf20 // 0b00011000}\par
02890     0x18, {\cf20 // 0b00011000}\par
02891     0x18, {\cf20 // 0b00011000}\par
02892     0x18, {\cf20 // 0b00011000}\par
02893     0xf8, {\cf20 // 0b11111000}\par
02894     0x18, {\cf20 // 0b00011000}\par
02895     0x18, {\cf20 // 0b00011000}\par
02896     0x18, {\cf20 // 0b00011000}\par
02897     0x18, {\cf20 // 0b00011000}\par
02898     0x18, {\cf20 // 0b00011000}\par
02899     0x18, {\cf20 // 0b00011000}\par
02900     0x18, {\cf20 // 0b00011000}\par
02901     0x18, {\cf20 // 0b00011000}\par
02902     0x18, {\cf20 // 0b00011000}\par
02903     0x18, {\cf20 // 0b00011000}\par
02904     0x18, {\cf20 // 0b00011000}\par
02905     0x18, {\cf20 // 0b00011000}\par
02906     0x18, {\cf20 // 0b00011000}\par
02907     0xf8, {\cf20 // 0b11111000}\par
02908     0x18, {\cf20 // 0b00011000}\par
02909     0xf8, {\cf20 // 0b11111000}\par
02910     0x18, {\cf20 // 0b00011000}\par
02911     0x18, {\cf20 // 0b00011000}\par
02912     0x18, {\cf20 // 0b00011000}\par
02913     0x18, {\cf20 // 0b00011000}\par
02914     0x18, {\cf20 // 0b00011000}\par
02915     0x18, {\cf20 // 0b00011000}\par
02916     0x18, {\cf20 // 0b00011000}\par
02917     0x18, {\cf20 // 0b00011000}\par
02918     0x36, {\cf20 // 0b00110110}\par
02919     0x36, {\cf20 // 0b00110110}\par
02920     0x36, {\cf20 // 0b00110110}\par
02921     0x36, {\cf20 // 0b00110110}\par
02922     0x36, {\cf20 // 0b00110110}\par
02923     0x36, {\cf20 // 0b00110110}\par
02924     0x36, {\cf20 // 0b00110110}\par
02925     0xf6, {\cf20 // 0b11110110}\par
02926     0x36, {\cf20 // 0b00110110}\par
02927     0x36, {\cf20 // 0b00110110}\par
02928     0x36, {\cf20 // 0b00110110}\par
02929     0x36, {\cf20 // 0b00110110}\par
02930     0x36, {\cf20 // 0b00110110}\par
02931     0x36, {\cf20 // 0b00110110}\par
02932     0x36, {\cf20 // 0b00110110}\par
02933     0x36, {\cf20 // 0b00110110}\par
02934     0x00, {\cf20 // 0b00000000}\par
02935     0x00, {\cf20 // 0b00000000}\par
02936     0x00, {\cf20 // 0b00000000}\par
02937     0x00, {\cf20 // 0b00000000}\par
02938     0x00, {\cf20 // 0b00000000}\par
02939     0x00, {\cf20 // 0b00000000}\par
02940     0x00, {\cf20 // 0b00000000}\par
02941     0xfe, {\cf20 // 0b11111110}\par
02942     0x36, {\cf20 // 0b00110110}\par
02943     0x36, {\cf20 // 0b00110110}\par
02944     0x36, {\cf20 // 0b00110110}\par
02945     0x36, {\cf20 // 0b00110110}\par
02946     0x36, {\cf20 // 0b00110110}\par
02947     0x36, {\cf20 // 0b00110110}\par
02948     0x36, {\cf20 // 0b00110110}\par
02949     0x36, {\cf20 // 0b00110110}\par
02950     0x00, {\cf20 // 0b00000000}\par
02951     0x00, {\cf20 // 0b00000000}\par
02952     0x00, {\cf20 // 0b00000000}\par
02953     0x00, {\cf20 // 0b00000000}\par
02954     0x00, {\cf20 // 0b00000000}\par
02955     0xf8, {\cf20 // 0b11111000}\par
02956     0x18, {\cf20 // 0b00011000}\par
02957     0xf8, {\cf20 // 0b11111000}\par
02958     0x18, {\cf20 // 0b00011000}\par
02959     0x18, {\cf20 // 0b00011000}\par
02960     0x18, {\cf20 // 0b00011000}\par
02961     0x18, {\cf20 // 0b00011000}\par
02962     0x18, {\cf20 // 0b00011000}\par
02963     0x18, {\cf20 // 0b00011000}\par
02964     0x18, {\cf20 // 0b00011000}\par
02965     0x18, {\cf20 // 0b00011000}\par
02966     0x36, {\cf20 // 0b00110110}\par
02967     0x36, {\cf20 // 0b00110110}\par
02968     0x36, {\cf20 // 0b00110110}\par
02969     0x36, {\cf20 // 0b00110110}\par
02970     0x36, {\cf20 // 0b00110110}\par
02971     0xf6, {\cf20 // 0b11110110}\par
02972     0x6, {\cf20 // 0b00000110}\par
02973     0xf6, {\cf20 // 0b11110110}\par
02974     0x36, {\cf20 // 0b00110110}\par
02975     0x36, {\cf20 // 0b00110110}\par
02976     0x36, {\cf20 // 0b00110110}\par
02977     0x36, {\cf20 // 0b00110110}\par
02978     0x36, {\cf20 // 0b00110110}\par
02979     0x36, {\cf20 // 0b00110110}\par
02980     0x36, {\cf20 // 0b00110110}\par
02981     0x36, {\cf20 // 0b00110110}\par
02982     0x36, {\cf20 // 0b00110110}\par
02983     0x36, {\cf20 // 0b00110110}\par
02984     0x36, {\cf20 // 0b00110110}\par
02985     0x36, {\cf20 // 0b00110110}\par
02986     0x36, {\cf20 // 0b00110110}\par
02987     0x36, {\cf20 // 0b00110110}\par
02988     0x36, {\cf20 // 0b00110110}\par
02989     0x36, {\cf20 // 0b00110110}\par
02990     0x36, {\cf20 // 0b00110110}\par
02991     0x36, {\cf20 // 0b00110110}\par
02992     0x36, {\cf20 // 0b00110110}\par
02993     0x36, {\cf20 // 0b00110110}\par
02994     0x36, {\cf20 // 0b00110110}\par
02995     0x36, {\cf20 // 0b00110110}\par
02996     0x36, {\cf20 // 0b00110110}\par
02997     0x36, {\cf20 // 0b00110110}\par
02998     0x00, {\cf20 // 0b00000000}\par
02999     0x00, {\cf20 // 0b00000000}\par
03000     0x00, {\cf20 // 0b00000000}\par
03001     0x00, {\cf20 // 0b00000000}\par
03002     0x00, {\cf20 // 0b00000000}\par
03003     0xfe, {\cf20 // 0b11111110}\par
03004     0x6, {\cf20 // 0b00000110}\par
03005     0xf6, {\cf20 // 0b11110110}\par
03006     0x36, {\cf20 // 0b00110110}\par
03007     0x36, {\cf20 // 0b00110110}\par
03008     0x36, {\cf20 // 0b00110110}\par
03009     0x36, {\cf20 // 0b00110110}\par
03010     0x36, {\cf20 // 0b00110110}\par
03011     0x36, {\cf20 // 0b00110110}\par
03012     0x36, {\cf20 // 0b00110110}\par
03013     0x36, {\cf20 // 0b00110110}\par
03014     0x36, {\cf20 // 0b00110110}\par
03015     0x36, {\cf20 // 0b00110110}\par
03016     0x36, {\cf20 // 0b00110110}\par
03017     0x36, {\cf20 // 0b00110110}\par
03018     0x36, {\cf20 // 0b00110110}\par
03019     0xf6, {\cf20 // 0b11110110}\par
03020     0x6, {\cf20 // 0b00000110}\par
03021     0xfe, {\cf20 // 0b11111110}\par
03022     0x00, {\cf20 // 0b00000000}\par
03023     0x00, {\cf20 // 0b00000000}\par
03024     0x00, {\cf20 // 0b00000000}\par
03025     0x00, {\cf20 // 0b00000000}\par
03026     0x00, {\cf20 // 0b00000000}\par
03027     0x00, {\cf20 // 0b00000000}\par
03028     0x00, {\cf20 // 0b00000000}\par
03029     0x00, {\cf20 // 0b00000000}\par
03030     0x36, {\cf20 // 0b00110110}\par
03031     0x36, {\cf20 // 0b00110110}\par
03032     0x36, {\cf20 // 0b00110110}\par
03033     0x36, {\cf20 // 0b00110110}\par
03034     0x36, {\cf20 // 0b00110110}\par
03035     0x36, {\cf20 // 0b00110110}\par
03036     0x36, {\cf20 // 0b00110110}\par
03037     0xfe, {\cf20 // 0b11111110}\par
03038     0x00, {\cf20 // 0b00000000}\par
03039     0x00, {\cf20 // 0b00000000}\par
03040     0x00, {\cf20 // 0b00000000}\par
03041     0x00, {\cf20 // 0b00000000}\par
03042     0x00, {\cf20 // 0b00000000}\par
03043     0x00, {\cf20 // 0b00000000}\par
03044     0x00, {\cf20 // 0b00000000}\par
03045     0x00, {\cf20 // 0b00000000}\par
03046     0x18, {\cf20 // 0b00011000}\par
03047     0x18, {\cf20 // 0b00011000}\par
03048     0x18, {\cf20 // 0b00011000}\par
03049     0x18, {\cf20 // 0b00011000}\par
03050     0x18, {\cf20 // 0b00011000}\par
03051     0xf8, {\cf20 // 0b11111000}\par
03052     0x18, {\cf20 // 0b00011000}\par
03053     0xf8, {\cf20 // 0b11111000}\par
03054     0x00, {\cf20 // 0b00000000}\par
03055     0x00, {\cf20 // 0b00000000}\par
03056     0x00, {\cf20 // 0b00000000}\par
03057     0x00, {\cf20 // 0b00000000}\par
03058     0x00, {\cf20 // 0b00000000}\par
03059     0x00, {\cf20 // 0b00000000}\par
03060     0x00, {\cf20 // 0b00000000}\par
03061     0x00, {\cf20 // 0b00000000}\par
03062     0x00, {\cf20 // 0b00000000}\par
03063     0x00, {\cf20 // 0b00000000}\par
03064     0x00, {\cf20 // 0b00000000}\par
03065     0x00, {\cf20 // 0b00000000}\par
03066     0x00, {\cf20 // 0b00000000}\par
03067     0x00, {\cf20 // 0b00000000}\par
03068     0x00, {\cf20 // 0b00000000}\par
03069     0xf8, {\cf20 // 0b11111000}\par
03070     0x18, {\cf20 // 0b00011000}\par
03071     0x18, {\cf20 // 0b00011000}\par
03072     0x18, {\cf20 // 0b00011000}\par
03073     0x18, {\cf20 // 0b00011000}\par
03074     0x18, {\cf20 // 0b00011000}\par
03075     0x18, {\cf20 // 0b00011000}\par
03076     0x18, {\cf20 // 0b00011000}\par
03077     0x18, {\cf20 // 0b00011000}\par
03078     0x18, {\cf20 // 0b00011000}\par
03079     0x18, {\cf20 // 0b00011000}\par
03080     0x18, {\cf20 // 0b00011000}\par
03081     0x18, {\cf20 // 0b00011000}\par
03082     0x18, {\cf20 // 0b00011000}\par
03083     0x18, {\cf20 // 0b00011000}\par
03084     0x18, {\cf20 // 0b00011000}\par
03085     0x1f, {\cf20 // 0b00011111}\par
03086     0x00, {\cf20 // 0b00000000}\par
03087     0x00, {\cf20 // 0b00000000}\par
03088     0x00, {\cf20 // 0b00000000}\par
03089     0x00, {\cf20 // 0b00000000}\par
03090     0x00, {\cf20 // 0b00000000}\par
03091     0x00, {\cf20 // 0b00000000}\par
03092     0x00, {\cf20 // 0b00000000}\par
03093     0x00, {\cf20 // 0b00000000}\par
03094     0x18, {\cf20 // 0b00011000}\par
03095     0x18, {\cf20 // 0b00011000}\par
03096     0x18, {\cf20 // 0b00011000}\par
03097     0x18, {\cf20 // 0b00011000}\par
03098     0x18, {\cf20 // 0b00011000}\par
03099     0x18, {\cf20 // 0b00011000}\par
03100     0x18, {\cf20 // 0b00011000}\par
03101     0xff, {\cf20 // 0b11111111}\par
03102     0x00, {\cf20 // 0b00000000}\par
03103     0x00, {\cf20 // 0b00000000}\par
03104     0x00, {\cf20 // 0b00000000}\par
03105     0x00, {\cf20 // 0b00000000}\par
03106     0x00, {\cf20 // 0b00000000}\par
03107     0x00, {\cf20 // 0b00000000}\par
03108     0x00, {\cf20 // 0b00000000}\par
03109     0x00, {\cf20 // 0b00000000}\par
03110     0x00, {\cf20 // 0b00000000}\par
03111     0x00, {\cf20 // 0b00000000}\par
03112     0x00, {\cf20 // 0b00000000}\par
03113     0x00, {\cf20 // 0b00000000}\par
03114     0x00, {\cf20 // 0b00000000}\par
03115     0x00, {\cf20 // 0b00000000}\par
03116     0x00, {\cf20 // 0b00000000}\par
03117     0xff, {\cf20 // 0b11111111}\par
03118     0x18, {\cf20 // 0b00011000}\par
03119     0x18, {\cf20 // 0b00011000}\par
03120     0x18, {\cf20 // 0b00011000}\par
03121     0x18, {\cf20 // 0b00011000}\par
03122     0x18, {\cf20 // 0b00011000}\par
03123     0x18, {\cf20 // 0b00011000}\par
03124     0x18, {\cf20 // 0b00011000}\par
03125     0x18, {\cf20 // 0b00011000}\par
03126     0x18, {\cf20 // 0b00011000}\par
03127     0x18, {\cf20 // 0b00011000}\par
03128     0x18, {\cf20 // 0b00011000}\par
03129     0x18, {\cf20 // 0b00011000}\par
03130     0x18, {\cf20 // 0b00011000}\par
03131     0x18, {\cf20 // 0b00011000}\par
03132     0x18, {\cf20 // 0b00011000}\par
03133     0x1f, {\cf20 // 0b00011111}\par
03134     0x18, {\cf20 // 0b00011000}\par
03135     0x18, {\cf20 // 0b00011000}\par
03136     0x18, {\cf20 // 0b00011000}\par
03137     0x18, {\cf20 // 0b00011000}\par
03138     0x18, {\cf20 // 0b00011000}\par
03139     0x18, {\cf20 // 0b00011000}\par
03140     0x18, {\cf20 // 0b00011000}\par
03141     0x18, {\cf20 // 0b00011000}\par
03142     0x00, {\cf20 // 0b00000000}\par
03143     0x00, {\cf20 // 0b00000000}\par
03144     0x00, {\cf20 // 0b00000000}\par
03145     0x00, {\cf20 // 0b00000000}\par
03146     0x00, {\cf20 // 0b00000000}\par
03147     0x00, {\cf20 // 0b00000000}\par
03148     0x00, {\cf20 // 0b00000000}\par
03149     0xff, {\cf20 // 0b11111111}\par
03150     0x00, {\cf20 // 0b00000000}\par
03151     0x00, {\cf20 // 0b00000000}\par
03152     0x00, {\cf20 // 0b00000000}\par
03153     0x00, {\cf20 // 0b00000000}\par
03154     0x00, {\cf20 // 0b00000000}\par
03155     0x00, {\cf20 // 0b00000000}\par
03156     0x00, {\cf20 // 0b00000000}\par
03157     0x00, {\cf20 // 0b00000000}\par
03158     0x18, {\cf20 // 0b00011000}\par
03159     0x18, {\cf20 // 0b00011000}\par
03160     0x18, {\cf20 // 0b00011000}\par
03161     0x18, {\cf20 // 0b00011000}\par
03162     0x18, {\cf20 // 0b00011000}\par
03163     0x18, {\cf20 // 0b00011000}\par
03164     0x18, {\cf20 // 0b00011000}\par
03165     0xff, {\cf20 // 0b11111111}\par
03166     0x18, {\cf20 // 0b00011000}\par
03167     0x18, {\cf20 // 0b00011000}\par
03168     0x18, {\cf20 // 0b00011000}\par
03169     0x18, {\cf20 // 0b00011000}\par
03170     0x18, {\cf20 // 0b00011000}\par
03171     0x18, {\cf20 // 0b00011000}\par
03172     0x18, {\cf20 // 0b00011000}\par
03173     0x18, {\cf20 // 0b00011000}\par
03174     0x18, {\cf20 // 0b00011000}\par
03175     0x18, {\cf20 // 0b00011000}\par
03176     0x18, {\cf20 // 0b00011000}\par
03177     0x18, {\cf20 // 0b00011000}\par
03178     0x18, {\cf20 // 0b00011000}\par
03179     0x1f, {\cf20 // 0b00011111}\par
03180     0x18, {\cf20 // 0b00011000}\par
03181     0x1f, {\cf20 // 0b00011111}\par
03182     0x18, {\cf20 // 0b00011000}\par
03183     0x18, {\cf20 // 0b00011000}\par
03184     0x18, {\cf20 // 0b00011000}\par
03185     0x18, {\cf20 // 0b00011000}\par
03186     0x18, {\cf20 // 0b00011000}\par
03187     0x18, {\cf20 // 0b00011000}\par
03188     0x18, {\cf20 // 0b00011000}\par
03189     0x18, {\cf20 // 0b00011000}\par
03190     0x36, {\cf20 // 0b00110110}\par
03191     0x36, {\cf20 // 0b00110110}\par
03192     0x36, {\cf20 // 0b00110110}\par
03193     0x36, {\cf20 // 0b00110110}\par
03194     0x36, {\cf20 // 0b00110110}\par
03195     0x36, {\cf20 // 0b00110110}\par
03196     0x36, {\cf20 // 0b00110110}\par
03197     0x37, {\cf20 // 0b00110111}\par
03198     0x36, {\cf20 // 0b00110110}\par
03199     0x36, {\cf20 // 0b00110110}\par
03200     0x36, {\cf20 // 0b00110110}\par
03201     0x36, {\cf20 // 0b00110110}\par
03202     0x36, {\cf20 // 0b00110110}\par
03203     0x36, {\cf20 // 0b00110110}\par
03204     0x36, {\cf20 // 0b00110110}\par
03205     0x36, {\cf20 // 0b00110110}\par
03206     0x36, {\cf20 // 0b00110110}\par
03207     0x36, {\cf20 // 0b00110110}\par
03208     0x36, {\cf20 // 0b00110110}\par
03209     0x36, {\cf20 // 0b00110110}\par
03210     0x36, {\cf20 // 0b00110110}\par
03211     0x37, {\cf20 // 0b00110111}\par
03212     0x30, {\cf20 // 0b00110000}\par
03213     0x3f, {\cf20 // 0b00111111}\par
03214     0x00, {\cf20 // 0b00000000}\par
03215     0x00, {\cf20 // 0b00000000}\par
03216     0x00, {\cf20 // 0b00000000}\par
03217     0x00, {\cf20 // 0b00000000}\par
03218     0x00, {\cf20 // 0b00000000}\par
03219     0x00, {\cf20 // 0b00000000}\par
03220     0x00, {\cf20 // 0b00000000}\par
03221     0x00, {\cf20 // 0b00000000}\par
03222     0x00, {\cf20 // 0b00000000}\par
03223     0x00, {\cf20 // 0b00000000}\par
03224     0x00, {\cf20 // 0b00000000}\par
03225     0x00, {\cf20 // 0b00000000}\par
03226     0x00, {\cf20 // 0b00000000}\par
03227     0x3f, {\cf20 // 0b00111111}\par
03228     0x30, {\cf20 // 0b00110000}\par
03229     0x37, {\cf20 // 0b00110111}\par
03230     0x36, {\cf20 // 0b00110110}\par
03231     0x36, {\cf20 // 0b00110110}\par
03232     0x36, {\cf20 // 0b00110110}\par
03233     0x36, {\cf20 // 0b00110110}\par
03234     0x36, {\cf20 // 0b00110110}\par
03235     0x36, {\cf20 // 0b00110110}\par
03236     0x36, {\cf20 // 0b00110110}\par
03237     0x36, {\cf20 // 0b00110110}\par
03238     0x36, {\cf20 // 0b00110110}\par
03239     0x36, {\cf20 // 0b00110110}\par
03240     0x36, {\cf20 // 0b00110110}\par
03241     0x36, {\cf20 // 0b00110110}\par
03242     0x36, {\cf20 // 0b00110110}\par
03243     0xf7, {\cf20 // 0b11110111}\par
03244     0x00, {\cf20 // 0b00000000}\par
03245     0xff, {\cf20 // 0b11111111}\par
03246     0x00, {\cf20 // 0b00000000}\par
03247     0x00, {\cf20 // 0b00000000}\par
03248     0x00, {\cf20 // 0b00000000}\par
03249     0x00, {\cf20 // 0b00000000}\par
03250     0x00, {\cf20 // 0b00000000}\par
03251     0x00, {\cf20 // 0b00000000}\par
03252     0x00, {\cf20 // 0b00000000}\par
03253     0x00, {\cf20 // 0b00000000}\par
03254     0x00, {\cf20 // 0b00000000}\par
03255     0x00, {\cf20 // 0b00000000}\par
03256     0x00, {\cf20 // 0b00000000}\par
03257     0x00, {\cf20 // 0b00000000}\par
03258     0x00, {\cf20 // 0b00000000}\par
03259     0xff, {\cf20 // 0b11111111}\par
03260     0x00, {\cf20 // 0b00000000}\par
03261     0xf7, {\cf20 // 0b11110111}\par
03262     0x36, {\cf20 // 0b00110110}\par
03263     0x36, {\cf20 // 0b00110110}\par
03264     0x36, {\cf20 // 0b00110110}\par
03265     0x36, {\cf20 // 0b00110110}\par
03266     0x36, {\cf20 // 0b00110110}\par
03267     0x36, {\cf20 // 0b00110110}\par
03268     0x36, {\cf20 // 0b00110110}\par
03269     0x36, {\cf20 // 0b00110110}\par
03270     0x36, {\cf20 // 0b00110110}\par
03271     0x36, {\cf20 // 0b00110110}\par
03272     0x36, {\cf20 // 0b00110110}\par
03273     0x36, {\cf20 // 0b00110110}\par
03274     0x36, {\cf20 // 0b00110110}\par
03275     0x37, {\cf20 // 0b00110111}\par
03276     0x30, {\cf20 // 0b00110000}\par
03277     0x37, {\cf20 // 0b00110111}\par
03278     0x36, {\cf20 // 0b00110110}\par
03279     0x36, {\cf20 // 0b00110110}\par
03280     0x36, {\cf20 // 0b00110110}\par
03281     0x36, {\cf20 // 0b00110110}\par
03282     0x36, {\cf20 // 0b00110110}\par
03283     0x36, {\cf20 // 0b00110110}\par
03284     0x36, {\cf20 // 0b00110110}\par
03285     0x36, {\cf20 // 0b00110110}\par
03286     0x00, {\cf20 // 0b00000000}\par
03287     0x00, {\cf20 // 0b00000000}\par
03288     0x00, {\cf20 // 0b00000000}\par
03289     0x00, {\cf20 // 0b00000000}\par
03290     0x00, {\cf20 // 0b00000000}\par
03291     0xff, {\cf20 // 0b11111111}\par
03292     0x00, {\cf20 // 0b00000000}\par
03293     0xff, {\cf20 // 0b11111111}\par
03294     0x00, {\cf20 // 0b00000000}\par
03295     0x00, {\cf20 // 0b00000000}\par
03296     0x00, {\cf20 // 0b00000000}\par
03297     0x00, {\cf20 // 0b00000000}\par
03298     0x00, {\cf20 // 0b00000000}\par
03299     0x00, {\cf20 // 0b00000000}\par
03300     0x00, {\cf20 // 0b00000000}\par
03301     0x00, {\cf20 // 0b00000000}\par
03302     0x36, {\cf20 // 0b00110110}\par
03303     0x36, {\cf20 // 0b00110110}\par
03304     0x36, {\cf20 // 0b00110110}\par
03305     0x36, {\cf20 // 0b00110110}\par
03306     0x36, {\cf20 // 0b00110110}\par
03307     0xf7, {\cf20 // 0b11110111}\par
03308     0x00, {\cf20 // 0b00000000}\par
03309     0xf7, {\cf20 // 0b11110111}\par
03310     0x36, {\cf20 // 0b00110110}\par
03311     0x36, {\cf20 // 0b00110110}\par
03312     0x36, {\cf20 // 0b00110110}\par
03313     0x36, {\cf20 // 0b00110110}\par
03314     0x36, {\cf20 // 0b00110110}\par
03315     0x36, {\cf20 // 0b00110110}\par
03316     0x36, {\cf20 // 0b00110110}\par
03317     0x36, {\cf20 // 0b00110110}\par
03318     0x18, {\cf20 // 0b00011000}\par
03319     0x18, {\cf20 // 0b00011000}\par
03320     0x18, {\cf20 // 0b00011000}\par
03321     0x18, {\cf20 // 0b00011000}\par
03322     0x18, {\cf20 // 0b00011000}\par
03323     0xff, {\cf20 // 0b11111111}\par
03324     0x00, {\cf20 // 0b00000000}\par
03325     0xff, {\cf20 // 0b11111111}\par
03326     0x00, {\cf20 // 0b00000000}\par
03327     0x00, {\cf20 // 0b00000000}\par
03328     0x00, {\cf20 // 0b00000000}\par
03329     0x00, {\cf20 // 0b00000000}\par
03330     0x00, {\cf20 // 0b00000000}\par
03331     0x00, {\cf20 // 0b00000000}\par
03332     0x00, {\cf20 // 0b00000000}\par
03333     0x00, {\cf20 // 0b00000000}\par
03334     0x36, {\cf20 // 0b00110110}\par
03335     0x36, {\cf20 // 0b00110110}\par
03336     0x36, {\cf20 // 0b00110110}\par
03337     0x36, {\cf20 // 0b00110110}\par
03338     0x36, {\cf20 // 0b00110110}\par
03339     0x36, {\cf20 // 0b00110110}\par
03340     0x36, {\cf20 // 0b00110110}\par
03341     0xff, {\cf20 // 0b11111111}\par
03342     0x00, {\cf20 // 0b00000000}\par
03343     0x00, {\cf20 // 0b00000000}\par
03344     0x00, {\cf20 // 0b00000000}\par
03345     0x00, {\cf20 // 0b00000000}\par
03346     0x00, {\cf20 // 0b00000000}\par
03347     0x00, {\cf20 // 0b00000000}\par
03348     0x00, {\cf20 // 0b00000000}\par
03349     0x00, {\cf20 // 0b00000000}\par
03350     0x00, {\cf20 // 0b00000000}\par
03351     0x00, {\cf20 // 0b00000000}\par
03352     0x00, {\cf20 // 0b00000000}\par
03353     0x00, {\cf20 // 0b00000000}\par
03354     0x00, {\cf20 // 0b00000000}\par
03355     0xff, {\cf20 // 0b11111111}\par
03356     0x00, {\cf20 // 0b00000000}\par
03357     0xff, {\cf20 // 0b11111111}\par
03358     0x18, {\cf20 // 0b00011000}\par
03359     0x18, {\cf20 // 0b00011000}\par
03360     0x18, {\cf20 // 0b00011000}\par
03361     0x18, {\cf20 // 0b00011000}\par
03362     0x18, {\cf20 // 0b00011000}\par
03363     0x18, {\cf20 // 0b00011000}\par
03364     0x18, {\cf20 // 0b00011000}\par
03365     0x18, {\cf20 // 0b00011000}\par
03366     0x00, {\cf20 // 0b00000000}\par
03367     0x00, {\cf20 // 0b00000000}\par
03368     0x00, {\cf20 // 0b00000000}\par
03369     0x00, {\cf20 // 0b00000000}\par
03370     0x00, {\cf20 // 0b00000000}\par
03371     0x00, {\cf20 // 0b00000000}\par
03372     0x00, {\cf20 // 0b00000000}\par
03373     0xff, {\cf20 // 0b11111111}\par
03374     0x36, {\cf20 // 0b00110110}\par
03375     0x36, {\cf20 // 0b00110110}\par
03376     0x36, {\cf20 // 0b00110110}\par
03377     0x36, {\cf20 // 0b00110110}\par
03378     0x36, {\cf20 // 0b00110110}\par
03379     0x36, {\cf20 // 0b00110110}\par
03380     0x36, {\cf20 // 0b00110110}\par
03381     0x36, {\cf20 // 0b00110110}\par
03382     0x36, {\cf20 // 0b00110110}\par
03383     0x36, {\cf20 // 0b00110110}\par
03384     0x36, {\cf20 // 0b00110110}\par
03385     0x36, {\cf20 // 0b00110110}\par
03386     0x36, {\cf20 // 0b00110110}\par
03387     0x36, {\cf20 // 0b00110110}\par
03388     0x36, {\cf20 // 0b00110110}\par
03389     0x3f, {\cf20 // 0b00111111}\par
03390     0x00, {\cf20 // 0b00000000}\par
03391     0x00, {\cf20 // 0b00000000}\par
03392     0x00, {\cf20 // 0b00000000}\par
03393     0x00, {\cf20 // 0b00000000}\par
03394     0x00, {\cf20 // 0b00000000}\par
03395     0x00, {\cf20 // 0b00000000}\par
03396     0x00, {\cf20 // 0b00000000}\par
03397     0x00, {\cf20 // 0b00000000}\par
03398     0x18, {\cf20 // 0b00011000}\par
03399     0x18, {\cf20 // 0b00011000}\par
03400     0x18, {\cf20 // 0b00011000}\par
03401     0x18, {\cf20 // 0b00011000}\par
03402     0x18, {\cf20 // 0b00011000}\par
03403     0x1f, {\cf20 // 0b00011111}\par
03404     0x18, {\cf20 // 0b00011000}\par
03405     0x1f, {\cf20 // 0b00011111}\par
03406     0x00, {\cf20 // 0b00000000}\par
03407     0x00, {\cf20 // 0b00000000}\par
03408     0x00, {\cf20 // 0b00000000}\par
03409     0x00, {\cf20 // 0b00000000}\par
03410     0x00, {\cf20 // 0b00000000}\par
03411     0x00, {\cf20 // 0b00000000}\par
03412     0x00, {\cf20 // 0b00000000}\par
03413     0x00, {\cf20 // 0b00000000}\par
03414     0x00, {\cf20 // 0b00000000}\par
03415     0x00, {\cf20 // 0b00000000}\par
03416     0x00, {\cf20 // 0b00000000}\par
03417     0x00, {\cf20 // 0b00000000}\par
03418     0x00, {\cf20 // 0b00000000}\par
03419     0x1f, {\cf20 // 0b00011111}\par
03420     0x18, {\cf20 // 0b00011000}\par
03421     0x1f, {\cf20 // 0b00011111}\par
03422     0x18, {\cf20 // 0b00011000}\par
03423     0x18, {\cf20 // 0b00011000}\par
03424     0x18, {\cf20 // 0b00011000}\par
03425     0x18, {\cf20 // 0b00011000}\par
03426     0x18, {\cf20 // 0b00011000}\par
03427     0x18, {\cf20 // 0b00011000}\par
03428     0x18, {\cf20 // 0b00011000}\par
03429     0x18, {\cf20 // 0b00011000}\par
03430     0x00, {\cf20 // 0b00000000}\par
03431     0x00, {\cf20 // 0b00000000}\par
03432     0x00, {\cf20 // 0b00000000}\par
03433     0x00, {\cf20 // 0b00000000}\par
03434     0x00, {\cf20 // 0b00000000}\par
03435     0x00, {\cf20 // 0b00000000}\par
03436     0x00, {\cf20 // 0b00000000}\par
03437     0x3f, {\cf20 // 0b00111111}\par
03438     0x36, {\cf20 // 0b00110110}\par
03439     0x36, {\cf20 // 0b00110110}\par
03440     0x36, {\cf20 // 0b00110110}\par
03441     0x36, {\cf20 // 0b00110110}\par
03442     0x36, {\cf20 // 0b00110110}\par
03443     0x36, {\cf20 // 0b00110110}\par
03444     0x36, {\cf20 // 0b00110110}\par
03445     0x36, {\cf20 // 0b00110110}\par
03446     0x36, {\cf20 // 0b00110110}\par
03447     0x36, {\cf20 // 0b00110110}\par
03448     0x36, {\cf20 // 0b00110110}\par
03449     0x36, {\cf20 // 0b00110110}\par
03450     0x36, {\cf20 // 0b00110110}\par
03451     0x36, {\cf20 // 0b00110110}\par
03452     0x36, {\cf20 // 0b00110110}\par
03453     0xff, {\cf20 // 0b11111111}\par
03454     0x36, {\cf20 // 0b00110110}\par
03455     0x36, {\cf20 // 0b00110110}\par
03456     0x36, {\cf20 // 0b00110110}\par
03457     0x36, {\cf20 // 0b00110110}\par
03458     0x36, {\cf20 // 0b00110110}\par
03459     0x36, {\cf20 // 0b00110110}\par
03460     0x36, {\cf20 // 0b00110110}\par
03461     0x36, {\cf20 // 0b00110110}\par
03462     0x18, {\cf20 // 0b00011000}\par
03463     0x18, {\cf20 // 0b00011000}\par
03464     0x18, {\cf20 // 0b00011000}\par
03465     0x18, {\cf20 // 0b00011000}\par
03466     0x18, {\cf20 // 0b00011000}\par
03467     0xff, {\cf20 // 0b11111111}\par
03468     0x18, {\cf20 // 0b00011000}\par
03469     0xff, {\cf20 // 0b11111111}\par
03470     0x18, {\cf20 // 0b00011000}\par
03471     0x18, {\cf20 // 0b00011000}\par
03472     0x18, {\cf20 // 0b00011000}\par
03473     0x18, {\cf20 // 0b00011000}\par
03474     0x18, {\cf20 // 0b00011000}\par
03475     0x18, {\cf20 // 0b00011000}\par
03476     0x18, {\cf20 // 0b00011000}\par
03477     0x18, {\cf20 // 0b00011000}\par
03478     0x18, {\cf20 // 0b00011000}\par
03479     0x18, {\cf20 // 0b00011000}\par
03480     0x18, {\cf20 // 0b00011000}\par
03481     0x18, {\cf20 // 0b00011000}\par
03482     0x18, {\cf20 // 0b00011000}\par
03483     0x18, {\cf20 // 0b00011000}\par
03484     0x18, {\cf20 // 0b00011000}\par
03485     0xf8, {\cf20 // 0b11111000}\par
03486     0x00, {\cf20 // 0b00000000}\par
03487     0x00, {\cf20 // 0b00000000}\par
03488     0x00, {\cf20 // 0b00000000}\par
03489     0x00, {\cf20 // 0b00000000}\par
03490     0x00, {\cf20 // 0b00000000}\par
03491     0x00, {\cf20 // 0b00000000}\par
03492     0x00, {\cf20 // 0b00000000}\par
03493     0x00, {\cf20 // 0b00000000}\par
03494     0x00, {\cf20 // 0b00000000}\par
03495     0x00, {\cf20 // 0b00000000}\par
03496     0x00, {\cf20 // 0b00000000}\par
03497     0x00, {\cf20 // 0b00000000}\par
03498     0x00, {\cf20 // 0b00000000}\par
03499     0x00, {\cf20 // 0b00000000}\par
03500     0x00, {\cf20 // 0b00000000}\par
03501     0x1f, {\cf20 // 0b00011111}\par
03502     0x18, {\cf20 // 0b00011000}\par
03503     0x18, {\cf20 // 0b00011000}\par
03504     0x18, {\cf20 // 0b00011000}\par
03505     0x18, {\cf20 // 0b00011000}\par
03506     0x18, {\cf20 // 0b00011000}\par
03507     0x18, {\cf20 // 0b00011000}\par
03508     0x18, {\cf20 // 0b00011000}\par
03509     0x18, {\cf20 // 0b00011000}\par
03510     0xff, {\cf20 // 0b11111111}\par
03511     0xff, {\cf20 // 0b11111111}\par
03512     0xff, {\cf20 // 0b11111111}\par
03513     0xff, {\cf20 // 0b11111111}\par
03514     0xff, {\cf20 // 0b11111111}\par
03515     0xff, {\cf20 // 0b11111111}\par
03516     0xff, {\cf20 // 0b11111111}\par
03517     0xff, {\cf20 // 0b11111111}\par
03518     0xff, {\cf20 // 0b11111111}\par
03519     0xff, {\cf20 // 0b11111111}\par
03520     0xff, {\cf20 // 0b11111111}\par
03521     0xff, {\cf20 // 0b11111111}\par
03522     0xff, {\cf20 // 0b11111111}\par
03523     0xff, {\cf20 // 0b11111111}\par
03524     0xff, {\cf20 // 0b11111111}\par
03525     0xff, {\cf20 // 0b11111111}\par
03526     0x00, {\cf20 // 0b00000000}\par
03527     0x00, {\cf20 // 0b00000000}\par
03528     0x00, {\cf20 // 0b00000000}\par
03529     0x00, {\cf20 // 0b00000000}\par
03530     0x00, {\cf20 // 0b00000000}\par
03531     0x00, {\cf20 // 0b00000000}\par
03532     0x00, {\cf20 // 0b00000000}\par
03533     0xff, {\cf20 // 0b11111111}\par
03534     0xff, {\cf20 // 0b11111111}\par
03535     0xff, {\cf20 // 0b11111111}\par
03536     0xff, {\cf20 // 0b11111111}\par
03537     0xff, {\cf20 // 0b11111111}\par
03538     0xff, {\cf20 // 0b11111111}\par
03539     0xff, {\cf20 // 0b11111111}\par
03540     0xff, {\cf20 // 0b11111111}\par
03541     0xff, {\cf20 // 0b11111111}\par
03542     0xf0, {\cf20 // 0b11110000}\par
03543     0xf0, {\cf20 // 0b11110000}\par
03544     0xf0, {\cf20 // 0b11110000}\par
03545     0xf0, {\cf20 // 0b11110000}\par
03546     0xf0, {\cf20 // 0b11110000}\par
03547     0xf0, {\cf20 // 0b11110000}\par
03548     0xf0, {\cf20 // 0b11110000}\par
03549     0xf0, {\cf20 // 0b11110000}\par
03550     0xf0, {\cf20 // 0b11110000}\par
03551     0xf0, {\cf20 // 0b11110000}\par
03552     0xf0, {\cf20 // 0b11110000}\par
03553     0xf0, {\cf20 // 0b11110000}\par
03554     0xf0, {\cf20 // 0b11110000}\par
03555     0xf0, {\cf20 // 0b11110000}\par
03556     0xf0, {\cf20 // 0b11110000}\par
03557     0xf0, {\cf20 // 0b11110000}\par
03558     0xf, {\cf20 // 0b00001111}\par
03559     0xf, {\cf20 // 0b00001111}\par
03560     0xf, {\cf20 // 0b00001111}\par
03561     0xf, {\cf20 // 0b00001111}\par
03562     0xf, {\cf20 // 0b00001111}\par
03563     0xf, {\cf20 // 0b00001111}\par
03564     0xf, {\cf20 // 0b00001111}\par
03565     0xf, {\cf20 // 0b00001111}\par
03566     0xf, {\cf20 // 0b00001111}\par
03567     0xf, {\cf20 // 0b00001111}\par
03568     0xf, {\cf20 // 0b00001111}\par
03569     0xf, {\cf20 // 0b00001111}\par
03570     0xf, {\cf20 // 0b00001111}\par
03571     0xf, {\cf20 // 0b00001111}\par
03572     0xf, {\cf20 // 0b00001111}\par
03573     0xf, {\cf20 // 0b00001111}\par
03574     0xff, {\cf20 // 0b11111111}\par
03575     0xff, {\cf20 // 0b11111111}\par
03576     0xff, {\cf20 // 0b11111111}\par
03577     0xff, {\cf20 // 0b11111111}\par
03578     0xff, {\cf20 // 0b11111111}\par
03579     0xff, {\cf20 // 0b11111111}\par
03580     0xff, {\cf20 // 0b11111111}\par
03581     0x00, {\cf20 // 0b00000000}\par
03582     0x00, {\cf20 // 0b00000000}\par
03583     0x00, {\cf20 // 0b00000000}\par
03584     0x00, {\cf20 // 0b00000000}\par
03585     0x00, {\cf20 // 0b00000000}\par
03586     0x00, {\cf20 // 0b00000000}\par
03587     0x00, {\cf20 // 0b00000000}\par
03588     0x00, {\cf20 // 0b00000000}\par
03589     0x00, {\cf20 // 0b00000000}\par
03590     0x00, {\cf20 // 0b00000000}\par
03591     0x00, {\cf20 // 0b00000000}\par
03592     0x00, {\cf20 // 0b00000000}\par
03593     0x00, {\cf20 // 0b00000000}\par
03594     0x7c, {\cf20 // 0b01111100}\par
03595     0x82, {\cf20 // 0b10000010}\par
03596     0xfe, {\cf20 // 0b11111110}\par
03597     0x82, {\cf20 // 0b10000010}\par
03598     0x82, {\cf20 // 0b10000010}\par
03599     0x82, {\cf20 // 0b10000010}\par
03600     0x82, {\cf20 // 0b10000010}\par
03601     0x82, {\cf20 // 0b10000010}\par
03602     0x00, {\cf20 // 0b00000000}\par
03603     0x00, {\cf20 // 0b00000000}\par
03604     0x00, {\cf20 // 0b00000000}\par
03605     0x00, {\cf20 // 0b00000000}\par
03606     0x00, {\cf20 // 0b00000000}\par
03607     0x00, {\cf20 // 0b00000000}\par
03608     0x7e, {\cf20 // 0b01111110}\par
03609     0x80, {\cf20 // 0b10000000}\par
03610     0x80, {\cf20 // 0b10000000}\par
03611     0x80, {\cf20 // 0b10000000}\par
03612     0xfc, {\cf20 // 0b11111100}\par
03613     0x82, {\cf20 // 0b10000010}\par
03614     0x82, {\cf20 // 0b10000010}\par
03615     0x82, {\cf20 // 0b10000010}\par
03616     0x82, {\cf20 // 0b10000010}\par
03617     0xfc, {\cf20 // 0b11111100}\par
03618     0x00, {\cf20 // 0b00000000}\par
03619     0x00, {\cf20 // 0b00000000}\par
03620     0x00, {\cf20 // 0b00000000}\par
03621     0x00, {\cf20 // 0b00000000}\par
03622     0x00, {\cf20 // 0b00000000}\par
03623     0x00, {\cf20 // 0b00000000}\par
03624     0x00, {\cf20 // 0b00000000}\par
03625     0x7c, {\cf20 // 0b01111100}\par
03626     0x82, {\cf20 // 0b10000010}\par
03627     0x82, {\cf20 // 0b10000010}\par
03628     0xfc, {\cf20 // 0b11111100}\par
03629     0x82, {\cf20 // 0b10000010}\par
03630     0x82, {\cf20 // 0b10000010}\par
03631     0x82, {\cf20 // 0b10000010}\par
03632     0x82, {\cf20 // 0b10000010}\par
03633     0xfc, {\cf20 // 0b11111100}\par
03634     0x00, {\cf20 // 0b00000000}\par
03635     0x00, {\cf20 // 0b00000000}\par
03636     0x00, {\cf20 // 0b00000000}\par
03637     0x00, {\cf20 // 0b00000000}\par
03638     0x00, {\cf20 // 0b00000000}\par
03639     0x00, {\cf20 // 0b00000000}\par
03640     0x00, {\cf20 // 0b00000000}\par
03641     0x00, {\cf20 // 0b00000000}\par
03642     0x7e, {\cf20 // 0b01111110}\par
03643     0x80, {\cf20 // 0b10000000}\par
03644     0x80, {\cf20 // 0b10000000}\par
03645     0x80, {\cf20 // 0b10000000}\par
03646     0x80, {\cf20 // 0b10000000}\par
03647     0x80, {\cf20 // 0b10000000}\par
03648     0x80, {\cf20 // 0b10000000}\par
03649     0x80, {\cf20 // 0b10000000}\par
03650     0x00, {\cf20 // 0b00000000}\par
03651     0x00, {\cf20 // 0b00000000}\par
03652     0x00, {\cf20 // 0b00000000}\par
03653     0x00, {\cf20 // 0b00000000}\par
03654     0x00, {\cf20 // 0b00000000}\par
03655     0x00, {\cf20 // 0b00000000}\par
03656     0x38, {\cf20 // 0b00111000}\par
03657     0x44, {\cf20 // 0b01000100}\par
03658     0x44, {\cf20 // 0b01000100}\par
03659     0x44, {\cf20 // 0b01000100}\par
03660     0x44, {\cf20 // 0b01000100}\par
03661     0xfe, {\cf20 // 0b11111110}\par
03662     0x82, {\cf20 // 0b10000010}\par
03663     0x82, {\cf20 // 0b10000010}\par
03664     0x82, {\cf20 // 0b10000010}\par
03665     0x82, {\cf20 // 0b10000010}\par
03666     0x00, {\cf20 // 0b00000000}\par
03667     0x00, {\cf20 // 0b00000000}\par
03668     0x00, {\cf20 // 0b00000000}\par
03669     0x00, {\cf20 // 0b00000000}\par
03670     0x00, {\cf20 // 0b00000000}\par
03671     0x00, {\cf20 // 0b00000000}\par
03672     0x00, {\cf20 // 0b00000000}\par
03673     0x00, {\cf20 // 0b00000000}\par
03674     0x00, {\cf20 // 0b00000000}\par
03675     0x7c, {\cf20 // 0b01111100}\par
03676     0x82, {\cf20 // 0b10000010}\par
03677     0xfc, {\cf20 // 0b11111100}\par
03678     0x80, {\cf20 // 0b10000000}\par
03679     0x80, {\cf20 // 0b10000000}\par
03680     0x82, {\cf20 // 0b10000010}\par
03681     0x7c, {\cf20 // 0b01111100}\par
03682     0x00, {\cf20 // 0b00000000}\par
03683     0x00, {\cf20 // 0b00000000}\par
03684     0x00, {\cf20 // 0b00000000}\par
03685     0x00, {\cf20 // 0b00000000}\par
03686     0x00, {\cf20 // 0b00000000}\par
03687     0x00, {\cf20 // 0b00000000}\par
03688     0x00, {\cf20 // 0b00000000}\par
03689     0x00, {\cf20 // 0b00000000}\par
03690     0x00, {\cf20 // 0b00000000}\par
03691     0x00, {\cf20 // 0b00000000}\par
03692     0x48, {\cf20 // 0b01001000}\par
03693     0x00, {\cf20 // 0b00000000}\par
03694     0x7c, {\cf20 // 0b01111100}\par
03695     0x82, {\cf20 // 0b10000010}\par
03696     0xfc, {\cf20 // 0b11111100}\par
03697     0x80, {\cf20 // 0b10000000}\par
03698     0x80, {\cf20 // 0b10000000}\par
03699     0x82, {\cf20 // 0b10000010}\par
03700     0x7c, {\cf20 // 0b01111100}\par
03701     0x00, {\cf20 // 0b00000000}\par
03702     0x00, {\cf20 // 0b00000000}\par
03703     0x00, {\cf20 // 0b00000000}\par
03704     0x00, {\cf20 // 0b00000000}\par
03705     0x00, {\cf20 // 0b00000000}\par
03706     0x00, {\cf20 // 0b00000000}\par
03707     0x92, {\cf20 // 0b10010010}\par
03708     0x54, {\cf20 // 0b01010100}\par
03709     0x38, {\cf20 // 0b00111000}\par
03710     0x10, {\cf20 // 0b00010000}\par
03711     0x38, {\cf20 // 0b00111000}\par
03712     0x54, {\cf20 // 0b01010100}\par
03713     0x92, {\cf20 // 0b10010010}\par
03714     0x00, {\cf20 // 0b00000000}\par
03715     0x00, {\cf20 // 0b00000000}\par
03716     0x00, {\cf20 // 0b00000000}\par
03717     0x00, {\cf20 // 0b00000000}\par
03718     0x00, {\cf20 // 0b00000000}\par
03719     0x00, {\cf20 // 0b00000000}\par
03720     0x7e, {\cf20 // 0b01111110}\par
03721     0x18, {\cf20 // 0b00011000}\par
03722     0x3c, {\cf20 // 0b00111100}\par
03723     0x66, {\cf20 // 0b01100110}\par
03724     0x66, {\cf20 // 0b01100110}\par
03725     0x66, {\cf20 // 0b01100110}\par
03726     0x66, {\cf20 // 0b01100110}\par
03727     0x3c, {\cf20 // 0b00111100}\par
03728     0x18, {\cf20 // 0b00011000}\par
03729     0x7e, {\cf20 // 0b01111110}\par
03730     0x00, {\cf20 // 0b00000000}\par
03731     0x00, {\cf20 // 0b00000000}\par
03732     0x00, {\cf20 // 0b00000000}\par
03733     0x00, {\cf20 // 0b00000000}\par
03734     0x00, {\cf20 // 0b00000000}\par
03735     0x00, {\cf20 // 0b00000000}\par
03736     0x38, {\cf20 // 0b00111000}\par
03737     0x6c, {\cf20 // 0b01101100}\par
03738     0xc6, {\cf20 // 0b11000110}\par
03739     0xc6, {\cf20 // 0b11000110}\par
03740     0xfe, {\cf20 // 0b11111110}\par
03741     0xc6, {\cf20 // 0b11000110}\par
03742     0xc6, {\cf20 // 0b11000110}\par
03743     0xc6, {\cf20 // 0b11000110}\par
03744     0x6c, {\cf20 // 0b01101100}\par
03745     0x38, {\cf20 // 0b00111000}\par
03746     0x00, {\cf20 // 0b00000000}\par
03747     0x00, {\cf20 // 0b00000000}\par
03748     0x00, {\cf20 // 0b00000000}\par
03749     0x00, {\cf20 // 0b00000000}\par
03750     0x00, {\cf20 // 0b00000000}\par
03751     0x00, {\cf20 // 0b00000000}\par
03752     0x38, {\cf20 // 0b00111000}\par
03753     0x6c, {\cf20 // 0b01101100}\par
03754     0xc6, {\cf20 // 0b11000110}\par
03755     0xc6, {\cf20 // 0b11000110}\par
03756     0xc6, {\cf20 // 0b11000110}\par
03757     0x6c, {\cf20 // 0b01101100}\par
03758     0x6c, {\cf20 // 0b01101100}\par
03759     0x6c, {\cf20 // 0b01101100}\par
03760     0x6c, {\cf20 // 0b01101100}\par
03761     0xee, {\cf20 // 0b11101110}\par
03762     0x00, {\cf20 // 0b00000000}\par
03763     0x00, {\cf20 // 0b00000000}\par
03764     0x00, {\cf20 // 0b00000000}\par
03765     0x00, {\cf20 // 0b00000000}\par
03766     0x00, {\cf20 // 0b00000000}\par
03767     0x00, {\cf20 // 0b00000000}\par
03768     0x1e, {\cf20 // 0b00011110}\par
03769     0x30, {\cf20 // 0b00110000}\par
03770     0x18, {\cf20 // 0b00011000}\par
03771     0xc, {\cf20 // 0b00001100}\par
03772     0x3e, {\cf20 // 0b00111110}\par
03773     0x66, {\cf20 // 0b01100110}\par
03774     0x66, {\cf20 // 0b01100110}\par
03775     0x66, {\cf20 // 0b01100110}\par
03776     0x66, {\cf20 // 0b01100110}\par
03777     0x3c, {\cf20 // 0b00111100}\par
03778     0x00, {\cf20 // 0b00000000}\par
03779     0x00, {\cf20 // 0b00000000}\par
03780     0x00, {\cf20 // 0b00000000}\par
03781     0x00, {\cf20 // 0b00000000}\par
03782     0x00, {\cf20 // 0b00000000}\par
03783     0x00, {\cf20 // 0b00000000}\par
03784     0x00, {\cf20 // 0b00000000}\par
03785     0x00, {\cf20 // 0b00000000}\par
03786     0x00, {\cf20 // 0b00000000}\par
03787     0x7e, {\cf20 // 0b01111110}\par
03788     0xdb, {\cf20 // 0b11011011}\par
03789     0xdb, {\cf20 // 0b11011011}\par
03790     0xdb, {\cf20 // 0b11011011}\par
03791     0x7e, {\cf20 // 0b01111110}\par
03792     0x00, {\cf20 // 0b00000000}\par
03793     0x00, {\cf20 // 0b00000000}\par
03794     0x00, {\cf20 // 0b00000000}\par
03795     0x00, {\cf20 // 0b00000000}\par
03796     0x00, {\cf20 // 0b00000000}\par
03797     0x00, {\cf20 // 0b00000000}\par
03798     0x00, {\cf20 // 0b00000000}\par
03799     0x00, {\cf20 // 0b00000000}\par
03800     0x00, {\cf20 // 0b00000000}\par
03801     0x3, {\cf20 // 0b00000011}\par
03802     0x6, {\cf20 // 0b00000110}\par
03803     0x7e, {\cf20 // 0b01111110}\par
03804     0xdb, {\cf20 // 0b11011011}\par
03805     0xdb, {\cf20 // 0b11011011}\par
03806     0xf3, {\cf20 // 0b11110011}\par
03807     0x7e, {\cf20 // 0b01111110}\par
03808     0x60, {\cf20 // 0b01100000}\par
03809     0xc0, {\cf20 // 0b11000000}\par
03810     0x00, {\cf20 // 0b00000000}\par
03811     0x00, {\cf20 // 0b00000000}\par
03812     0x00, {\cf20 // 0b00000000}\par
03813     0x00, {\cf20 // 0b00000000}\par
03814     0x00, {\cf20 // 0b00000000}\par
03815     0x00, {\cf20 // 0b00000000}\par
03816     0x1c, {\cf20 // 0b00011100}\par
03817     0x30, {\cf20 // 0b00110000}\par
03818     0x60, {\cf20 // 0b01100000}\par
03819     0x60, {\cf20 // 0b01100000}\par
03820     0x7c, {\cf20 // 0b01111100}\par
03821     0x60, {\cf20 // 0b01100000}\par
03822     0x60, {\cf20 // 0b01100000}\par
03823     0x60, {\cf20 // 0b01100000}\par
03824     0x30, {\cf20 // 0b00110000}\par
03825     0x1c, {\cf20 // 0b00011100}\par
03826     0x00, {\cf20 // 0b00000000}\par
03827     0x00, {\cf20 // 0b00000000}\par
03828     0x00, {\cf20 // 0b00000000}\par
03829     0x00, {\cf20 // 0b00000000}\par
03830     0x00, {\cf20 // 0b00000000}\par
03831     0x00, {\cf20 // 0b00000000}\par
03832     0x00, {\cf20 // 0b00000000}\par
03833     0x7c, {\cf20 // 0b01111100}\par
03834     0xc6, {\cf20 // 0b11000110}\par
03835     0xc6, {\cf20 // 0b11000110}\par
03836     0xc6, {\cf20 // 0b11000110}\par
03837     0xc6, {\cf20 // 0b11000110}\par
03838     0xc6, {\cf20 // 0b11000110}\par
03839     0xc6, {\cf20 // 0b11000110}\par
03840     0xc6, {\cf20 // 0b11000110}\par
03841     0xc6, {\cf20 // 0b11000110}\par
03842     0x00, {\cf20 // 0b00000000}\par
03843     0x00, {\cf20 // 0b00000000}\par
03844     0x00, {\cf20 // 0b00000000}\par
03845     0x00, {\cf20 // 0b00000000}\par
03846     0x00, {\cf20 // 0b00000000}\par
03847     0x00, {\cf20 // 0b00000000}\par
03848     0x00, {\cf20 // 0b00000000}\par
03849     0x00, {\cf20 // 0b00000000}\par
03850     0xfe, {\cf20 // 0b11111110}\par
03851     0x00, {\cf20 // 0b00000000}\par
03852     0x00, {\cf20 // 0b00000000}\par
03853     0xfe, {\cf20 // 0b11111110}\par
03854     0x00, {\cf20 // 0b00000000}\par
03855     0x00, {\cf20 // 0b00000000}\par
03856     0xfe, {\cf20 // 0b11111110}\par
03857     0x00, {\cf20 // 0b00000000}\par
03858     0x00, {\cf20 // 0b00000000}\par
03859     0x00, {\cf20 // 0b00000000}\par
03860     0x00, {\cf20 // 0b00000000}\par
03861     0x00, {\cf20 // 0b00000000}\par
03862     0x00, {\cf20 // 0b00000000}\par
03863     0x00, {\cf20 // 0b00000000}\par
03864     0x00, {\cf20 // 0b00000000}\par
03865     0x00, {\cf20 // 0b00000000}\par
03866     0x18, {\cf20 // 0b00011000}\par
03867     0x18, {\cf20 // 0b00011000}\par
03868     0x7e, {\cf20 // 0b01111110}\par
03869     0x18, {\cf20 // 0b00011000}\par
03870     0x18, {\cf20 // 0b00011000}\par
03871     0x00, {\cf20 // 0b00000000}\par
03872     0x00, {\cf20 // 0b00000000}\par
03873     0x7e, {\cf20 // 0b01111110}\par
03874     0x00, {\cf20 // 0b00000000}\par
03875     0x00, {\cf20 // 0b00000000}\par
03876     0x00, {\cf20 // 0b00000000}\par
03877     0x00, {\cf20 // 0b00000000}\par
03878     0x00, {\cf20 // 0b00000000}\par
03879     0x00, {\cf20 // 0b00000000}\par
03880     0x00, {\cf20 // 0b00000000}\par
03881     0x30, {\cf20 // 0b00110000}\par
03882     0x18, {\cf20 // 0b00011000}\par
03883     0xc, {\cf20 // 0b00001100}\par
03884     0x6, {\cf20 // 0b00000110}\par
03885     0xc, {\cf20 // 0b00001100}\par
03886     0x18, {\cf20 // 0b00011000}\par
03887     0x30, {\cf20 // 0b00110000}\par
03888     0x00, {\cf20 // 0b00000000}\par
03889     0x7e, {\cf20 // 0b01111110}\par
03890     0x00, {\cf20 // 0b00000000}\par
03891     0x00, {\cf20 // 0b00000000}\par
03892     0x00, {\cf20 // 0b00000000}\par
03893     0x00, {\cf20 // 0b00000000}\par
03894     0x00, {\cf20 // 0b00000000}\par
03895     0x00, {\cf20 // 0b00000000}\par
03896     0x00, {\cf20 // 0b00000000}\par
03897     0xc, {\cf20 // 0b00001100}\par
03898     0x18, {\cf20 // 0b00011000}\par
03899     0x30, {\cf20 // 0b00110000}\par
03900     0x60, {\cf20 // 0b01100000}\par
03901     0x30, {\cf20 // 0b00110000}\par
03902     0x18, {\cf20 // 0b00011000}\par
03903     0xc, {\cf20 // 0b00001100}\par
03904     0x00, {\cf20 // 0b00000000}\par
03905     0x7e, {\cf20 // 0b01111110}\par
03906     0x00, {\cf20 // 0b00000000}\par
03907     0x00, {\cf20 // 0b00000000}\par
03908     0x00, {\cf20 // 0b00000000}\par
03909     0x00, {\cf20 // 0b00000000}\par
03910     0x00, {\cf20 // 0b00000000}\par
03911     0x00, {\cf20 // 0b00000000}\par
03912     0xe, {\cf20 // 0b00001110}\par
03913     0x1b, {\cf20 // 0b00011011}\par
03914     0x1b, {\cf20 // 0b00011011}\par
03915     0x18, {\cf20 // 0b00011000}\par
03916     0x18, {\cf20 // 0b00011000}\par
03917     0x18, {\cf20 // 0b00011000}\par
03918     0x18, {\cf20 // 0b00011000}\par
03919     0x18, {\cf20 // 0b00011000}\par
03920     0x18, {\cf20 // 0b00011000}\par
03921     0x18, {\cf20 // 0b00011000}\par
03922     0x18, {\cf20 // 0b00011000}\par
03923     0x18, {\cf20 // 0b00011000}\par
03924     0x18, {\cf20 // 0b00011000}\par
03925     0x18, {\cf20 // 0b00011000}\par
03926     0x18, {\cf20 // 0b00011000}\par
03927     0x18, {\cf20 // 0b00011000}\par
03928     0x18, {\cf20 // 0b00011000}\par
03929     0x18, {\cf20 // 0b00011000}\par
03930     0x18, {\cf20 // 0b00011000}\par
03931     0x18, {\cf20 // 0b00011000}\par
03932     0x18, {\cf20 // 0b00011000}\par
03933     0x18, {\cf20 // 0b00011000}\par
03934     0x18, {\cf20 // 0b00011000}\par
03935     0xd8, {\cf20 // 0b11011000}\par
03936     0xd8, {\cf20 // 0b11011000}\par
03937     0xd8, {\cf20 // 0b11011000}\par
03938     0x70, {\cf20 // 0b01110000}\par
03939     0x00, {\cf20 // 0b00000000}\par
03940     0x00, {\cf20 // 0b00000000}\par
03941     0x00, {\cf20 // 0b00000000}\par
03942     0x00, {\cf20 // 0b00000000}\par
03943     0x00, {\cf20 // 0b00000000}\par
03944     0x00, {\cf20 // 0b00000000}\par
03945     0x00, {\cf20 // 0b00000000}\par
03946     0x00, {\cf20 // 0b00000000}\par
03947     0x18, {\cf20 // 0b00011000}\par
03948     0x00, {\cf20 // 0b00000000}\par
03949     0x7e, {\cf20 // 0b01111110}\par
03950     0x00, {\cf20 // 0b00000000}\par
03951     0x18, {\cf20 // 0b00011000}\par
03952     0x00, {\cf20 // 0b00000000}\par
03953     0x00, {\cf20 // 0b00000000}\par
03954     0x00, {\cf20 // 0b00000000}\par
03955     0x00, {\cf20 // 0b00000000}\par
03956     0x00, {\cf20 // 0b00000000}\par
03957     0x00, {\cf20 // 0b00000000}\par
03958     0x00, {\cf20 // 0b00000000}\par
03959     0x00, {\cf20 // 0b00000000}\par
03960     0x00, {\cf20 // 0b00000000}\par
03961     0x00, {\cf20 // 0b00000000}\par
03962     0x00, {\cf20 // 0b00000000}\par
03963     0x76, {\cf20 // 0b01110110}\par
03964     0xdc, {\cf20 // 0b11011100}\par
03965     0x00, {\cf20 // 0b00000000}\par
03966     0x76, {\cf20 // 0b01110110}\par
03967     0xdc, {\cf20 // 0b11011100}\par
03968     0x00, {\cf20 // 0b00000000}\par
03969     0x00, {\cf20 // 0b00000000}\par
03970     0x00, {\cf20 // 0b00000000}\par
03971     0x00, {\cf20 // 0b00000000}\par
03972     0x00, {\cf20 // 0b00000000}\par
03973     0x00, {\cf20 // 0b00000000}\par
03974     0x00, {\cf20 // 0b00000000}\par
03975     0x38, {\cf20 // 0b00111000}\par
03976     0x6c, {\cf20 // 0b01101100}\par
03977     0x6c, {\cf20 // 0b01101100}\par
03978     0x38, {\cf20 // 0b00111000}\par
03979     0x00, {\cf20 // 0b00000000}\par
03980     0x00, {\cf20 // 0b00000000}\par
03981     0x00, {\cf20 // 0b00000000}\par
03982     0x00, {\cf20 // 0b00000000}\par
03983     0x00, {\cf20 // 0b00000000}\par
03984     0x00, {\cf20 // 0b00000000}\par
03985     0x00, {\cf20 // 0b00000000}\par
03986     0x00, {\cf20 // 0b00000000}\par
03987     0x00, {\cf20 // 0b00000000}\par
03988     0x00, {\cf20 // 0b00000000}\par
03989     0x00, {\cf20 // 0b00000000}\par
03990     0x00, {\cf20 // 0b00000000}\par
03991     0x00, {\cf20 // 0b00000000}\par
03992     0x00, {\cf20 // 0b00000000}\par
03993     0x00, {\cf20 // 0b00000000}\par
03994     0x00, {\cf20 // 0b00000000}\par
03995     0x00, {\cf20 // 0b00000000}\par
03996     0x00, {\cf20 // 0b00000000}\par
03997     0x18, {\cf20 // 0b00011000}\par
03998     0x18, {\cf20 // 0b00011000}\par
03999     0x00, {\cf20 // 0b00000000}\par
04000     0x00, {\cf20 // 0b00000000}\par
04001     0x00, {\cf20 // 0b00000000}\par
04002     0x00, {\cf20 // 0b00000000}\par
04003     0x00, {\cf20 // 0b00000000}\par
04004     0x00, {\cf20 // 0b00000000}\par
04005     0x00, {\cf20 // 0b00000000}\par
04006     0x00, {\cf20 // 0b00000000}\par
04007     0x00, {\cf20 // 0b00000000}\par
04008     0x00, {\cf20 // 0b00000000}\par
04009     0x00, {\cf20 // 0b00000000}\par
04010     0x00, {\cf20 // 0b00000000}\par
04011     0x00, {\cf20 // 0b00000000}\par
04012     0x00, {\cf20 // 0b00000000}\par
04013     0x18, {\cf20 // 0b00011000}\par
04014     0x00, {\cf20 // 0b00000000}\par
04015     0x00, {\cf20 // 0b00000000}\par
04016     0x00, {\cf20 // 0b00000000}\par
04017     0x00, {\cf20 // 0b00000000}\par
04018     0x00, {\cf20 // 0b00000000}\par
04019     0x00, {\cf20 // 0b00000000}\par
04020     0x00, {\cf20 // 0b00000000}\par
04021     0x00, {\cf20 // 0b00000000}\par
04022     0x00, {\cf20 // 0b00000000}\par
04023     0xf, {\cf20 // 0b00001111}\par
04024     0xc, {\cf20 // 0b00001100}\par
04025     0xc, {\cf20 // 0b00001100}\par
04026     0xc, {\cf20 // 0b00001100}\par
04027     0xc, {\cf20 // 0b00001100}\par
04028     0xc, {\cf20 // 0b00001100}\par
04029     0xec, {\cf20 // 0b11101100}\par
04030     0x6c, {\cf20 // 0b01101100}\par
04031     0x6c, {\cf20 // 0b01101100}\par
04032     0x3c, {\cf20 // 0b00111100}\par
04033     0x1c, {\cf20 // 0b00011100}\par
04034     0x00, {\cf20 // 0b00000000}\par
04035     0x00, {\cf20 // 0b00000000}\par
04036     0x00, {\cf20 // 0b00000000}\par
04037     0x00, {\cf20 // 0b00000000}\par
04038     0x00, {\cf20 // 0b00000000}\par
04039     0x6c, {\cf20 // 0b01101100}\par
04040     0x36, {\cf20 // 0b00110110}\par
04041     0x36, {\cf20 // 0b00110110}\par
04042     0x36, {\cf20 // 0b00110110}\par
04043     0x36, {\cf20 // 0b00110110}\par
04044     0x36, {\cf20 // 0b00110110}\par
04045     0x00, {\cf20 // 0b00000000}\par
04046     0x00, {\cf20 // 0b00000000}\par
04047     0x00, {\cf20 // 0b00000000}\par
04048     0x00, {\cf20 // 0b00000000}\par
04049     0x00, {\cf20 // 0b00000000}\par
04050     0x00, {\cf20 // 0b00000000}\par
04051     0x00, {\cf20 // 0b00000000}\par
04052     0x00, {\cf20 // 0b00000000}\par
04053     0x00, {\cf20 // 0b00000000}\par
04054     0x00, {\cf20 // 0b00000000}\par
04055     0x3c, {\cf20 // 0b00111100}\par
04056     0x66, {\cf20 // 0b01100110}\par
04057     0xc, {\cf20 // 0b00001100}\par
04058     0x18, {\cf20 // 0b00011000}\par
04059     0x32, {\cf20 // 0b00110010}\par
04060     0x7e, {\cf20 // 0b01111110}\par
04061     0x00, {\cf20 // 0b00000000}\par
04062     0x00, {\cf20 // 0b00000000}\par
04063     0x00, {\cf20 // 0b00000000}\par
04064     0x00, {\cf20 // 0b00000000}\par
04065     0x00, {\cf20 // 0b00000000}\par
04066     0x00, {\cf20 // 0b00000000}\par
04067     0x00, {\cf20 // 0b00000000}\par
04068     0x00, {\cf20 // 0b00000000}\par
04069     0x00, {\cf20 // 0b00000000}\par
04070     0x00, {\cf20 // 0b00000000}\par
04071     0x00, {\cf20 // 0b00000000}\par
04072     0x00, {\cf20 // 0b00000000}\par
04073     0x00, {\cf20 // 0b00000000}\par
04074     0x7e, {\cf20 // 0b01111110}\par
04075     0x7e, {\cf20 // 0b01111110}\par
04076     0x7e, {\cf20 // 0b01111110}\par
04077     0x7e, {\cf20 // 0b01111110}\par
04078     0x7e, {\cf20 // 0b01111110}\par
04079     0x7e, {\cf20 // 0b01111110}\par
04080     0x7e, {\cf20 // 0b01111110}\par
04081     0x00, {\cf20 // 0b00000000}\par
04082     0x00, {\cf20 // 0b00000000}\par
04083     0x00, {\cf20 // 0b00000000}\par
04084     0x00, {\cf20 // 0b00000000}\par
04085     0x00, {\cf20 // 0b00000000}\par
04086     0x00, {\cf20 // 0b00000000}\par
04087     0x00, {\cf20 // 0b00000000}\par
04088     0x00, {\cf20 // 0b00000000}\par
04089     0x00, {\cf20 // 0b00000000}\par
04090     0x00, {\cf20 // 0b00000000}\par
04091     0x00, {\cf20 // 0b00000000}\par
04092     0x00, {\cf20 // 0b00000000}\par
04093     0x00, {\cf20 // 0b00000000}\par
04094     0x00, {\cf20 // 0b00000000}\par
04095     0x00, {\cf20 // 0b00000000}\par
04096     0x00, {\cf20 // 0b00000000}\par
04097     0x00, {\cf20 // 0b00000000}\par
04098     0x00, {\cf20 // 0b00000000}\par
04099     0x00, {\cf20 // 0b00000000}\par
04100     0x00, {\cf20 // 0b00000000}\par
04101     0x00, {\cf20 // 0b00000000}\par
04102 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
list.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/libk/list.c}
{\xe \v kernel/src/libk/list.c}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 {\cf20 // \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'F1\'EF\'E8\'F1\'EA\'E0}\par
00005 {\cf18 void} list_init(list_t* list) \{\par
00006     list->first = NULL; {\cf20 // \'CF\'E5\'F0\'E2\'EE\'E3\'EE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'E0 \'EF\'EE\'EA\'E0 \'ED\'E5\'F2 }\par
00007     list->count = 0;    {\cf20 // \'C2 \'F1\'EF\'E8\'F1\'EA\'E5 \'ED\'E5\'F2 \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'EE\'E2 }\par
00008 \}\par
00009 \par
00010 \par
00011 {\cf20 // \'C4\'EE\'E1\'E0\'E2\'E8\'F2\'FC \'FD\'EB\'E5\'EC\'E5\'ED\'F2 \'E2 \'F1\'EF\'E8\'F1\'EE\'EA}\par
00012 {\cf18 void} list_add(list_t* list, list_item_t* item) \{\par
00013     {\cf19 if} (item->list == NULL) \{ {\cf20 // \'C5\'F1\'EB\'E8 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 \'ED\'E5 \'EF\'F0\'E8\'ED\'E0\'E4\'EB\'E5\'E6\'E8\'F2 \'ED\'E8\'EA\'E0\'EA\'EE\'EC\'F3 \'F1\'EF\'E8\'F1\'EA\'F3 }\par
00014        \par
00015         {\cf20 // \'C5\'F1\'EB\'E8 \'E2 \'F1\'EF\'E8\'F1\'EA\'E5 \'E5\'F1\'F2\'FC \'EF\'E5\'F0\'E2\'FB\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 }\par
00016         {\cf19 if} (list->first)\{\par
00017             item->list = list; {\cf20 // \'CF\'EE\'EC\'E5\'F7\'E0\'E5\'EC \'FD\'EB\'E5\'EC\'E5\'ED\'F2 \'EA\'E0\'EA \'EF\'F0\'E8\'ED\'E0\'E4\'EB\'E5\'E6\'E0\'F9\'E8\'E9 \'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'F1\'EF\'E8\'F1\'EA\'F3 }\par
00018             item->next = list->first; {\cf20 // \'D1\'EB\'E5\'E4\'F3\'FE\'F9\'E8\'E9 \'E7\'E0 \'ED\'E8\'EC \'FD\'EB\'E5\'EC\'E5\'ED\'F2 - \'FD\'F2\'EE \'EF\'E5\'F0\'E2\'FB\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 }\par
00019             item->prev = list->first->prev; {\cf20 // \'C4\'E5\'EB\'E0\'E5\'EC \'EF\'F0\'E5\'E4\'FB\'E4\'F3\'F9\'E8\'EC \'FD\'EB\'E5\'EC\'E5\'ED\'F2 \'E8\'E4\'F3\'F9\'E8\'E9 \'EF\'E5\'F0\'E5\'E4 \'EF\'E5\'F0\'E2\'FB\'EC }\par
00020             item->prev->next = item; {\cf20 // \'CD\'E0\'F8 \'ED\'EE\'E2\'FB\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 - \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E8\'E9 \'E4\'EB\'FF \'E8\'E4\'F3\'F9\'E5\'E3\'EE \'EF\'E5\'F0\'E5\'E4 \'EF\'E5\'F0\'E2\'FB\'EC }\par
00021             item->next->prev = item; {\cf20 // \'E8 \'EF\'F0\'E5\'E4\'FB\'E4\'F3\'F9\'E8\'E9 \'E4\'EB\'FF \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E5\'E3\'EE \'E7\'E0 \'ED\'E8\'EC }\par
00022         \} {\cf19 else} \{ {\cf20 // \'C5\'F1\'EB\'E8 \'F1\'EF\'E8\'F1\'EE\'EA \'EF\'F3\'F1\'F2 - \'ED\'EE\'E2\'FB\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 \'EF\'E5\'F0\'E2\'FB\'E9 \'E2 \'F1\'EF\'E8\'F1\'EA\'E5 }\par
00023             item->list = list;  {\cf20 // \'DD\'F2\'EE\'F2 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 \'E2 \'E4\'E0\'ED\'ED\'EE\'EC \'F1\'EF\'E8\'F1\'EA\'E5 }\par
00024             item->next = item;  {\cf20 // \'CE\'ED \'E8 \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E8\'E9 }\par
00025             item->prev = item;  {\cf20 // \'E8 \'EF\'F0\'E5\'E4\'FB\'E4\'F3\'F9\'E8\'E9 \'E4\'EB\'FF \'F1\'E5\'E1\'FF \'F1\'E0\'EC\'EE\'E3\'EE }\par
00026             list->first = item; {\cf20 // \'E0 \'F2\'E0\'EA\'E6\'E5 \'EF\'E5\'F0\'E2\'FB\'E9 \'E2 \'F1\'EF\'E8\'F1\'EA\'E5 }\par
00027         \}\par
00028 \par
00029         list->count++; {\cf20 // \'D3\'E2\'E5\'EB\'E8\'F7\'E8\'E2\'E0\'E5\'EC \'F7\'E8\'F1\'EB\'EE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'EE\'E2 \'F1\'EF\'E8\'F1\'EA\'E0 }\par
00030     \}\par
00031 \}\par
00032 \par
00033 \par
00034 {\cf20 // \'D3\'E4\'E0\'EB\'E8\'F2\'FC \'FD\'EB\'E5\'EC\'E5\'ED\'F2 \'E8\'E7 \'F1\'EF\'E8\'F1\'EA\'E0}\par
00035 {\cf18 void} list_remove(list_item_t* item) \{\par
00036     {\cf20 // \'C5\'F1\'EB\'E8 \'E4\'E0\'ED\'ED\'FB\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 - \'EF\'E5\'F0\'E2\'FB\'E9 \'E2 \'F1\'EF\'E8\'F1\'EA\'E5 }\par
00037     {\cf19 if} (item->list->first == item) \{\par
00038         item->list->first = item->next; {\cf20 // \'CF\'E5\'F0\'E2\'FB\'EC \'E1\'F3\'E4\'E5\'F2 \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E8\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 }\par
00039 \par
00040         {\cf20 // \'C5\'F1\'EB\'E8 \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E8\'E9 \'EE\'EF\'FF\'F2\'FC \'ED\'E0\'F8 \'FD\'EB\'E5\'EC\'E5\'ED\'F2, \'F2\'EE\'E3\'E4\'E0 \'EE\'ED \'E1\'FB\'EB \'E5\'E4\'E8\'ED\'F1\'F2\'E2\'E5\'ED\'ED\'FB\'EC \'E2 \'F1\'EF\'E8\'F1\'EA\'E5 }\par
00041         {\cf19 if} (item->list->first == item) \{\par
00042             item->list->first = NULL; {\cf20 // \'E8 \'F2\'E5\'EF\'E5\'F0\'FC \'F1\'EF\'E8\'F1\'EE\'EA \'EF\'F3\'F1\'F2 }\par
00043         \}\par
00044     \}\par
00045     \par
00046     item->next->prev = item->prev; {\cf20 // \'CF\'F0\'E5\'E4\'FB\'E4\'F3\'F9\'E8\'E9 \'E4\'EB\'FF \'E4\'E0\'ED\'ED\'EE\'E3\'EE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'E0 \'E1\'F3\'E4\'E5\'F2 \'EF\'F0\'E5\'E4\'FB\'E4\'F3\'F9\'E8\'EC \'E4\'EB\'FF \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E5\'E3\'EE  \'E7\'E0 \'ED\'E8\'EC }\par
00047     item->prev->next = item->next; {\cf20 // \'E0 \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E8\'EC \'E7\'E0 \'EF\'F0\'E5\'E4\'FB\'E4\'F3\'F9\'E8\'EC \'E1\'F3\'E4\'E5\'F2 \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E8\'E9 \'E4\'EB\'FF \'F3\'E4\'E0\'EB\'FF\'E5\'EC\'EE\'E3\'EE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'E0 }\par
00048 \par
00049     item->list->count--;\par
00050 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
math.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/libk/math.c}
{\xe \v kernel/src/libk/math.c}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21  #include <kernel.h>}\par
00002 \par
00003 {\cf18 float} lerp({\cf18 float} v0, {\cf18 float} v1, {\cf18 float} t) \{\par
00004   {\cf19 return} (1 - t) * v0 + t * v1;\par
00005 \}\par
00006 \par
00007 uint32_t pow(uint32_t base, uint32_t power)\par
00008 \{\par
00009   uint32_t tmp = base;\par
00010   {\cf19 for}({\cf18 int} i = power; i > 1; i--)\par
00011   \{\par
00012     tmp *= base;\par
00013   \}\par
00014   {\cf19 return} tmp;\par
00015 \}\par
00016 \par
00017 {\cf18 int} coprimes({\cf18 int} a, {\cf18 int} b)\par
00018 \{\par
00019   {\cf18 int} n = 0;\par
00020   {\cf19 for}({\cf18 int} i = 2; i < MIN(a,b); i++)\par
00021   \{\par
00022     {\cf19 if}(a%i == 0 && b%i == 0) {\cf19 return} 1;{\cf20 //++n;}\par
00023   \}\par
00024   {\cf19 return} n;\par
00025 \}\par
00026 \par
00027 {\cf20 // used for testing if a float is an integer or not}\par
00028 {\cf17 static} {\cf17 const} uint8_t  gMaskShift[256] = \{   0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,    {\cf20 //16}\par
00029                                             0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,    {\cf20 //32}\par
00030                                             0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,    {\cf20 //48}\par
00031                                             0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,    {\cf20 //64}\par
00032                                             0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,    {\cf20 //80}\par
00033                                             0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,    {\cf20 //96}\par
00034                                             0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,    {\cf20 //112}\par
00035                                             0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7,    {\cf20 //128}\par
00036                                             8, 9,10,11, 12,13,14,15,16,17,18,19,20,21,22,23,    {\cf20 //144}\par
00037                                            24,25,26,27, 28,29,30,31,31,31,31,31,31,31,31,31,    {\cf20 //160}\par
00038                                            31,31,31,31, 31,31,31,31,31,31,31,31,31,31,31,31,    {\cf20 //176}\par
00039                                            31,31,31,31, 31,31,31,31,31,31,31,31,31,31,31,31,    {\cf20 //192}\par
00040                                            31,31,31,31, 31,31,31,31,31,31,31,31,31,31,31,31,    {\cf20 //208}\par
00041                                            31,31,31,31, 31,31,31,31,31,31,31,31,31,31,31,31,    {\cf20 //224}\par
00042                                            31,31,31,31, 31,31,31,31,31,31,31,31,31,31,31,31,    {\cf20 //240}\par
00043                                            31,31,31,31, 31,31,31,31,31,31,31,31,31,31,31,31,    {\cf20 //256}\par
00044                                         \};\par
00045 \par
00046                                         {\cf18 float} sqrtf( {\cf18 float} x )\par
00047 \{\par
00048     {\cf19 return} __builtin_sqrtf(x);\par
00049 \}\par
00050 \par
00051 {\cf20 // \'CD\'E5 \'F0\'E5\'E0\'EB\'E8\'E7\'EE\'E2\'E0\'ED\'EE}\par
00052 {\cf18 float} sqrt( {\cf18 float} x )\par
00053 \{\par
00054     {\cf19 return} (x);\par
00055 \}\par
00056 \par
00057 {\cf20 // \'CD\'E5 \'F0\'E5\'E0\'EB\'E8\'E7\'EE\'E2\'E0\'ED\'EE}\par
00058 {\cf18 float} exp({\cf18 float} x)\par
00059 \{\par
00060   {\cf19 return} (x);\par
00061 \}\par
00062 \par
00063 \par
00064 {\cf18 float} powf( {\cf18 float} x, {\cf18 float} y )\par
00065 \{\par
00066     {\cf17 static} {\cf17 const} {\cf18 double} recip_ln2 = 0x1.71547652b82fep0;\par
00067 \par
00068     {\cf19 if}( x == 1.0f || y == 1.0f)\par
00069         {\cf19 return} x;\par
00070 \par
00071     {\cf20 //Move the arguments to the integer registers for bitwise inspection}\par
00072     {\cf17 union}\{ {\cf18 float} f; uint32_t u; \} ux, uy;\par
00073     ux.f = x;\par
00074     uy.f = y;\par
00075     uint32_t absux = ux.u & 0x7fffffff;\par
00076     uint32_t absuy = uy.u & 0x7fffffff;\par
00077 \par
00078 \par
00079     {\cf20 // Handle most edge cases}\par
00080     {\cf20 //If |x| or |y| is in \{ +-0, +-Inf, +-NaN \}}\par
00081     {\cf19 if}( (ux.u - 1U) >= 0x7f7fffff || (absuy - 1) >= 0x4affffff )\par
00082     \{\par
00083         {\cf20 // any**0 = 1.0f for all values, including NaN}\par
00084         {\cf19 if}( 0 == absuy )\par
00085             {\cf19 return} 1.0f;\par
00086 \par
00087         {\cf20 // handle NaNs}\par
00088         {\cf19 if}( x != x || y != y )\par
00089             {\cf19 return} x + y;\par
00090 \par
00091         {\cf20 //figure out if y is an odd integer}\par
00092         {\cf20 //Find out if y is an integer or not without raising inexact}\par
00093         {\cf20 //  Note -- independently tested over entire range. Fails for Inf/NaN. We don't care about that here.}\par
00094         uint32_t fractMask = 0x3fffffffU >> gMaskShift[ absuy >> 23 ];          {\cf20 //mask bits cover fractional part of value}\par
00095         uint32_t onesMask = 0x40000000U >> gMaskShift[ absuy >> 23 ];           {\cf20 // we get away with this because leading exponent bit is never set for |y| < 2.0}\par
00096         uint32_t fractionalBits = absuy & fractMask;\par
00097         uint32_t onesBit = absuy & onesMask;\par
00098 \par
00099         {\cf19 if}( 0 == absux )\par
00100         \{\par
00101             {\cf20 //if y is an odd integer}\par
00102             {\cf19 if}( 0 == fractionalBits && 0 != onesBit )\par
00103             \{\par
00104                 {\cf19 if}( y < 0.0f )\par
00105                     {\cf19 return} 1.0f / x;\par
00106 \par
00107                 {\cf19 return} x;\par
00108             \}\par
00109 \par
00110             {\cf20 // y is not an odd integer}\par
00111             {\cf19 if}( 0.0f < y )\par
00112                 {\cf19 return} 0.0f;\par
00113 \par
00114             {\cf19 return} 1.0f / __builtin_fabsf(x);           {\cf20 // return Inf and set div/0}\par
00115 \par
00116         \}\par
00117 \par
00118         {\cf20 // deal with infinite y}\par
00119         {\cf19 if}( 0x7f800000 == absuy )\par
00120         \{\par
00121             {\cf19 if}( -1.0f == x )\par
00122                 {\cf19 return} 1.0f;\par
00123 \par
00124             {\cf19 if}( absux > 0x3f800000 )    {\cf20 // |x| > 1.0f}\par
00125             \{   {\cf20 // |x| > 1.0f}\par
00126                 {\cf19 if}( 0.0f < y )\par
00127                     {\cf19 return} y;\par
00128                 {\cf19 else}\par
00129                     {\cf19 return} 0.0f;\par
00130             \}\par
00131             {\cf19 else}\par
00132             \{   {\cf20 // |x| < 1.0f}\par
00133                 {\cf19 if}( 0.0f < y )\par
00134                     {\cf19 return} 0.0f;\par
00135                 {\cf19 else}\par
00136                     {\cf19 return} __builtin_fabsf(y);\par
00137             \}\par
00138         \}\par
00139 \par
00140         {\cf20 // we can also deal with x == +inf at this point.}\par
00141         {\cf19 if}( x == __builtin_inff() )\par
00142         \{\par
00143             {\cf19 if}( y < 0.0f )\par
00144                 {\cf19 return} 0.0f;\par
00145             {\cf19 else}\par
00146                 {\cf19 return} x;\par
00147         \}\par
00148 \par
00149         {\cf19 if}( x > -__builtin_inff() )\par
00150         \{\par
00151             {\cf19 if}( fractionalBits )\par
00152                 {\cf19 goto} nan_sqrt;\par
00153 \par
00154             {\cf19 goto} ipowf;\par
00155         \}\par
00156 \par
00157         {\cf20 // At this point, we know that x is in \{ +-0, -Inf \} and y is finite non-zero.}\par
00158         {\cf20 // Deal with y is odd integer cases}\par
00159         {\cf19 if}( 0 == fractionalBits && 0 != onesBit )   {\cf20 // if( |y| >= 1.0f || |y| < 0x1.0p24f )}\par
00160             {\cf19 return} 0.0f < y ? x : -0.0f;\par
00161 \par
00162         {\cf20 // x == -inf}\par
00163         {\cf19 return} 0.0f < y ? -x : 0.0f;\par
00164     \}\par
00165 \par
00166     {\cf20 //special case for sqrts}\par
00167     {\cf19 if}( 0x3f000000U == absuy )\par
00168         {\cf19 goto} nan_sqrt;\par
00169 \par
00170     {\cf20 // break |x| into exponent and fractional parts:        |x| = 2**i * m      1.0 <= m < 2.0}\par
00171     int32_t i = ((absux >> 23) & 0xff) - 127;\par
00172     {\cf17 union}\par
00173     \{\par
00174         uint32_t    u;\par
00175         {\cf18 float}       f;\par
00176     \}m = \{ (absux & 0x007fffffU) | 0x3f800000U \};\par
00177 \par
00178     {\cf20 //normalize denormals}\par
00179     {\cf19 if}( -127 == i )\par
00180     \{   {\cf20 //denormal}\par
00181         m.f -= 1.0f;                                {\cf20 //  exact}\par
00182         i = ((m.u >> 23) & 0xff) - (127+126);\par
00183         m.u = (m.u & 0x807fffffU) | 0x3f800000U;\par
00184     \}\par
00185 \par
00186     {\cf20 //}\par
00187     {\cf20 //  We further break down m as :}\par
00188     {\cf20 //}\par
00189     {\cf20 //          m = (1+a/256.0)(1+r)              a = high 8 explicit bits of mantissa(m), b = next 7 bits}\par
00190     {\cf20 //          log2f(m) = log2(1+a/256.0) + log2(1+r)}\par
00191     {\cf20 //}\par
00192     {\cf20 //      We use the high 7 bits of the mantissa to look up log2(1+a/256.0) in log2f_table above}\par
00193     {\cf20 //      We calculate 1+r as:}\par
00194     {\cf20 //}\par
00195     {\cf20 //          1+r = m * (1 /(1+a/256.0))}\par
00196     {\cf20 //}\par
00197     {\cf20 //      We can lookup (from the same table) the value of 1/(1+a/256.0) based on a too.}\par
00198 \par
00199     {\cf18 double} log2x = i;\par
00200 \par
00201     {\cf19 if}( m.f != 1.0f )\par
00202     \{\par
00203         {\cf18 int} index = (m.u >> (23-7-4)) & 0x7f0;      {\cf20 //top 7 bits of mantissa}\par
00204         {\cf17 const} {\cf18 double} *tablep = ({\cf18 void}*) powf_log_table + index;\par
00205         {\cf18 double} r = (double) m.f;\par
00206 \par
00207         {\cf20 // reduce}\par
00208         r *= tablep[0];     {\cf20 // reduce r to  1-2**-7 < r < 1+2**-7}\par
00209         log2x += tablep[1]; {\cf20 // do this early to force -1.0 + 1.0 to cancel so that we don't end up with (1.0 + tiny) - 1.0 later on.}\par
00210         r -= 1.0;           {\cf20 // -2**-7 < r < 1+2**-7}\par
00211 \par
00212         {\cf20 // ln(1+r) = r - rr/2 + rrr/3 - rrrr/4 + rrrrr/5}\par
00213         {\cf20 //  should provide log(1+r) to at least 35 bits of accuracy for the worst case}\par
00214         {\cf18 double} rr = r*r;\par
00215         {\cf18 double} small = -0.5 + 0.3333333333333333333333*r;\par
00216         {\cf18 double} large = -0.25 + 0.2*r;\par
00217         {\cf18 double} rrrr = rr * rr;\par
00218         small *= rr;\par
00219         small += r;\par
00220         large *= rrrr;\par
00221         r = small + large;\par
00222         log2x += r * recip_ln2;\par
00223     \}\par
00224 \par
00225     {\cf20 // multiply by Y}\par
00226     {\cf18 double} ylog2x = y * log2x;\par
00227 \par
00228 {\cf20 // now we need to calculate 2**ylog2x}\par
00229 \par
00230     {\cf20 //deal with overflow}\par
00231     {\cf19 if}( ylog2x >= 128.0 )\par
00232         {\cf19 return} ({\cf18 float}) (0x1.0p128 * ylog2x);        {\cf20 //set overflow and return inf}\par
00233 \par
00234     {\cf20 //deal with underflow}\par
00235     {\cf19 if}( ylog2x <= -150.0 )\par
00236         {\cf19 return} ({\cf18 float}) ( ylog2x * 0x1.0p-1022 );        {\cf20 //minimum y * maximum log2(x) is ~-1.0p128 * ~128 = -1.0p135, so we can be sure that we'll drive this to underflow}\par
00237 \par
00238     {\cf20 //separate ylog2x into integer and fractional parts}\par
00239     {\cf18 int} exp = (int) ylog2x;\par
00240     {\cf18 double} f = ylog2x - exp;        {\cf20 //may be negative}\par
00241 \par
00242     {\cf20 // Calculate 2**fract}\par
00243     {\cf20 // 8th order minimax fit of exp2 on [-1.0,1.0].  |error| < 0.402865722354948566583852e-9:}\par
00244     {\cf17 static} {\cf17 const} {\cf18 double} c0 =  1.0 + 0.278626872016317130037181614004e-10;\par
00245     {\cf17 static} {\cf17 const} {\cf18 double} c1 = .693147176943623740308984004029708;\par
00246     {\cf17 static} {\cf17 const} {\cf18 double} c2 = .240226505817268621584559118975830;\par
00247     {\cf17 static} {\cf17 const} {\cf18 double} c3 = 0.555041568519883074165425891257052e-1;\par
00248     {\cf17 static} {\cf17 const} {\cf18 double} c4overc8 = 0.961813690023115610862381719985771e-2 / 0.134107709538786543922336536865157e-5;\par
00249     {\cf17 static} {\cf17 const} {\cf18 double} c5overc8 = 0.133318252930790403741964203236548e-2 / 0.134107709538786543922336536865157e-5;\par
00250     {\cf17 static} {\cf17 const} {\cf18 double} c6overc8 = 0.154016177542147239746127455226575e-3 / 0.134107709538786543922336536865157e-5;\par
00251     {\cf17 static} {\cf17 const} {\cf18 double} c7overc8 = 0.154832722143258821052933667742417e-4 / 0.134107709538786543922336536865157e-5;\par
00252     {\cf17 static} {\cf17 const} {\cf18 double} c8 = 0.134107709538786543922336536865157e-5;\par
00253 \par
00254     {\cf18 double} z = 1.0;\par
00255     {\cf19 if}( 0.0 != f )\par
00256     \{ {\cf20 // don't set inexact if we don't need to}\par
00257         {\cf18 double} ff = f * f;\par
00258         {\cf18 double} s7 = c7overc8 * f;           {\cf18 double} s3 = c3 * f;\par
00259         {\cf18 double} s5 = c5overc8 * f;           {\cf18 double} s1 = c1 * f;\par
00260         {\cf18 double} ffff = ff * ff;\par
00261         s7 += c6overc8;                     s3 += c2;\par
00262         s5 += c4overc8;                     s1 += c0;\par
00263         s7 *= ff;                           s3 *= ff;\par
00264         s5 += ffff;\par
00265         {\cf18 double} c8ffff = ffff * c8;\par
00266         s7 += s5;                           s3 += s1;\par
00267         s7 *= c8ffff;\par
00268         z = s3 + s7;\par
00269     \}\par
00270 \par
00271 \par
00272     {\cf20 //prepare 2**i}\par
00273     {\cf17 union}\{ uint64_t u; {\cf18 double} d; \} two_exp = \{ ((uint64_t) exp + 1023) << 52 \};\par
00274 \par
00275     {\cf19 return} ({\cf18 float}) (z * two_exp.d );\par
00276 \par
00277 \par
00278     {\cf20 //one last edge case -- pow(x, y) returns NaN and raises invalid for x < 0 and finite non-integer y}\par
00279     {\cf20 // and one special case --  call sqrt for |y| == 0.5}\par
00280 nan_sqrt:\par
00281     {\cf19 if}( x < 0.0f || y > 0.0f )\par
00282         {\cf19 return} sqrtf(x);\par
00283 \par
00284     {\cf19 return} ({\cf18 float}) sqrt( 1.0 / ({\cf18 double}) x );\par
00285 \par
00286 ipowf:\par
00287     {\cf20 // clamp  -0x1.0p31 < y < 0x1.0p31}\par
00288     y = y > -0x1.fffffep30f ? y : -0x1.fffffep30f;\par
00289     y = y <  0x1.fffffep30f ? y :  0x1.fffffep30f;\par
00290     i = (int) y;\par
00291     {\cf18 double} dx = (double) x;\par
00292     {\cf18 double} r = 1.0;\par
00293 \par
00294     {\cf19 if}( i < 0 )\par
00295     \{\par
00296         i = -i;\par
00297         dx = 1.0 / dx;\par
00298     \}\par
00299 \par
00300     {\cf19 if}( i & 1 )\par
00301         r = dx;\par
00302 \par
00303     {\cf19 do}\par
00304     \{\par
00305         i >>= 1;\par
00306         {\cf19 if}( 0 == i )\par
00307             {\cf19 break};\par
00308         dx *= dx;\par
00309         {\cf19 if}( i & 1 )\par
00310             r *= dx;\par
00311     \}{\cf19 while}(1);\par
00312 \par
00313     {\cf19 return} ({\cf18 float}) r;\par
00314 \}\par
00315 \par
00316 {\cf18 float} log10({\cf18 float} x)\par
00317 \{\par
00318    {\cf19 return} (((powf(x, 0.00001f) - 1) / 0.00001f) * LOG10_E);\par
00319 \}\par
00320 \par
00321 {\cf18 float} log({\cf18 float} x)\par
00322 \{\par
00323    {\cf19 return} ((powf(x, 0.00001f) - 1) / 0.00001f);{\cf20 //(log10(x) / LOG10_E);}\par
00324 \}\par
00325 \par
00326 {\cf18 float} logx({\cf18 float} x, {\cf18 float} base)\par
00327 \{\par
00328    {\cf20 // base may not equal 1 or be negative.}\par
00329    {\cf19 if}(base == 1.f || base < 0.f)\par
00330       {\cf19 return} 0.f; {\cf20 // Return what you want here, could be Not-A-Number or NAN.}\par
00331 \par
00332    {\cf19 return} (log10(x) / log10(base));\par
00333 \}\par
00334 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stdio.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/libk/stdio.c}
{\xe \v kernel/src/libk/stdio.c}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 uint32_t fmodecheck({\cf17 const} {\cf18 char}* restrict mode)\{\par
00004     uint32_t fmode = 0;\par
00005     {\cf19 if} (mode[0] == {\cf23 'w'}) \{\par
00006         {\cf19 if} (mode[1] == {\cf23 'x'}) \{ {\cf20 // wx}\par
00007             fmode = O_WRITE | O_CREATE;\par
00008         \} {\cf19 else} {\cf19 if} (mode[1] == {\cf23 'b'}) \{\par
00009             {\cf19 if} (mode[2] == {\cf23 'x'}) \{ {\cf20 // wbx}\par
00010                 fmode = O_WRITE | O_CREATE;\par
00011             \} {\cf19 else} {\cf19 if} (mode[2] == {\cf23 '+'}) \{\par
00012                 {\cf19 if} (mode[3] == {\cf23 'x'}) \{ {\cf20 // wb+x}\par
00013                     fmode = O_WRITE | O_READ | O_CREATE;\par
00014                 \} {\cf19 else} \{ {\cf20 // wb+}\par
00015                     fmode = O_WRITE | O_READ | O_CREATE | O_TRUNC;\par
00016                 \}\par
00017             \} {\cf19 else} \{ {\cf20 // wb}\par
00018                 fmode = O_WRITE | O_CREATE | O_TRUNC;\par
00019             \}\par
00020         \} {\cf19 else} {\cf19 if} (mode[1] == {\cf23 '+'}) \{\par
00021             {\cf19 if} (mode[2] == {\cf23 'x'}) \{ {\cf20 // w+x}\par
00022                 fmode = O_WRITE | O_READ | O_CREATE;\par
00023             \} {\cf19 else} {\cf19 if} (mode[2] == {\cf23 'b'}) \{\par
00024                 {\cf19 if} (mode[3] == {\cf23 'x'}) \{ {\cf20 // w+bx}\par
00025                     fmode = O_WRITE | O_READ | O_CREATE;\par
00026                 \} {\cf19 else} \{ {\cf20 // w+b}\par
00027                     fmode = O_WRITE | O_READ | O_CREATE | O_TRUNC;\par
00028                 \}\par
00029             \} {\cf19 else} \{ {\cf20 // w+}\par
00030                 fmode = O_WRITE | O_READ | O_CREATE | O_TRUNC;\par
00031             \}\par
00032         \} {\cf19 else} \{ {\cf20 // w}\par
00033             fmode = O_WRITE | O_CREATE | O_TRUNC;\par
00034         \}\par
00035     \} {\cf19 else} {\cf19 if} (mode[0] == {\cf23 'r'}) \{\par
00036         {\cf19 if} (mode[1] == {\cf23 'b'}) \{\par
00037             {\cf19 if} (mode[2] == {\cf23 '+'}) \{ {\cf20 // rb+}\par
00038                 fmode = O_READ | O_WRITE;\par
00039             \} {\cf19 else} \{ {\cf20 // rb}\par
00040                 fmode = O_READ;\par
00041             \}\par
00042         \} {\cf19 else} {\cf19 if} (mode[1] == {\cf23 '+'}) \{ {\cf20 // r+ r+b}\par
00043             fmode = O_READ | O_WRITE;\par
00044         \} {\cf19 else} \{ {\cf20 // r}\par
00045             fmode = O_READ;\par
00046         \}\par
00047     \} {\cf19 else} {\cf19 if} (mode[0] == {\cf23 'a'}) \{\par
00048         {\cf19 if} (mode[1] == {\cf23 'b'}) \{\par
00049             {\cf19 if} (mode[2] == {\cf23 '+'}) \{ {\cf20 // ab+}\par
00050                 fmode = O_WRITE | O_READ | O_APPEND | O_CREATE;\par
00051             \} {\cf19 else} \{ {\cf20 // ab}\par
00052                 fmode = O_WRITE | O_APPEND | O_CREATE;\par
00053             \}\par
00054         \} {\cf19 else} {\cf19 if} (mode[1] == {\cf23 '+'}) \{ {\cf20 // a+ a+b}\par
00055             fmode = O_WRITE | O_READ | O_APPEND | O_CREATE;\par
00056         \} {\cf19 else} \{ {\cf20 // a}\par
00057             fmode = O_WRITE | O_APPEND | O_CREATE;\par
00058         \}\par
00059     \}\par
00060     {\cf19 return} fmode;\par
00061 \}\par
00062 \par
00063 {\cf18 void} fcheckerror(FILE* stream)\{\par
00064     {\cf19 if} (!vfs_exists(stream->path))\{\par
00065         stream->err = STDIO_ERR_NO_FOUND;\par
00066     \} {\cf19 else} {\cf19 if} (stream->fmode == 0)\{\par
00067         stream->err = STDIO_ERR_MODE_ERROR;\par
00068     \} {\cf19 else} {\cf19 if} (stream->size <= 0)\{\par
00069         stream->err = STDIO_ERR_SIZE;\par
00070     \} {\cf19 else} {\cf19 if} (stream->open == 0)\{\par
00071         stream->err = STDIO_ERR_NO_OPEN;\par
00072     \}\par
00073 \}\par
00074 \par
00075 {\cf20 /*}\par
00076 {\cf20  * \'CF\'EE\'EB\'F3\'F7\'E8\'F2\'FC \'EA\'EE\'E4 \'EE\'F8\'E8\'E1\'EA\'E8}\par
00077 {\cf20  * \'C5\'F1\'EB\'E8 \'E2\'EE\'E7\'F0\'E0\'F9\'E0\'E5\'F2 0, \'E7\'ED\'E0\'F7\'E8\'F2 \'E2\'F1\'E5 \'CE\'CA}\par
00078 {\cf20  */}\par
00079 uint32_t ferror(FILE* stream)\{\par
00080     {\cf19 return} stream->err;\par
00081 \}\par
00082 \par
00083 {\cf20 /*}\par
00084 {\cf20  * \'C2\'FB\'E2\'E5\'F1\'F2\'E8 \'EE\'F8\'E8\'E1\'EA\'F3 \'EF\'F0\'E8 \'EE\'E1\'F0\'E0\'E1\'EE\'F2\'EA\'E8 \'EF\'EE\'F2\'EE\'EA\'E0 \'E4\'E0\'ED\'ED\'FB\'F5 \'F1 \'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'F2\'E5\'EB\'FC\'F1\'EA\'E8\'EC \'F1\'EE\'EE\'E1\'F9\'E5\'ED\'E8\'E5\'EC}\par
00085 {\cf20  */}\par
00086 {\cf18 void} perror(FILE* stream,{\cf18 char}* s)\{\par
00087     {\cf19 switch}(stream->err)\{\par
00088         {\cf19 case} STDIO_ERR_NO_FOUND:\{\par
00089             tty_printf({\cf22 "%s: %s\\n"},s, {\cf22 "File no found"});\par
00090             {\cf19 break};\par
00091         \}\par
00092         {\cf19 case} STDIO_ERR_MODE_ERROR:\{\par
00093             tty_printf({\cf22 "%s: %s\\n"},s, {\cf22 "Unknown operating mode"});\par
00094             {\cf19 break};\par
00095         \}\par
00096         {\cf19 case} STDIO_ERR_SIZE:\{\par
00097             tty_printf({\cf22 "%s: %s\\n"},s, {\cf22 "The file size has a non-standard value."});\par
00098             {\cf19 break};\par
00099         \}\par
00100         {\cf19 case} STDIO_ERR_NO_OPEN:\{\par
00101             tty_printf({\cf22 "%s: %s\\n"},s, {\cf22 "The file has not been opened for work."});\par
00102             {\cf19 break};\par
00103         \}\par
00104         {\cf19 default}: \{\par
00105             tty_printf({\cf22 "%s: %s\\n"},s, {\cf22 "Unknown"});\par
00106             {\cf19 break};\par
00107         \}\par
00108     \}\par
00109 \}\par
00110 \par
00111 {\cf20 /*}\par
00112 {\cf20  * \'CE\'F2\'EA\'F0\'FB\'F2\'FC \'F4\'E0\'E9\'EB \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 \'ED\'E8\'EC}\par
00113 {\cf20  */}\par
00114 FILE* fopen({\cf17 const} {\cf18 char}* filename, {\cf17 const} {\cf18 char}* mode)\{\par
00115     FILE* file;\par
00116     {\cf20 // \'CF\'EE\'EB\'F3\'F7\'E0\'E5\'EC \'F2\'E8\'EF \'EE\'F2\'EA\'F0\'FB\'F2\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0}\par
00117     int32_t fmode = fmodecheck(mode);\par
00118     {\cf19 if} (!vfs_exists(filename) || fmode == 0)\{\par
00119         {\cf20 // \'D2\'E8\'EF \'F4\'E0\'E9\'EB\'E0 \'ED\'E5 \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED \'E8\'EB\'E8 \'F4\'E0\'E9\'EB \'ED\'E5 \'ED\'E0\'E9\'E4\'E5\'ED}\par
00120         file->err = (fmode == 0?2:1);\par
00121         file->path = filename;\par
00122         file->size = 0;\par
00123         file->open = 0;\par
00124         file->pos = -1;\par
00125         {\cf19 return} file;\par
00126     \}\par
00127     file->open = 1;                                     {\cf20 // \'D4\'E0\'E9\'EB \'F3\'F1\'EF\'E5\'F8\'ED\'EE \'EE\'F2\'EA\'F0\'FB\'F2}\par
00128     file->fmode = fmode;                                {\cf20 // \'D0\'E5\'E6\'E8\'EC \'F0\'E0\'E1\'EE\'F2\'FB \'F1 \'F4\'E0\'E9\'EB\'EE\'EC}\par
00129     file->size = vfs_get_size(filename);                {\cf20 // \'D0\'E0\'E7\'EC\'E5\'F0 \'F4\'E0\'E9\'EB\'E0}\par
00130     file->path = filename;                              {\cf20 // \'CF\'EE\'EB\'ED\'FB\'E9 \'EF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3}\par
00131     file->bufSize = {\cf17 sizeof}(char) * file->size;          {\cf20 // \'D0\'E0\'E7\'EC\'E5\'F0 \'E1\'F3\'F4\'E5\'F0\'E0}\par
00132     file->buf = ({\cf18 char}*) kheap_malloc(file->bufSize);    {\cf20 // \'D1\'E0\'EC \'E1\'F3\'F4\'E5\'F0}\par
00133     file->pos = 0;                                      {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FF \'E2 \'F1\'E0\'EC\'EE\'E5 \'ED\'E0\'F7\'E0\'EB\'EE}\par
00134     file->err = 0;                                      {\cf20 // \'CE\'F8\'E8\'E1\'EE\'EA \'E2 \'F0\'E0\'E1\'EE\'F2\'E5 \'ED\'E5\'F2}\par
00135     {\cf19 return} file;\par
00136 \}\par
00137 \par
00138 {\cf20 /*}\par
00139 {\cf20  * \'C7\'E0\'EA\'F0\'FB\'F2\'FC \'F4\'E0\'E9\'EB \'EF\'EE\'F1\'EB\'E5 \'F0\'E0\'E1\'EE\'F2\'FB \'F1 \'ED\'E8\'EC}\par
00140 {\cf20  */}\par
00141 {\cf18 void} fclose(FILE* stream)\{\par
00142     {\cf19 if} (stream->open)\{\par
00143         kheap_free(stream->buf);\par
00144     \}\par
00145 \}\par
00146 \par
00147 {\cf20 /*}\par
00148 {\cf20  * \'CF\'EE\'EB\'F3\'F7\'E8\'F2\'FC \'F0\'E0\'E7\'EC\'E5\'F0 \'F4\'E0\'E9\'EB\'E0 \'E2 \'E1\'E0\'E9\'F2\'E0\'F5}\par
00149 {\cf20  */}\par
00150 int32_t fsize(FILE* stream)\{\par
00151     {\cf19 if} (!stream->open || stream->size <= 0 || stream->fmode == 0)\{\par
00152         fcheckerror(stream);\par
00153         {\cf19 return} -1;\par
00154     \} {\cf19 else} \{\par
00155         {\cf19 return} stream->size;\par
00156     \}\par
00157 \}\par
00158 \par
00159 {\cf20 /*}\par
00160 {\cf20  * \'CF\'EE\'EB\'F3\'F7\'E8\'F2\'FC \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'F4\'E0\'E9\'EB\'E0}\par
00161 {\cf20  */}\par
00162 {\cf18 char}* fread(FILE* stream)\{\par
00163     {\cf19 if} (!stream->open || !vfs_exists(stream->path) || stream->size <= 0 || stream->fmode == 0)\{\par
00164         {\cf20 // \'D3\'E4\'E0\'EB\'EE\'F1\'FC \'EB\'E8 \'EE\'F2\'EA\'F0\'FB\'F2\'FC \'F4\'E0\'E9\'EB, \'F1\'F3\'F9\'E5\'F1\'F2\'E2\'F3\'E5\'F2 \'EB\'E8 \'F4\'E0\'E9\'EB, \'F0\'E0\'E7\'EC\'E5\'F0 \'F4\'E0\'E9\'EB\'E0 \'E1\'EE\'EB\'FC\'F8\'E5 \'ED\'F3\'EB\'FF \'E8 \'F3\'EA\'E0\'E7\'E0\'ED \'EF\'F0\'E0\'E2\'E8\'EB\'FC\'ED\'FB\'E9 \'F0\'E5\'E6\'E8\'EC \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 \'F4\'E0\'E9\'EB\'EE\'EC}\par
00165         fcheckerror(stream);\par
00166         {\cf19 return} {\cf22 ""};\par
00167     \}\par
00168     int32_t res = vfs_read(stream->path, 0, stream->size, stream->buf);\par
00169     (void)res;\par
00170     stream->buf[stream->size] = {\cf23 '\\0'};\par
00171     {\cf19 return} stream->buf;\par
00172 \}\par
00173 \par
00174 {\cf20 /*}\par
00175 {\cf20  * \'CF\'EE\'EB\'F3\'F7\'E8\'F2\'FC \'EF\'EE\'E7\'E8\'F6\'E8\'FE \'E2 \'F4\'E0\'E9\'EB\'E5}\par
00176 {\cf20  */}\par
00177 int64_t ftell(FILE* stream)\{\par
00178     {\cf19 if} (!stream->open || stream->size <= 0 || stream->fmode == 0)\{\par
00179         fcheckerror(stream);\par
00180         {\cf19 return} -1;\par
00181     \}\par
00182     {\cf19 return} stream->pos;\par
00183 \}\par
00184 \par
00185 {\cf20 /*}\par
00186 {\cf20  * \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'EF\'EE\'E7\'E8\'F6\'E8\'E8 \'E2 \'EF\'EE\'F2\'EE\'EA\'E5 \'E4\'E0\'ED\'ED\'FB\'F5 \'EE\'F2\'ED\'EE\'F1\'E8\'F2\'E5\'EB\'FC\'ED\'EE \'F2\'E5\'EA\'F3\'F9\'E5\'E9 \'EF\'EE\'E7\'E8\'F6\'E8\'E8}\par
00187 {\cf20  * stream \'96 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'ED\'E0 \'F3\'EF\'F0\'E0\'E2\'EB\'FF\'FE\'F9\'F3\'FE \'F2\'E0\'E1\'EB\'E8\'F6\'F3 \'EF\'EE\'F2\'EE\'EA\'E0 \'E4\'E0\'ED\'ED\'FB\'F5.}\par
00188 {\cf20  * offset \'96 \'F1\'EC\'E5\'F9\'E5\'ED\'E8\'E5 \'EF\'EE\'E7\'E8\'F6\'E8\'E8.}\par
00189 {\cf20  * whence \'96 \'F2\'EE\'F7\'EA\'E0 \'EE\'F2\'F1\'F7\'E5\'F2\'E0 \'F1\'EC\'E5\'F9\'E5\'ED\'E8\'FF.}\par
00190 {\cf20  */}\par
00191 int64_t fseek(FILE* stream, int64_t offset, uint32_t whence)\{\par
00192     {\cf19 if} (!stream->open || stream->size <= 0 || stream->fmode == 0)\{\par
00193         fcheckerror(stream);\par
00194         {\cf19 return} -1;\par
00195     \}\par
00196     int64_t lsk;\par
00197     {\cf19 if} (whence == SEEK_CUR) \{\par
00198         lsk = stream->pos;\par
00199     \} {\cf19 else} {\cf19 if} (whence == SEEK_END) \{\par
00200         lsk = stream->size;\par
00201     \} {\cf19 else} {\cf19 if} (whence == SEEK_SET) \{\par
00202         lsk = 0;\par
00203     \} {\cf19 else} \{\par
00204         {\cf19 return} -1;\par
00205     \}\par
00206     {\cf19 if} (lsk+offset > 0 && stream->size >=lsk+offset)\{\par
00207         stream->pos = lsk+offset;\par
00208     \}\par
00209     {\cf19 return} -1;\par
00210 \}\par
00211 \par
00212 {\cf20 /*}\par
00213 {\cf20  * \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'EF\'EE\'E7\'E8\'F6\'E8\'E8 \'E2 \'EF\'EE\'F2\'EE\'EA\'E5 \'E4\'E0\'ED\'ED\'FB\'F5}\par
00214 {\cf20  */}\par
00215 {\cf18 void} fsetpos(FILE* stream, int64_t pos)\{\par
00216     {\cf19 if} (!stream->open || stream->size <= 0 || stream->fmode == 0)\{\par
00217         fcheckerror(stream);\par
00218         stream->pos = 0;\par
00219     \} {\cf19 else} {\cf19 if} (pos > 0 && stream->size >= pos)\{\par
00220         stream->pos = pos;\par
00221     \}\par
00222     stream->pos = 0;\par
00223 \}\par
00224 \par
00225 {\cf20 /*}\par
00226 {\cf20  * \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'F2\'E5\'EA\'F3\'F9\'E5\'E9 \'EF\'EE\'E7\'E8\'F6\'E8\'E8 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF/\'E7\'E0\'EF\'E8\'F1\'E8 \'E2 \'ED\'E0\'F7\'E0\'EB\'EE \'F4\'E0\'E9\'EB\'E0.}\par
00227 {\cf20  */}\par
00228 {\cf18 void} rewind(FILE* stream)\{\par
00229     {\cf19 if} (!stream->open || stream->size <= 0 || stream->fmode == 0)\{\par
00230         fcheckerror(stream);\par
00231     \}\par
00232     stream->pos = 0;\par
00233 \}\par
00234 \par
00235 {\cf20 /*}\par
00236 {\cf20  * \'CF\'EE\'EB\'F3\'F7\'E8\'F2\'FC \'EF\'EE\'E7\'E8\'F6\'E8\'FE \'E2 \'F4\'E0\'E9\'EB\'E5}\par
00237 {\cf20  */}\par
00238 int64_t fgetpos(FILE* stream)\{\par
00239     {\cf19 if} (!stream->open || stream->size <= 0 || stream->fmode == 0)\{\par
00240         fcheckerror(stream);\par
00241         {\cf19 return} -1;\par
00242     \}\par
00243     {\cf19 return} stream->pos;\par
00244 \}\par
00245 \par
00246 {\cf18 void} fdebuginfo(FILE* stream)\{\par
00247     tty_printf({\cf22 "[fDebugInfo] Path: %s\\n\\tIsOpen: %d\\n\\tMode: %d\\n\\tSize: %d\\n\\tBuffer: %d\\n\\tPosition: %d\\n\\tError code: %d\\n"},stream->path,stream->open,stream->fmode,stream->size,stream->bufSize,stream->pos,stream->err);\par
00248 \}\par
00249 \par
00250 \par
00251 {\cf18 size_t} fwrite ( {\cf17 const} {\cf18 void} * ptr, {\cf18 size_t} size, {\cf18 size_t} count, FILE * stream )\{\par
00252     {\cf20 // \'D0\'E5\'E0\'EB\'E8\'E7\'F3\'E5\'EC \'EA\'E0\'EA \'E1\'F3\'E4\'E5\'F2 \'E3\'EE\'F2\'EE\'E2\'FB ATA-\'E4\'F0\'E0\'E9\'E2\'E5\'F0\'E0 \'E8 FS}\par
00253 \}\par
00254 \par
00255 \par
00256 {\cf18 char}* fgets (uint32_t n, FILE *stream)\{\par
00257 \par
00258 \}\par
00259 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stdlib.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/libk/stdlib.c}
{\xe \v kernel/src/libk/stdlib.c}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00011 {\cf18 void}* calloc({\cf18 size_t} nmemb, {\cf18 size_t} size) \{\par
00012     {\cf18 void}* ptr = kheap_malloc(nmemb * size);\par
00013     {\cf19 if} (!ptr) \{\par
00014         {\cf19 return} NULL;\par
00015     \}\par
00016     memset(ptr, 0, nmemb * size);\par
00017     {\cf19 return} ptr;\par
00018 \}\par
00019 \par
00020 \par
00026 {\cf18 void} strver({\cf18 char} *str) \{\par
00027     {\cf18 char} c;\par
00028     int32_t j = strlen(str) - 1;\par
00029 \par
00030     {\cf19 for} (int32_t i = 0; i < j; i++) \{\par
00031         c = str[i];\par
00032         str[i] = str[j];\par
00033         str[j] = c;\par
00034         j--;\par
00035     \}\par
00036 \}\par
00037 \par
00038 \par
00046 int32_t itoa(int32_t n, {\cf18 char} *buffer) \{\par
00047     {\cf18 char} {\cf17 const} digits[] = {\cf22 "0123456789"};\par
00048     {\cf18 char}* p = buffer;\par
00049 \par
00050     {\cf19 if} (n < 0)\{\par
00051         *p++ = {\cf23 '-'};\par
00052         n *= -1;\par
00053     \}\par
00054 \par
00055     {\cf18 int} s = n;\par
00056 \par
00057     {\cf19 do} \{\par
00058         ++p;\par
00059         s = s / 10;\par
00060     \} {\cf19 while}(s);\par
00061 \par
00062     *p = {\cf23 '\\0'};\par
00063 \par
00064     {\cf19 do} \{ \par
00065         *--p = digits[n % 10];\par
00066         n = n / 10;\par
00067     \} {\cf19 while}(n);\par
00068 \par
00069     {\cf19 return} strlen(buffer);\par
00070 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
string.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/libk/string.c}
{\xe \v kernel/src/libk/string.c}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 {\cf18 size_t} strlen({\cf17 const} {\cf18 char} *str)\{\par
00004     {\cf18 size_t} len = 0;\par
00005     {\cf19 while} (str[len] != 0)\{\par
00006         len++;\par
00007     \}\par
00008     {\cf19 return} len;\par
00009 \}\par
00010 \par
00011 {\cf18 void} *memcpy({\cf18 void} *destination, {\cf17 const} {\cf18 void} *source, {\cf18 size_t} n)\{\par
00012     {\cf18 char} *tmp_dest = ({\cf18 char} *)destination;\par
00013     {\cf17 const} {\cf18 char} *tmp_src = ({\cf17 const} {\cf18 char} *)source;\par
00014 \par
00015     {\cf19 while} (n)\{\par
00016         *tmp_dest++ = *tmp_src++;\par
00017         n--;\par
00018     \}\par
00019 \par
00020     {\cf19 return} destination;\par
00021 \}\par
00022 \par
00023 {\cf18 void} *memset({\cf18 void} *destination, int32_t c, {\cf18 size_t} n)\{\par
00024     {\cf19 if} (destination)\{\par
00025         {\cf18 char} *tmp_mem = ({\cf18 char} *)destination;\par
00026         {\cf19 while} (n--)\par
00027             *tmp_mem++ = c;\par
00028     \}\par
00029 \par
00030     {\cf19 return} destination;\par
00031 \}\par
00032 \par
00033 int32_t strcmp({\cf17 const} {\cf18 char} *str1, {\cf17 const} {\cf18 char} *str2)\{\par
00034     int32_t s1;\par
00035     int32_t s2;\par
00036 \par
00037     {\cf19 do}\{\par
00038         s1 = *str1++;\par
00039         s2 = *str2++;\par
00040         {\cf19 if} (s1 == 0)\par
00041             {\cf19 break};\par
00042     \} {\cf19 while} (s1 == s2);\par
00043 \par
00044     {\cf19 return} (s1 < s2) ? -1 : (s1 > s2);\par
00045 \}\par
00046 \par
00047 {\cf18 char} *strcpy({\cf18 char} *dest, {\cf17 const} {\cf18 char} *src)\{\par
00048     {\cf19 do}\{\par
00049         *dest++ = *src++;\par
00050     \} {\cf19 while} (*src != 0);\par
00051 \par
00052     {\cf19 return} dest;\par
00053 \}\par
00054 \par
00055 int32_t memcmp({\cf17 const} {\cf18 void} *s1, {\cf17 const} {\cf18 void} *s2, {\cf18 size_t} n)\{\par
00056     {\cf18 unsigned} {\cf18 char} u1, u2;\par
00057 \par
00058     {\cf19 for} (; n--; s1++, s2++)\{\par
00059         u1 = *({\cf18 unsigned} {\cf18 char} *)s1;\par
00060         u2 = *({\cf18 unsigned} {\cf18 char} *)s2;\par
00061         {\cf19 if} (u1 != u2)\{\par
00062             {\cf19 return} (u1 - u2);\par
00063         \}\par
00064     \}\par
00065     {\cf19 return} 0;\par
00066 \}\par
00067 \par
00068 {\cf18 size_t} str_bksp({\cf18 char} *str, {\cf18 char} c)\{\par
00069     {\cf18 size_t} i = strlen(str);\par
00070     i--;\par
00071     {\cf19 while} (i)\{\par
00072         i--;\par
00073         {\cf19 if} (str[i] == c)\{\par
00074             str[i + 1] = 0;\par
00075             {\cf19 return} 1;\par
00076         \}\par
00077     \}\par
00078     {\cf19 return} 0;\par
00079 \}\par
00080 \par
00081 {\cf18 char} *strpbrk({\cf17 const} {\cf18 char} *s, {\cf17 const} {\cf18 char} *accept)\{\par
00082     {\cf19 while} (*s != {\cf23 '\\0'})\{\par
00083         {\cf17 const} {\cf18 char} *a = accept;\par
00084         {\cf19 while} (*a != {\cf23 '\\0'})\{\par
00085             {\cf19 if} (*a++ == *s)\{\par
00086                 {\cf19 return} ({\cf18 char} *)s;\par
00087             \}\par
00088         \}\par
00089         ++s;\par
00090     \}\par
00091     {\cf19 return} NULL;\par
00092 \}\par
00093 \par
00094 {\cf18 size_t} strspn({\cf17 const} {\cf18 char} *s, {\cf17 const} {\cf18 char} *accept)\{\par
00095     {\cf17 const} {\cf18 char} *p;\par
00096     {\cf17 const} {\cf18 char} *a;\par
00097     {\cf18 size_t} count = 0;\par
00098 \par
00099     {\cf19 for} (p = s; *p != {\cf23 '\\0'}; ++p)\{\par
00100         {\cf19 for} (a = accept; *a != {\cf23 '\\0'}; ++a)\{\par
00101             {\cf19 if} (*p == *a)\{\par
00102                 {\cf19 break};\par
00103             \}\par
00104         \}\par
00105         {\cf19 if} (*a == {\cf23 '\\0'})\{\par
00106             {\cf19 return} count;\par
00107         \}\par
00108         {\cf19 else}\{\par
00109             ++count;\par
00110         \}\par
00111     \}\par
00112     {\cf19 return} count;\par
00113 \}\par
00114 \par
00115 int32_t strncmp({\cf17 const} {\cf18 char} *s1, {\cf17 const} {\cf18 char} *s2, {\cf18 size_t} num)\{\par
00116     {\cf19 for} ({\cf18 size_t} i = 0; i < num; i++)\{\par
00117         {\cf19 if} (s1[i] != s2[i])\{\par
00118             {\cf19 return} 1;\par
00119         \}\par
00120     \}\par
00121     {\cf19 return} 0;\par
00122 \}\par
00123 \par
00124 {\cf18 char} *strtok({\cf18 char} *s, {\cf17 const} {\cf18 char} *delim)\{\par
00125     {\cf17 static} {\cf18 char} *olds = NULL;\par
00126     {\cf18 char} *token;\par
00127 \par
00128     {\cf19 if} (s == NULL)\{\par
00129         s = olds;\par
00130     \}\par
00131 \par
00132     s += strspn(s, delim);\par
00133     {\cf19 if} (*s == {\cf23 '\\0'})\{\par
00134         olds = s;\par
00135         {\cf19 return} NULL;\par
00136     \}\par
00137 \par
00138     token = s;\par
00139     s = strpbrk(token, delim);\par
00140     {\cf19 if} (s == NULL)\{\par
00141         olds = token;\par
00142     \}\par
00143     {\cf19 else}\{\par
00144         *s = {\cf23 '\\0'};\par
00145         olds = s + 1;\par
00146     \}\par
00147     {\cf19 return} token;\par
00148 \}\par
00149 \par
00150 {\cf18 char} *strncpy({\cf18 char} *dest, {\cf17 const} {\cf18 char} *src, {\cf18 size_t} n)\{\par
00151     {\cf18 size_t} i;\par
00152     {\cf19 for} (i = 0; i < n && src[i] != {\cf23 '\\0'}; i++)\par
00153         dest[i] = src[i];\par
00154     {\cf19 for} (; i < n; i++)\par
00155         dest[i] = {\cf23 '\\0'};\par
00156     {\cf19 return} dest;\par
00157 \}\par
00158 \par
00159 {\cf18 char} *strcat({\cf18 char} *s, {\cf17 const} {\cf18 char} *t)\{\par
00160     strcpy(s + strlen(s), t);\par
00161     {\cf19 return} s;\par
00162 \}\par
00163 \par
00164 {\cf18 void} substr({\cf18 char} *dest, {\cf18 char} *source, {\cf18 int} from, {\cf18 int} length)\{\par
00165     strncpy(dest, source + from, length);\par
00166     dest[length] = 0;\par
00167 \}\par
00168 \par
00169 {\cf18 char} *strchr({\cf17 const} {\cf18 char} *_s, {\cf18 int} _c)\{\par
00170     {\cf19 while} (*_s != ({\cf18 char})_c)\{\par
00171         {\cf19 if} (!*_s++)\{\par
00172             {\cf19 return} 0;\par
00173         \}\par
00174     \}\par
00175     {\cf19 return} ({\cf18 char} *)_s;\par
00176 \}\par
00177 \par
00178 uint32_t format_string_size({\cf18 char} *text, va_list args)\{\par
00179     {\cf17 const} {\cf18 unsigned} {\cf18 char} hex[18] = \{{\cf23 '0'}, {\cf23 '1'}, {\cf23 '2'}, {\cf23 '3'}, {\cf23 '4'}, {\cf23 '5'}, {\cf23 '6'}, {\cf23 '7'}, {\cf23 '8'}, {\cf23 '9'}, {\cf23 'A'}, {\cf23 'B'}, {\cf23 'C'}, {\cf23 'D'}, {\cf23 'E'}, {\cf23 'F'}\};\par
00180     uint32_t i = 0;\par
00181     uint32_t size = 0;\par
00182     uint32_t n, d = 0x10000000;\par
00183     {\cf19 while} (text[i])\{\par
00184         {\cf18 char} res[32];\par
00185         {\cf18 int} temp_int = 0;\par
00186         {\cf18 char} temp_char = {\cf23 '0'};\par
00187         {\cf19 if} (text[i] == {\cf23 '%'})\{\par
00188             i++;\par
00189             {\cf19 switch} (text[i])\{\par
00190             {\cf19 case} {\cf23 's'}:\par
00191                 size += strlen(va_arg(args, {\cf18 char} *));\par
00192                 {\cf19 break};\par
00193             {\cf19 case} {\cf23 'c'}:\par
00194                 temp_char = va_arg(args, {\cf18 char});\par
00195                 size++;\par
00196                 {\cf19 break};\par
00197             {\cf19 case} {\cf23 'd'}:\par
00198                 temp_int = va_arg(args, {\cf18 int});\par
00199 \par
00200                 itoa(temp_int, res);\par
00201                 size += strlen(res);\par
00202                 {\cf19 break};\par
00203             {\cf19 case} {\cf23 'i'}:\par
00204                 temp_int = va_arg(args, {\cf18 int});\par
00205 \par
00206                 itoa(temp_int, res);\par
00207                 size += strlen(res);\par
00208                 {\cf19 break};\par
00209             {\cf19 case} {\cf23 'u'}:\par
00210                 temp_int = va_arg(args, {\cf18 unsigned} {\cf18 int});\par
00211 \par
00212                 itoa(temp_int, res);\par
00213                 size += strlen(res);\par
00214                 {\cf19 break};\par
00215             {\cf19 case} {\cf23 'x'}:\par
00216                 \par
00217                 temp_int = va_arg(args, {\cf18 unsigned} {\cf18 int});\par
00218                 n = 0;\par
00219                 d = 0x10000000;\par
00220 \par
00221                 res[0] = {\cf23 '0'};\par
00222                 res[1] = {\cf23 'x'};\par
00223 \par
00224                 {\cf19 while} ((temp_int / d == 0) && (d >= 0x10))\par
00225                     d /= 0x10;\par
00226 \par
00227                 n = temp_int;\par
00228 \par
00229                 {\cf19 while} (d >= 0xF)\par
00230                 \{\par
00231                     strcpy(res, hex[n / d]);\par
00232                     n = n % d;\par
00233                     d /= 0x10;\par
00234                 \}\par
00235 \par
00236                 size += strlen(res);\par
00237                 {\cf19 break};\par
00238             {\cf19 case} {\cf23 'v'}:\par
00239                 temp_int = va_arg(args, {\cf18 unsigned} {\cf18 int});\par
00240                 n = 0;\par
00241                 d = 0x10000000;\par
00242 \par
00243                 {\cf19 while} ((temp_int / d == 0) && (d >= 0x10))\par
00244                     d /= 0x10;\par
00245 \par
00246                 n = temp_int;\par
00247 \par
00248                 {\cf19 while} (d >= 0xF)\par
00249                 \{\par
00250                     strcpy(res, hex[n / d]);\par
00251                     n = n % d;\par
00252                     d /= 0x10;\par
00253                 \}\par
00254 \par
00255                 size += strlen(res);\par
00256                 {\cf19 break};\par
00257             {\cf19 default}:\par
00258                 size++;\par
00259             \}\par
00260             {\cf20 // \\n}\par
00261         \}\par
00262         {\cf19 else} {\cf19 if} (text[i] == 10)\{\par
00263             size++;\par
00264         \}\par
00265         {\cf19 else} {\cf19 if} (text[i] == 9)\{\par
00266             size += 4;\par
00267         \}\par
00268         {\cf19 else}\{\par
00269             size++;\par
00270         \}\par
00271         i++;\par
00272     \}\par
00273     {\cf19 return} size;\par
00274 \}\par
00275 \par
00276 \par
00277 {\cf18 void} strtolower({\cf18 char}* as)\par
00278 \{\par
00279     {\cf19 while}(*as != 0)\par
00280     \{\par
00281         {\cf19 if}(*as >= {\cf23 'A'} && *as <= {\cf23 'Z'})\par
00282             *as += ({\cf23 'a'} - {\cf23 'A'});\par
00283         as++;\par
00284     \}\par
00285 \}\par
00286 \par
00287 {\cf18 void} strtoupper({\cf18 char}* as)\par
00288 \{\par
00289     {\cf19 while}(*as != 0)\par
00290     \{\par
00291         {\cf19 if}(*as >= {\cf23 'a'} && *as <= {\cf23 'z'})\par
00292             *as -= ({\cf23 'a'} - {\cf23 'A'});\par
00293         as++;\par
00294     \}\par
00295 \}\par
00296 \par
00297 \par
00298 {\cf18 char} *format_string({\cf18 char} *text, ...)\{\par
00299     va_list args;\par
00300     uint32_t i = 0;\par
00301     va_start(args, text);\par
00302     uint32_t size = format_string_size(text, args);\par
00303     qemu_log({\cf22 "format:%d size"}, size);\par
00304     {\cf18 char} *result = kheap_malloc(size);\par
00305     memset(result, 0, strlen(text));\par
00306 \par
00307     {\cf19 while} (text[i])\{\par
00308         {\cf18 char} res[32];\par
00309         {\cf18 int} temp_int = 0;\par
00310 \par
00311         {\cf19 if} (text[i] == {\cf23 '%'})\{\par
00312             i++;\par
00313             {\cf19 switch} (text[i])\{\par
00314                 {\cf19 case} {\cf23 's'}:\par
00315                     strcat(result, va_arg(args, {\cf18 char}*));\par
00316                     {\cf19 break};\par
00317                 {\cf19 case} {\cf23 'c'}: \{\par
00318                     {\cf20 //strcat(result, va_arg(args, char)) // Wrong!}\par
00319                     result[i] = va_arg(args, {\cf18 char});  {\cf20 // Maybe correct                  }\par
00320                     {\cf19 break};\par
00321                 \}\par
00322                 {\cf19 case} {\cf23 'd'}:\{\par
00323                     temp_int = va_arg(args, {\cf18 int});\par
00324                     itoa(temp_int, res);\par
00325                     strcat(result, res);\par
00326                     {\cf19 break};\par
00327                 \}\par
00328                 {\cf19 case} {\cf23 'i'}:\par
00329                     {\cf20 //tty_putint(va_arg(args, int));}\par
00330                     {\cf19 break};\par
00331                 {\cf19 case} {\cf23 'u'}:\par
00332                     {\cf20 //tty_putint(va_arg(args, unsigned int));}\par
00333                     {\cf19 break};\par
00334                 {\cf19 case} {\cf23 'x'}:\par
00335                     result[i]={\cf23 '!'};\par
00336                     {\cf20 //tty_puthex(va_arg(args, uint32_t));}\par
00337                     {\cf19 break};\par
00338                 {\cf19 case} {\cf23 'v'}:\par
00339                     {\cf20 //tty_puthex_v(va_arg(args, uint32_t));}\par
00340                     {\cf19 break};\par
00341                 {\cf19 default}:\par
00342                     result[i] = text[i];\par
00343             \}\par
00344         \}\par
00345         {\cf19 else} {\cf19 if} (text[i] == 10)\{\par
00346             {\cf20 // tty_line_fill[tty_pos_y] = tty_pos_x;}\par
00347             {\cf20 // tty_pos_x = 0;}\par
00348 \par
00349             {\cf20 // if ((tty_pos_y + 17) >= (int)VESA_HEIGHT) \{}\par
00350             {\cf20 // tty_scroll();}\par
00351             {\cf20 //\} else \{}\par
00352             {\cf20 // tty_pos_y += 17;}\par
00353             {\cf20 //\}}\par
00354         \}\par
00355         {\cf19 else} {\cf19 if} (text[i] == 9)\{\par
00356             {\cf20 // tty_pos_x += 4 * 17;}\par
00357         \}\par
00358         {\cf19 else}\{\par
00359             result[i] = text[i];\par
00360         \}\par
00361         i++;\par
00362     \}\par
00363     va_end(args);\par
00364     {\cf19 return} result;\par
00365 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
kheap.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/mem/kheap.c}
{\xe \v kernel/src/mem/kheap.c}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 virtual_addr_t kheap_begin; {\cf20 // \'CD\'E0\'F7\'E0\'EB\'EE \'EA\'F3\'F7\'E8 \'FF\'E4\'F0\'E0}\par
00005 virtual_addr_t kheap_end; {\cf20 // \'CA\'EE\'ED\'E5\'F6 \'EA\'F3\'F7\'E8 \'FF\'E4\'F0\'E0}\par
00006 \par
00007 uint32_t kheap_memory_used; {\cf20 // \'C8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'ED\'ED\'EE \'EF\'E0\'EC\'FF\'F2\'E8}\par
00008 int32_t kheap_alloc_number; {\cf20 // \'D7\'E8\'F1\'EB\'EE \'E2\'FB\'E4\'E5\'EB\'E5\'ED\'E8\'E9}\par
00009 \par
00010 \par
00011 {\cf18 void} kheap_init() \{\par
00012     kheap_begin = KHEAP_START_VADDR;\par
00013     kheap_end = (virtual_addr_t)NULL;\par
00014 \par
00015     kheap_alloc_number = 0;\par
00016     kheap_memory_used = 0;\par
00017     qemu_log({\cf22 "KHEAP installed"});\par
00018 \}\par
00019 \par
00020 \par
00021 {\cf20 // \'D3\'E2\'E5\'EB\'E8\'F7\'E5\'ED\'E8\'E5 \'EA\'F3\'F7\'E8 \'FF\'E4\'F0\'E0 \'ED\'E0 \'ED\'E5\'EA\'EE\'F2\'EE\'F0\'FB\'E9 \'F0\'E0\'E7\'EC\'E5\'F0, \'EE\'ED \'E1\'F3\'E4\'E5\'F2 \'EE\'EA\'F0\'F3\'E3\'EB\'E5\'ED \'E4\'EE \'F0\'E0\'E7\'EC\'E5\'F0\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'FB}\par
00022 {\cf18 void} *kheap_morecore(uint32_t size) \{\par
00023     {\cf19 if} (kheap_end == (virtual_addr_t)NULL) \{    {\cf20 // \'CA\'EE\'E3\'E4\'E0 kheap_end == NULL \'EC\'FB \'E4\'EE\'EB\'E6\'ED\'FB \'F1\'EE\'E7\'E4\'E0\'F2\'FC \'ED\'E0\'F7\'E0\'EB\'FC\'ED\'F3\'FE \'EA\'F3\'F7\'F3}\par
00024         kheap_end = kheap_begin;\par
00025     \}\par
00026 \par
00027     {\cf18 void} *first_kheap_end = ({\cf18 void}*)kheap_end; {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'E0\'E4\'F0\'E5\'F1\'E0 \'E2\'EE\'E7\'E2\'F0\'E0\'F2\'E0}\par
00028     \par
00029     {\cf20 // \'D1\'EE\'E7\'E4\'E0\'ED\'E8\'E5 \'F1\'F2\'F0\'E0\'ED\'E8\'F6}\par
00030     {\cf19 for} (int32_t pages = (size / PAGE_SIZE) + 1; pages-- > 0; kheap_end += PAGE_SIZE) \{\par
00031         vmm_alloc_page(kheap_end);\par
00032         memset(({\cf18 void}*)kheap_end, 0x00, PAGE_SIZE);\par
00033     \}\par
00034 \par
00035     {\cf19 return} first_kheap_end; {\cf20 // \'CC\'FB \'E4\'EE\'EB\'E6\'ED\'FB \'E2\'E5\'F0\'ED\'F3\'F2\'FC \'ED\'E0\'F7\'E0\'EB\'FC\'ED\'FB\'E9 \'E0\'E4\'F0\'E5\'F1 \'EF\'E0\'EC\'FF\'F2\'E8, \'EA\'EE\'F2\'EE\'F0\'F3\'FE \'EC\'FB \'E2\'FB\'E4\'E5\'EB\'E8\'EB\'E8 \'E2 \'EA\'F3\'F7\'F3}\par
00036 \}\par
00037 \par
00038 \par
00039 {\cf20 // \'CE\'F1\'E2\'EE\'E1\'EE\'E6\'E4\'E5\'ED\'E8\'E5 \'F0\'E0\'ED\'E5\'E5 \'E2\'FB\'E4\'E5\'EB\'E5\'ED\'ED\'EE\'E3\'EE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'E0 \'E8\'E7 \'EA\'F3\'F7\'E8 \'FF\'E4\'F0\'E0}\par
00040 int32_t kheap_free({\cf18 void} *address) \{\par
00041     kheap_item *temp_item, *item;\par
00042 \par
00043     {\cf19 if} (address == NULL) \{\par
00044         {\cf19 return} -1;\par
00045     \}\par
00046 \par
00047     \par
00048     item = (kheap_item*) ((uint32_t) address - (uint32_t) {\cf17 sizeof}(kheap_item)); {\cf20 // \'DD\'EB\'E5\'EC\'E5\'ED\'F2 \'EA\'EE\'F2\'EE\'F0\'FB\'E9 \'ED\'F3\'E6\'ED\'EE \'EE\'F1\'E2\'EE\'E1\'EE\'E4\'E8\'F2\'FC}\par
00049 \par
00050     {\cf20 // \'CF\'EE\'E8\'F1\'EA}\par
00051     {\cf19 for} (temp_item = (kheap_item*)kheap_begin; temp_item != NULL; temp_item = temp_item->next) \{\par
00052         {\cf19 if} (temp_item == item) \{\par
00053             {\cf20 // \'CE\'F1\'E2\'EE\'E1\'EE\'E6\'E4\'E5\'ED\'E8\'E5}\par
00054             temp_item->used = 0;\par
00055             kheap_memory_used -= temp_item->size;\par
00056             kheap_alloc_number--;\par
00057 \par
00058             {\cf20 // \'CE\'E1\'FA\'E5\'E4\'E8\'ED\'E5\'ED\'E8\'E5 \'F1\'EC\'E5\'E6\'ED\'FB\'F5 \'F1\'E2\'EE\'E1\'EE\'E4\'ED\'FB\'F5 \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'EE\'E2}\par
00059             {\cf19 for} (temp_item = (kheap_item*)kheap_begin; temp_item != NULL; temp_item = temp_item->next) \{\par
00060                 {\cf19 while} (!temp_item->used && temp_item->next != NULL && !temp_item->next->used) \{\par
00061                     temp_item->size += {\cf17 sizeof}(kheap_item) + temp_item->next->size;\par
00062                     temp_item->next = temp_item->next->next;\par
00063                 \}\par
00064             \}\par
00065 \par
00066             {\cf20 // \'CA\'EE\'ED\'E5\'F6 \'F6\'E8\'EA\'EB\'E0}\par
00067             {\cf19 return} 1;\par
00068         \}\par
00069     \}\par
00070     {\cf19 return} -1;\par
00071 \}\par
00072 \par
00073 \par
00074 {\cf20 // \'C2\'FB\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'EF\'F0\'EE\'E8\'E7\'E2\'EE\'EB\'FC\'ED\'EE\'E3\'EE \'F0\'E0\'E7\'EC\'E5\'F0\'E0 \'EF\'E0\'EC\'FF\'F2\'E8 \'E8\'E7 \'EA\'F3\'F7\'E8 \'FF\'E4\'F0\'E0}\par
00075 {\cf18 void} *kheap_malloc(uint32_t size) \{\par
00076     kheap_item *new_item = NULL, *temp_item;\par
00077     uint32_t total_size;\par
00078 \par
00079     {\cf19 if} (size == 0) \{\par
00080         {\cf19 return} NULL;\par
00081     \}\par
00082 \par
00083     total_size = ((size + 7) & ~7) + {\cf17 sizeof}(kheap_item); {\cf20 // \'CE\'EA\'F0\'F3\'E3\'EB\'FF\'E5\'EC \'ED\'E0 8 \'E1\'E0\'E9\'F2 \'E8 \'E4\'EE\'E1\'E0\'E2\'EB\'FF\'E5\'EC \'F0\'E0\'E7\'EC\'E5\'F0 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EA\'E0}\par
00084 \par
00085     kheap_item *last_item;\par
00086     {\cf20 // \'C5\'F1\'EB\'E8 \'EA\'F3\'F7\'E0 \'F3\'E6\'E5 \'E5\'F1\'F2\'FC}\par
00087     {\cf19 if} (kheap_end != (virtual_addr_t)NULL) \{\par
00088         {\cf20 // \'CF\'EE\'E8\'F1\'EA \'EF\'E5\'F0\'E2\'EE\'E3\'EE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'E0}\par
00089         {\cf19 for} (new_item = (kheap_item*)kheap_begin; new_item != NULL; new_item = new_item->next) \{\par
00090             {\cf19 if} (new_item->next == NULL) \{\par
00091                 last_item = new_item;\par
00092             \}\par
00093             {\cf19 if} (!new_item->used && (total_size <= new_item->size)) \{\par
00094                 {\cf19 break};\par
00095             \}\par
00096         \}\par
00097     \}\par
00098 \par
00099     {\cf20 // \'C5\'F1\'EB\'E8 1 \'ED\'E0\'E9\'E4\'E5\'ED}\par
00100     {\cf19 if} (new_item != NULL) \{\par
00101         temp_item = (kheap_item*) ((uint32_t) new_item + total_size);\par
00102         temp_item->size = new_item->size - total_size;\par
00103         temp_item->used = 0;\par
00104         temp_item->next = new_item->next;\par
00105     \} {\cf19 else} \{\par
00106         {\cf20 // \'CD\'E5 \'ED\'E0\'F8\'E5\'EB \'EF\'EE\'E4\'F5\'EE\'E4\'FF\'F9\'E5\'E3\'EE, \'EF\'EE\'FD\'F2\'EE\'EC\'F3 \'EC\'FB \'E4\'EE\'EB\'E6\'ED\'FB \'F3\'E2\'E5\'EB\'E8\'F7\'E8\'F2\'FC \'EA\'F3\'F7\'F3, \'F7\'F2\'EE\'E1\'FB \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'EE\'E2\'E0\'F2\'FC}\par
00107         new_item = kheap_morecore(total_size);\par
00108         {\cf19 if} (new_item == NULL) \{\par
00109             {\cf20 // \'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'EC NULL \'E5\'F1\'EB\'E8 \'EF\'E0\'EC\'FF\'F2\'E8 \'ED\'E5\'E4\'EE\'F1\'F2\'E0\'F2\'EE\'F7\'ED\'EE}\par
00110             {\cf19 return} NULL;\par
00111         \}\par
00112 \par
00113         {\cf20 // \'D1\'EE\'E7\'E4\'E0\'E5\'EC \'EF\'F3\'F1\'F2\'EE\'E9 \'FD\'EB\'E5\'EC\'E5\'ED\'F2 \'E4\'EB\'FF \'E4\'EE\'EF\'EE\'EB\'ED\'E8\'F2\'E5\'EB\'FC\'ED\'EE\'E3\'EE \'EF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2\'E0 (\'D7\'E5\'F0\'E5\'E7 kheap_morecore).}\par
00114         {\cf20 // \'CC\'FB \'EC\'EE\'E6\'E5\'EC \'F0\'E0\'F1\'F1\'F7\'E8\'F2\'E0\'F2\'FC \'F0\'E0\'E7\'EC\'E5\'F0, \'EF\'EE\'F2\'EE\'EC\'F3 \'F7\'F2\'EE kheap_morecore \'E2\'FB\'E4\'E5\'EB\'FF\'E5\'F2 \'EF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2\'EE, \'E2\'FB\'F0\'EE\'E2\'ED\'E5\'ED\'ED\'EE\'E5 \'EF\'EE \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5.}\par
00115         temp_item = (kheap_item*) ((uint32_t) new_item + total_size);\par
00116         temp_item->size = PAGE_SIZE - (total_size % PAGE_SIZE \par
00117                                       ? total_size % PAGE_SIZE \par
00118                                       : total_size) - {\cf17 sizeof}(kheap_item);\par
00119         temp_item->used = 0;\par
00120         temp_item->next = NULL;\par
00121 \par
00122         last_item->next = new_item;\par
00123     \}\par
00124 \par
00125     {\cf20 // \'D1\'EE\'E7\'E4\'E0\'ED\'E8\'E5 \'ED\'EE\'E2\'EE\'E3\'EE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'E0}\par
00126     new_item->size = size;\par
00127     new_item->used = 1;\par
00128     new_item->next = temp_item;\par
00129 \par
00130     kheap_alloc_number++;\par
00131     kheap_memory_used += total_size;\par
00132 \par
00133     {\cf19 return} ({\cf18 void}*) ((uint32_t) new_item + (uint32_t) {\cf17 sizeof}(kheap_item)); {\cf20 // \'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'EC \'E2\'ED\'EE\'E2\'FC \'E2\'FB\'E4\'E5\'EB\'E5\'ED\'ED\'F3\'FE \'FF\'F7\'E5\'E9\'EA\'F3 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00134 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
paging.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/mem/paging.c}
{\xe \v kernel/src/mem/paging.c}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pmm.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/mem/pmm.c}
{\xe \v kernel/src/mem/pmm.c}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     \'C2\'E7\'FF\'F2\'EE \'E8\'E7 https://github.com/rgimad/EOS/tree/d3e2062fc909d8b15d8637950050281f051270d2}\par
00003 {\cf20     \'CF\'EE\'E4 \'EB\'E8\'F6\'E5\'ED\'E7\'E8\'E5\'E9 MIT license}\par
00004 {\cf20 */}\par
00005 \par
00006 \par
00007 {\cf21 #include <kernel.h>}\par
00008 \par
00009 \par
00010 uint32_t *phys_memory_bitmap = 0;\par
00011 uint32_t phys_block_count = 0;\par
00012 uint32_t phys_used_block_count = 0;\par
00013 \par
00014 uint32_t kernel_phys_map_start;\par
00015 uint32_t kernel_phys_map_end;\par
00016 \par
00017 uint64_t phys_installed_memory_size = 0, phys_available_memory_size = 0;\par
00018 \par
00019 {\cf20 // \'C4\'EB\'FF \'F0\'E0\'EC\'E4\'E8\'F1\'EA\'E0}\par
00020 uint64_t initrd_mmap_entry_addr = -1;\par
00021 uint32_t mmap_avail_entries_count = 0;\par
00022 multiboot_memory_map_entry mmap_avail_entries_array[100];\par
00023 \par
00024 \par
00025 {\cf17 inline} {\cf17 static} {\cf18 void} bitmap_set(int32_t bit) \{\par
00026     phys_memory_bitmap[bit / 32] |= (1 << (bit % 32));\par
00027 \}\par
00028 \par
00029 \par
00030 {\cf17 inline} {\cf17 static} {\cf18 void} bitmap_unset(int32_t bit) \{\par
00031     phys_memory_bitmap[bit / 32] &= ~(1 << (bit % 32));\par
00032 \}\par
00033 \par
00034 \par
00035 {\cf17 inline} {\cf17 static} {\cf18 bool} bitmap_test(int32_t bit) \{\par
00036     {\cf19 return} phys_memory_bitmap[bit / 32] & (1 << (bit % 32));\par
00037 \}\par
00038 \par
00039 uint64_t getInstalledRam()\{\par
00040     {\cf19 return} phys_installed_memory_size;\par
00041 \}\par
00042 \par
00043 uint64_t getAvailableRam()\{\par
00044     {\cf19 return} phys_available_memory_size;\par
00045 \}\par
00046 \par
00047 uint64_t getUsedRam()\{\par
00048     {\cf19 return} phys_installed_memory_size-phys_available_memory_size;\par
00049 \}\par
00050 \par
00051 \par
00052 {\cf18 void} pmm_parse_memory_map(multiboot_memory_map_entry *mmap_addr, uint32_t length) \{\par
00053     multiboot_memory_map_entry *mentry = 0; \par
00054 \par
00055     int32_t n = length / {\cf17 sizeof}(multiboot_memory_map_entry); {\cf20 // \'CA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'E7\'E0\'EF\'E8\'F1\'E5\'E9 \'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E5 \'EA\'E0\'F0\'F2\'FB \'EF\'E0\'EC\'FF\'F2\'E8}\par
00056 \par
00057     mentry = mmap_addr;                                      {\cf20 // \'D3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'ED\'E0 \'EA\'E0\'F0\'F2\'F3 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00058 \par
00059     {\cf19 for} (int32_t i = 0; i < n; i++) \{\par
00060         {\cf19 if} ((mentry + i)->type == 1) \{\par
00061             phys_available_memory_size += (mentry + i)->len;\par
00062         \}\par
00063         phys_installed_memory_size += (mentry + i)->len;\par
00064     \}\par
00065 \par
00066     \par
00067     tty_printf({\cf22 "Installed memory size: %d KB"}, phys_installed_memory_size / 1024);\par
00068     tty_printf({\cf22 " = %d MB\\n"}, phys_installed_memory_size / (1024 * 1024));\par
00069 \par
00070     tty_printf({\cf22 "Available memory size: %d KB"}, phys_available_memory_size / 1024);\par
00071     tty_printf({\cf22 " = %d MB\\n"}, phys_available_memory_size / (1024 * 1024));\par
00072     \par
00073     {\cf19 if} (phys_available_memory_size / 1024 < 4600) \{\par
00074         tty_setcolor(COLOR_ERROR);\par
00075         tty_printf({\cf22 "\\nWarning! Low memory! Using 0 mode.\\n"});\par
00076         os_mode = 1;\par
00077     \} {\cf19 else} {\cf19 if} (phys_available_memory_size / 1024 < 13000) \{\par
00078         tty_setcolor(VESA_LIGHT_GREEN);\par
00079         tty_printf({\cf22 "\\nStable. Using normal mode.\\n"});\par
00080         os_mode = 1;\par
00081     \} {\cf19 else} {\cf19 if} (phys_available_memory_size / 1024 >= 13000) \{\par
00082         tty_setcolor(VESA_LIGHT_MAGENTA);\par
00083         tty_printf({\cf22 "\\nHigh mem. Using server mode.\\n"});\par
00084         os_mode = 2;\par
00085     \} {\cf19 else} \{\par
00086         tty_setcolor(VESA_LIGHT_GREEN);\par
00087         tty_printf({\cf22 "\\nUnknown. Using normal mode.\\n"});\par
00088         os_mode = 1;\par
00089     \}\par
00090     tty_setcolor(COLOR_SYS_TEXT);\par
00091 \}\par
00092 \par
00093 \par
00094 int32_t pmm_find_free_block() \{\par
00095     {\cf19 for} (uint32_t i = 0; i < phys_block_count / 32; i++) \{\par
00096         uint32_t block = phys_memory_bitmap[i];\par
00097         {\cf19 if} (block != 0xFFFFFFFF) \{\par
00098             {\cf19 for} (uint8_t j = 0; j < 32; j++) \{\par
00099                 int32_t bit = 1 << j;\par
00100                 {\cf19 if} (!(bit & block)) \{\par
00101                     {\cf19 return} (32 * i) + j;\par
00102                 \}\par
00103             \}\par
00104         \}\par
00105     \}\par
00106     {\cf19 return} -1;\par
00107 \}\par
00108 \par
00109 int32_t pmm_find_free_blocks(uint32_t count) \{\par
00110     int32_t starting_block = -1;\par
00111     int32_t starting_block_bit = -1;\par
00112     uint32_t cur_block_num = 0;\par
00113 \par
00114     {\cf19 for} (uint32_t i = 0; i < phys_block_count / 32; i++) \{\par
00115         uint32_t cur_block = phys_memory_bitmap[i];\par
00116         {\cf19 if} (cur_block == 0xFFFFFFFF) \{\par
00117             cur_block_num = 0;\par
00118             {\cf19 continue};\par
00119         \}\par
00120 \par
00121         {\cf19 for} (uint8_t j = 0; j < 32; j++) \{\par
00122             int32_t bit = 1 << j;\par
00123             {\cf19 if} (bit & cur_block) \{ {\cf20 // \'C1\'E8\'F2 \'F3\'F1\'F2\'E0\'ED\'EE\'E2\'EB\'E5\'ED}\par
00124                 cur_block_num = 0;\par
00125                 {\cf19 continue};\par
00126             \}\par
00127 \par
00128             {\cf19 if} (!cur_block_num) \{\par
00129                 starting_block = i;\par
00130             \}\par
00131             {\cf19 if} (!cur_block_num) \{\par
00132                 starting_block_bit = j;\par
00133             \}\par
00134 \par
00135             cur_block_num += 1;\par
00136             {\cf19 if} (cur_block_num == count) \{\par
00137                 {\cf19 return} (32 * starting_block) + starting_block_bit;\par
00138             \}\par
00139         \}\par
00140     \}\par
00141     {\cf19 return} -1;\par
00142 \}\par
00143 \par
00144 {\cf20 // \'D4\'F3\'ED\'EA\'F6\'E8\'E8 \'E4\'EB\'FF \'F3\'EF\'F0\'E0\'E2\'EB\'E5\'ED\'E8\'FF \'EE\'E4\'ED\'E8\'EC \'E1\'EB\'EE\'EA\'EE\'EC \'E2 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00145 physical_addres_t pmm_alloc_block() \{\par
00146     {\cf19 if} (phys_block_count - phys_used_block_count <= 0) \{\par
00147         {\cf19 return} 0xFFFFFFFF;\par
00148     \}\par
00149 \par
00150     int32_t free_block = pmm_find_free_block();\par
00151     {\cf19 if} (free_block == -1) \{\par
00152         {\cf19 return} 0xFFFFFFFF;\par
00153     \}\par
00154 \par
00155     bitmap_set(free_block);\par
00156     uint32_t addr = free_block * PHYS_BLOCK_SIZE;\par
00157     phys_used_block_count++;\par
00158 \par
00159     {\cf19 return} addr;\par
00160 \}\par
00161 \par
00162 \par
00163 {\cf18 void} pmm_free_block(physical_addres_t addr) \{\par
00164     int32_t block = addr / PHYS_BLOCK_SIZE;\par
00165 \par
00166     bitmap_unset(block);\par
00167     phys_used_block_count--;\par
00168 \}\par
00169 \par
00170 \par
00171 {\cf18 bool} pmm_is_block_alloced(physical_addres_t addr) \{\par
00172     int32_t block = addr / PHYS_BLOCK_SIZE;\par
00173 \par
00174     {\cf19 return} bitmap_test(block);\par
00175 \}\par
00176 \par
00177 \par
00178 {\cf20 // \'D4\'F3\'ED\'EA\'F6\'E8\'E8 \'E4\'EB\'FF \'E2\'FB\'E4\'E5\'EB\'E5\'ED\'E8\'FF \'ED\'E5\'F1\'EA\'EE\'EB\'FC\'EA\'E8\'F5 \'E1\'EB\'EE\'EA\'EE\'E2 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00179 physical_addres_t pmm_alloc_blocks(uint32_t count) \{\par
00180     {\cf19 if} (phys_block_count - phys_used_block_count <= 0) \{\par
00181         {\cf19 return} 0xFFFFFFFF; \par
00182     \}\par
00183 \par
00184     int32_t free_block = pmm_find_free_blocks(count);\par
00185 \par
00186     {\cf19 if} (free_block == -1) \{\par
00187         {\cf19 return} 0xFFFFFFFF; \par
00188     \}\par
00189 \par
00190     {\cf19 for} (uint32_t i = 0; i < count; i++) \{\par
00191         bitmap_set(free_block + i);\par
00192     \}\par
00193 \par
00194     uint32_t addr = free_block * PHYS_BLOCK_SIZE;\par
00195     phys_used_block_count += count;\par
00196     {\cf19 return} addr;\par
00197 \}\par
00198 \par
00199 \par
00200 {\cf18 void} pmm_free_blocks(physical_addres_t addr, uint32_t count) \{\par
00201     int32_t block = addr / PHYS_BLOCK_SIZE;\par
00202 \par
00203     {\cf19 for} (uint32_t i = 0; i < count; i++) \{\par
00204         bitmap_unset(block + i);\par
00205     \}\par
00206     phys_used_block_count -= count;\par
00207 \}\par
00208 \par
00209 \par
00210 {\cf20 // \'C2\'ED\'F3\'F2\'F0\'E5\'ED\'ED\'E8\'E5 \'F4\'F3\'ED\'EA\'F6\'E8\'E8 \'E4\'EB\'FF \'E2\'FB\'E4\'E5\'EB\'E5\'ED\'E8\'FF \'E4\'E8\'E0\'EF\'E0\'E7\'EE\'ED\'EE\'E2 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00211 {\cf18 void} pmm_alloc_chunk(uint64_t base_addr, uint64_t length) \{\par
00212     int32_t cur_block_addr = base_addr / PHYS_BLOCK_SIZE;\par
00213     int32_t num_blocks = length / PHYS_BLOCK_SIZE;\par
00214 \par
00215     {\cf19 while} (num_blocks-- >= 0) \{\par
00216         bitmap_set(cur_block_addr++);\par
00217         phys_used_block_count--;\par
00218     \}\par
00219 \}\par
00220 \par
00221 \par
00222 {\cf18 void} pmm_free_chunk(uint64_t base_addr, uint64_t length) \{\par
00223     int32_t cur_block_addr = base_addr / PHYS_BLOCK_SIZE;\par
00224     int32_t num_blocks = length / PHYS_BLOCK_SIZE;\par
00225 \par
00226     {\cf19 while} (num_blocks--) \{\par
00227         bitmap_unset(cur_block_addr++);\par
00228         phys_used_block_count--;\par
00229     \}\par
00230 \}\par
00231 \par
00232 \par
00233 {\cf20 // \'D4\'F3\'ED\'EA\'F6\'E8\'E8 \'E4\'EB\'FF \'E8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'E8 \'E4\'E8\'F1\'EF\'E5\'F2\'F7\'E5\'F0\'E0 \'F4\'E8\'E7\'E8\'F7\'E5\'F1\'EA\'EE\'E9 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00234 {\cf18 void} pmm_free_available_memory({\cf17 struct} multiboot_info *mb) \{\par
00235     multiboot_memory_map_entry *mm = (multiboot_memory_map_entry*) mb->mmap_addr;\par
00236 \par
00237     while (({\cf18 unsigned} {\cf18 int}) mm < mb->mmap_addr + mb->mmap_length) \{\par
00238         {\cf19 if} (mm->type == 1) \{ \par
00239             {\cf19 if} (mm->addr != initrd_mmap_entry_addr) \{ \par
00240                 pmm_free_chunk(mm->addr, mm->len);\par
00241             \} {\cf19 else} \{\par
00242                 uint32_t initrd_beg = *(uint32_t*) (mb->mods_addr);\par
00243                 uint32_t initrd_end = *(uint32_t*) (mb->mods_addr + 4);\par
00244                 uint32_t initrd_size = initrd_end - initrd_end;\par
00245                 pmm_alloc_chunk(initrd_beg, initrd_size);\par
00246                 pmm_free_chunk(mm->addr, mm->len - initrd_size - 2);\par
00247             \}\par
00248         \}\par
00249         mm = (multiboot_memory_map_entry*) (({\cf18 unsigned} {\cf18 int}) mm + mm->size + {\cf17 sizeof}(mm->size));\par
00250     \}\par
00251     bitmap_set(0);\par
00252 \}\par
00253 \par
00254 {\cf18 void} pmm_relocate_initrd_to_high_mem({\cf17 struct} multiboot_info *mb) \{\par
00255     uint32_t initrd_beg = *(uint32_t*) (mb->mods_addr);\par
00256     uint32_t initrd_end = *(uint32_t*) (mb->mods_addr + 4);\par
00257     uint32_t initrd_size = initrd_end - initrd_beg;\par
00258 \par
00259     multiboot_memory_map_entry *mm = (multiboot_memory_map_entry*) mb->mmap_addr;\par
00260     mmap_avail_entries_count = 0;\par
00261 \par
00262     while (({\cf18 unsigned} {\cf18 int}) mm < mb->mmap_addr + mb->mmap_length) \{\par
00263         {\cf19 if} (mm->type == 1) \{ \par
00264             mmap_avail_entries_array[mmap_avail_entries_count] = *mm;\par
00265             mmap_avail_entries_count++;\par
00266         \}\par
00267         mm = (multiboot_memory_map_entry*) (({\cf18 unsigned} {\cf18 int}) mm + mm->size + {\cf17 sizeof}(mm->size));\par
00268     \}\par
00269 \par
00270     {\cf19 for} (int32_t i = mmap_avail_entries_count - 1; i >= 0; i--) \{\par
00271         {\cf19 if} (mmap_avail_entries_array[i].len >= initrd_size) \{\par
00272             initrd_mmap_entry_addr = mmap_avail_entries_array[i].addr;\par
00273             memcpy(\par
00274                 ({\cf18 void}*)(intptr_t)(\par
00275                     initrd_mmap_entry_addr + mmap_avail_entries_array[i].len - initrd_size - 1\par
00276                     ), \par
00277                 ({\cf18 void}*)initrd_beg, \par
00278                 ({\cf18 size_t})initrd_size\par
00279                 );\par
00280             initrd_beg = initrd_mmap_entry_addr + mmap_avail_entries_array[i].len - initrd_size - 1;\par
00281             initrd_end = initrd_beg + initrd_size;\par
00282             {\cf19 break};\par
00283         \}\par
00284     \}\par
00285 \par
00286     *(uint32_t*) (mb->mods_addr) = initrd_beg;\par
00287     *(uint32_t*) (mb->mods_addr + 4) = initrd_end;\par
00288 \}\par
00289 \par
00290 \par
00291 {\cf18 void} pmm_init({\cf17 struct} multiboot_info *mboot_info) \{\par
00292     multiboot_memory_map_entry *mmap = (multiboot_memory_map_entry*) mboot_info->mmap_addr;\par
00293     pmm_parse_memory_map(mmap, mboot_info->mmap_length);                        {\cf20 // \'CE\'ED \'F2\'E0\'EA\'E6\'E5 \'E2\'FB\'F7\'E8\'F1\'EB\'FF\'E5\'F2 phys_installed_memory_size}\par
00294 \par
00295     pmm_relocate_initrd_to_high_mem(mboot_info);\par
00296 \par
00297     phys_block_count = (phys_installed_memory_size) / PHYS_BLOCK_SIZE;          {\cf20 // \'D1\'EA\'EE\'EB\'FC\'EA\'EE \'E1\'EB\'EE\'EA\'EE\'E2 \'E1\'F3\'E4\'E5\'F2}\par
00298     phys_used_block_count = phys_block_count;                                   {\cf20 // \'C8\'E7\'ED\'E0\'F7\'E0\'EB\'FC\'ED\'EE \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'FE\'F2\'F1\'FF \'E2\'F1\'E5 \'E1\'EB\'EE\'EA\'E8}\par
00299     phys_memory_bitmap = (uint32_t*) KERNEL_END_PADDR;                          {\cf20 // \'C1\'E8\'F2\'EE\'E2\'E0\'FF \'EA\'E0\'F0\'F2\'E0 \'F4\'E8\'E7\'E8\'F7\'E5\'F1\'EA\'EE\'E9 \'EF\'E0\'EC\'FF\'F2\'E8 \'ED\'E0\'F7\'E8\'ED\'E0\'E5\'F2\'F1\'FF \'EF\'EE\'F1\'EB\'E5 \'FF\'E4\'F0\'E0}\par
00300     memset(phys_memory_bitmap, 0xFF, phys_block_count / PHYS_BLOCKS_PER_BYTE);  {\cf20 // \'C8\'E7\'ED\'E0\'F7\'E0\'EB\'FC\'ED\'EE \'EF\'EE\'EC\'E5\'F7\'E0\'E5\'EC \'E2\'F1\'FE \'F3\'F1\'F2\'E0\'ED\'EE\'E2\'EB\'E5\'ED\'ED\'F3\'FE \'EF\'E0\'EC\'FF\'F2\'FC \'EA\'E0\'EA \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'EC\'F3\'FE}\par
00301     pmm_free_available_memory(mboot_info);                                      {\cf20 // \'CE\'F1\'E2\'EE\'E1\'EE\'E6\'E4\'E0\'E5\'F2 \'EF\'E0\'EC\'FF\'F2\'FC, \'EA\'EE\'F2\'EE\'F0\'F3\'FE GRUB \'F1\'F7\'E8\'F2\'E0\'E5\'F2 \'E4\'EE\'F1\'F2\'F3\'EF\'ED\'EE\'E9}\par
00302     pmm_alloc_chunk(KERNEL_START_PADDR, KERNEL_SIZE);                           {\cf20 // \'C8\'E7 \'EE\'F1\'E2\'EE\'E1\'EE\'E6\'E4\'E5\'ED\'ED\'EE\'E9 \'EF\'E0\'EC\'FF\'F2\'E8 \'ED\'E0\'EC \'ED\'F3\'E6\'ED\'EE \'E2\'FB\'E4\'E5\'EB\'E8\'F2\'FC \'F2\'E5, \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'FE\'F2\'F1\'FF \'FF\'E4\'F0\'EE\'EC}\par
00303     \par
00304     pmm_alloc_chunk((uint64_t)(intptr_t)phys_memory_bitmap, phys_block_count);  {\cf20 // \'CD\'E0\'EC \'F2\'E0\'EA\'E6\'E5 \'ED\'E5\'EE\'E1\'F5\'EE\'E4\'E8\'EC\'EE \'E2\'FB\'E4\'E5\'EB\'E8\'F2\'FC \'EF\'E0\'EC\'FF\'F2\'FC, \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'EC\'F3\'FE \'F1\'E0\'EC\'EE\'E9 \'F4\'E8\'E7\'E8\'F7\'E5\'F1\'EA\'EE\'E9 \'EA\'E0\'F0\'F2\'EE\'E9.}\par
00305     kernel_phys_map_start = (uint32_t) phys_memory_bitmap;\par
00306     kernel_phys_map_end = kernel_phys_map_start + (phys_block_count / PHYS_BLOCKS_PER_BYTE);\par
00307     qemu_log({\cf22 "PMM installed"});\par
00308 \}\par
00309 \par
00310 \par
00311 {\cf18 void} update_phys_memory_bitmap_addres(physical_addres_t addr) \{\par
00312     phys_memory_bitmap = (uint32_t*) addr;\par
00313 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
vmm.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/mem/vmm.c}
{\xe \v kernel/src/mem/vmm.c}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     \'C2\'E7\'FF\'F2\'EE \'E8\'E7 https://github.com/rgimad/EOS/tree/d3e2062fc909d8b15d8637950050281f051270d2}\par
00003 {\cf20     \'CF\'EE\'E4 \'EB\'E8\'F6\'E5\'ED\'E7\'E8\'E5\'E9 MIT license}\par
00004 {\cf20 */}\par
00005 \par
00006 \par
00007 {\cf21 #include <kernel.h>}\par
00008 \par
00009 {\cf20 // Defone some address calculation macro}\par
00010 {\cf21 #define PAGEDIR_INDEX(vaddr) (((uint32_t)vaddr) >> 22)}\par
00011 {\cf21 #define PAGETBL_INDEX(vaddr) ((((uint32_t)vaddr) >>12) & 0x3ff)}\par
00012 {\cf21 #define PAGEFRAME_INDEX(vaddr) (((uint32_t)vaddr) & 0xfff)}\par
00013 \par
00014 page_directory *kernel_page_dir; {\cf20 // Pointer (physical) to kernel page dircetory structure}\par
00015 \par
00016 {\cf17 extern} {\cf18 void} enable_paging(physical_addres_t page);\par
00017 \par
00018 uint32_t kv2p({\cf18 void} *a) \{\par
00019     {\cf19 return} (uint32_t)a - 0xC0000000;\par
00020 \}\par
00021 \par
00022 {\cf18 void} * virtual2phys(page_directory * dir, {\cf18 void} * virtual_addr_t) \{\par
00023     uint32_t page_dir_idx = PAGEDIR_INDEX(virtual_addr_t), page_tbl_idx = PAGETBL_INDEX(virtual_addr_t), page_frame_offset = PAGEFRAME_INDEX(virtual_addr_t);\par
00024     {\cf19 if}(!dir->ref_tables[page_dir_idx]) \{\par
00025         qemu_log({\cf22 "virtual2phys: page dir entry %d does not exist\\n"}, page_tbl_idx);\par
00026         {\cf19 return} NULL;\par
00027     \}\par
00028     page_table * table = dir->ref_tables[page_dir_idx];\par
00029     {\cf19 if}(!table->entries[page_tbl_idx]) \{\par
00030         qemu_log({\cf22 "virtual2phys: page table entry %d does not exist\\n"}, page_tbl_idx);\par
00031         {\cf19 return} NULL;\par
00032     \}\par
00033     uint32_t t = table->entries[page_tbl_idx];\par
00034     t = (t << 12) + page_frame_offset;\par
00035     {\cf19 return} ({\cf18 void}*)t;\par
00036 \}\par
00037 \par
00038 {\cf18 bool} vmm_alloc_page(virtual_addr_t vaddr) \{\par
00039     physical_addres_t paddr = pmm_alloc_block();\par
00040     {\cf19 if} (!paddr) \{\par
00041         {\cf19 return} {\cf17 false};\par
00042     \}\par
00043 \par
00044     vmm_map_page(paddr, vaddr);\par
00045     {\cf19 return} {\cf17 true};\par
00046 \}\par
00047 \par
00048 \par
00049 {\cf18 bool} vmm_alloc_page_with_userbit(virtual_addr_t vaddr) \{\par
00050     physical_addres_t paddr = pmm_alloc_block();\par
00051 \par
00052     {\cf19 if} (!paddr) \{\par
00053         {\cf19 return} {\cf17 false};\par
00054     \}\par
00055 \par
00056     vmm_map_page(paddr, vaddr);\par
00057     page_table_entry *pte = GET_PTE(vaddr);\par
00058     page_table_entry_add_attrib(pte, I86_PTE_USER);\par
00059     {\cf19 return} {\cf17 true};\par
00060 \}\par
00061 \par
00062 \par
00063 {\cf18 void} vmm_free_page(virtual_addr_t vaddr) \{\par
00064     page_table_entry *pte = GET_PTE(vaddr);\par
00065 \par
00066     {\cf19 if} (!page_table_entry_is_present(*pte)) \{\par
00067         tty_printf({\cf22 "oh, you try to delete not present page\\n"});\par
00068         {\cf19 return};\par
00069     \}\par
00070 \par
00071     physical_addres_t block = page_table_entry_frame(*pte);\par
00072     {\cf19 if} (block) \{\par
00073         pmm_free_block(block);\par
00074     \}\par
00075     page_table_entry_del_attrib(pte, I86_PTE_PRESENT);\par
00076 \}\par
00077 \par
00078 \par
00079 {\cf18 void} vmm_create_kernel_page_dir() \{\par
00080     kernel_page_dir = (page_directory*) pmm_alloc_block();\par
00081 \par
00082     {\cf19 if} (kernel_page_dir == (page_directory*)0xFFFFFFFF) \{\par
00083         tty_printf({\cf22 "Failed to allocate phys memory for kernel page dir\\n"});\par
00084         {\cf19 return};\par
00085     \}\par
00086 \par
00087     page_directory *pd = kernel_page_dir;\par
00088     memset(pd, 0, {\cf17 sizeof}(page_directory));\par
00089 \par
00090     int32_t i;\par
00091     {\cf19 for} (i = 0; i < PAGE_ENTRIES; i++) \{\par
00092         page_dir_entry *pde = (page_dir_entry*) &pd->entries[i];\par
00093         page_dir_entry_add_attrib(pde, I86_PTE_WRITABLE);\par
00094         page_dir_entry_del_attrib(pde, I86_PTE_PRESENT);\par
00095 \par
00096         {\cf19 if} (i == PAGE_ENTRIES - 1) \{ {\cf20 // \'D2\'E5\'F5\'ED\'E8\'EA\'E0 \'F4\'F0\'E0\'EA\'F2\'E0\'EB\'FC\'ED\'EE\'E3\'EE (\'F0\'E5\'EA\'F3\'F0\'F1\'E8\'E2\'ED\'EE\'E3\'EE) \'EE\'F2\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF, \'EA\'EE\'F2\'EE\'F0\'E0\'FF \'EF\'EE\'E7\'E2\'EE\'EB\'FF\'E5\'F2 \'ED\'E0\'EC \'EF\'EE\'EB\'F3\'F7\'E8\'F2\'FC \'E4\'EE\'F1\'F2\'F3\'EF \'EA PD \'E8 PT}\par
00097             page_dir_entry_add_attrib(pde, I86_PTE_PRESENT);\par
00098             page_dir_entry_set_frame(pde, (physical_addres_t) kernel_page_dir);\par
00099         \}\par
00100     \}\par
00101 \}\par
00102 \par
00103 \par
00104 {\cf18 void} vmm_map_page(physical_addres_t paddr, virtual_addr_t vaddr) \{\par
00105     page_dir_entry *pde = GET_PDE(vaddr);\par
00106 \par
00107     {\cf19 if} (!page_dir_entry_is_present(*pde)) \{                         {\cf20 // \'C5\'F1\'EB\'E8 \'F2\'E0\'E1\'EB\'E8\'F6\'FB \'F1\'F2\'F0\'E0\'ED\'E8\'F6 \'ED\'E5\'F2, \'F1\'EE\'E7\'E4\'E0\'E9\'F2\'E5 \'E5\'E5}\par
00108         physical_addres_t pt_p = pmm_alloc_block();                   {\cf20 // \'DD\'F2\'EE \'D4\'C8\'C7\'C8\'D7\'C5\'D1\'CA\'C8\'C9 \'E0\'E4\'F0\'E5\'F1}\par
00109         {\cf19 if} (pt_p == 0xFFFFFFFF) \{\par
00110             tty_printf({\cf22 "No free phys memory. Minimum 3 mb\\n"});\par
00111             {\cf19 return};\par
00112         \}\par
00113 \par
00114         page_table *pt_v = (page_table*) vmm_temp_map_page(pt_p);   {\cf20 // \'CF\'EE\'F2\'EE\'EC\'F3 \'F7\'F2\'EE \'ED\'E0\'EC \'ED\'F3\'E6\'ED\'EE \'EF\'E8\'F1\'E0\'F2\'FC!}\par
00115         memset(pt_v, 0, {\cf17 sizeof}(page_table));\par
00116         page_dir_entry_add_attrib(pde, I86_PDE_PRESENT);\par
00117         page_dir_entry_add_attrib(pde, I86_PDE_WRITABLE);\par
00118         page_dir_entry_set_frame(pde, pt_p);\par
00119     \}\par
00120 \par
00121     page_table_entry *pte = GET_PTE(vaddr);\par
00122     page_table_entry_set_frame(pte, paddr);\par
00123     page_table_entry_add_attrib(pte, I86_PTE_PRESENT);\par
00124     page_table_entry_add_attrib(pte, I86_PTE_WRITABLE);\par
00125     flush_tlb_entry(vaddr);\par
00126 \}\par
00127 \par
00128 \par
00129 virtual_addr_t vmm_temp_map_page(physical_addres_t paddr) \{\par
00130     page_table_entry *pte = GET_PTE(TEMP_PAGE_ADDR);\par
00131 \par
00132     page_table_entry_set_frame(pte, PAGE_ALIGN_DOWN(paddr));\par
00133     page_table_entry_add_attrib(pte, I86_PTE_PRESENT);\par
00134     page_table_entry_add_attrib(pte, I86_PTE_WRITABLE);\par
00135 \par
00136     {\cf17 asm} {\cf17 volatile}({\cf22 "invlpg %0"} :: {\cf22 "m"} (*(uint32_t *) TEMP_PAGE_ADDR) : {\cf22 "memory"} );\par
00137 \par
00138     {\cf19 return} TEMP_PAGE_ADDR;\par
00139 \}\par
00140 \par
00141 \par
00142 {\cf20 // \'CF\'E5\'F0\'E5\'EA\'EB\'FE\'F7\'E8\'F2\'FC \'EA\'E0\'F2\'E0\'EB\'EE\'E3 \'F1\'F2\'F0\'E0\'ED\'E8\'F6, \'E2\'EE\'F1\'F1\'F2\'E0\'ED\'E0\'E2\'EB\'E8\'E2\'E0\'E5\'F2 \'F4\'E8\'E7\'E8\'F7\'E5\'F1\'EA\'E8\'E9 \'E0\'E4\'F0\'E5\'F1}\par
00143 {\cf18 void} vmm_switch_page_directory(page_directory *page_dir_phys_addr) \{\par
00144     {\cf17 asm} {\cf17 volatile}({\cf22 "mov %0, %%cr3"} :: {\cf22 "r"}((uint32_t) page_dir_phys_addr));\par
00145 \}\par
00146 \par
00147 \par
00148 {\cf18 void} vmm_init() \{\par
00149     vmm_create_kernel_page_dir();\par
00150 \par
00151     page_table *table1 = (page_table*) pmm_alloc_block();\par
00152     page_table *table2 = (page_table*) pmm_alloc_block();\par
00153 \par
00154     memset(({\cf18 void}*) table1, 0, {\cf17 sizeof}(page_table));      {\cf20 // \'CE\'F7\'E8\'F1\'F2\'E8\'F2\'FC \'E2\'FB\'E4\'E5\'EB\'E5\'ED\'ED\'FB\'E5 \'F2\'E0\'E1\'EB\'E8\'F6\'FB \'F1\'F2\'F0\'E0\'ED\'E8\'F6}\par
00155     memset(({\cf18 void}*) table2, 0, {\cf17 sizeof}(page_table));\par
00156 \par
00157     physical_addres_t frame;                              {\cf20 // \'D1\'EE\'EF\'EE\'F1\'F2\'E0\'E2\'EB\'FF\'E5\'F2 \'EF\'E5\'F0\'E2\'FB\'E9 \'CC\'C1 \'F1 3 \'C3\'C1}\par
00158     virtual_addr_t virt;\par
00159     {\cf19 for} (frame = 0x0, virt = 0xC0000000;\par
00160          frame < 0x100000;\par
00161          frame += PAGE_SIZE, virt += PAGE_SIZE) \{\par
00162         page_table_entry page = 0;\par
00163         page_table_entry_add_attrib(&page, I86_PTE_PRESENT);\par
00164         page_table_entry_set_frame(&page, frame);\par
00165         table1->entries[PAGE_TABLE_INDEX(virt)] = page;\par
00166     \}\par
00167 \par
00168     {\cf20 // \'D1\'EE\'EF\'EE\'F1\'F2\'E0\'E2\'EB\'FF\'E5\'F2 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'FB \'FF\'E4\'F0\'E0 \'E8 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'FB \'F4\'E8\'E7\'E8\'F7\'E5\'F1\'EA\'EE\'E9 \'EF\'E0\'EC\'FF\'F2\'E8}\par
00169     {\cf19 for} (frame = KERNEL_START_PADDR, virt = KERNEL_START_VADDR;\par
00170          frame < KERNEL_PHYS_MAP_END;\par
00171          frame += PAGE_SIZE, virt += PAGE_SIZE) \{\par
00172         page_table_entry page = 0;\par
00173         page_table_entry_add_attrib(&page, I86_PTE_PRESENT);\par
00174         page_table_entry_set_frame(&page, frame);\par
00175         table2->entries[PAGE_TABLE_INDEX(virt)] = page;\par
00176     \}\par
00177 \par
00178     page_dir_entry *pde1 = (page_dir_entry*) &kernel_page_dir->entries[PAGE_DIRECTORY_INDEX(0x00000000)];\par
00179     page_dir_entry_add_attrib(pde1, I86_PDE_PRESENT);\par
00180     page_dir_entry_add_attrib(pde1, I86_PDE_WRITABLE);\par
00181     page_dir_entry_set_frame(pde1, (physical_addres_t) table1);\par
00182 \par
00183     page_dir_entry **pde2 = (page_dir_entry**) &kernel_page_dir->entries[PAGE_DIRECTORY_INDEX(0xC0100000)];\par
00184     page_dir_entry_add_attrib((page_dir_entry*)pde2, I86_PDE_PRESENT);\par
00185     page_dir_entry_add_attrib((page_dir_entry*)pde2, I86_PDE_WRITABLE);\par
00186     page_dir_entry_set_frame((page_dir_entry*)pde2, (physical_addres_t) table2);\par
00187 \par
00188     update_phys_memory_bitmap_addres(KERNEL_END_VADDR);\par
00189 \par
00190     enable_paging((physical_addres_t) kernel_page_dir);\par
00191     qemu_log({\cf22 "VMM installed"});\par
00192 \}\par
00193 \par
00194 \par
00195 {\cf20 // Add attribute to pte}\par
00196 {\cf18 void} page_table_entry_add_attrib(page_table_entry *entry, uint32_t attrib) \{\par
00197     *entry |= attrib;\par
00198 \}\par
00199 \par
00200 \par
00201 {\cf20 // Delete attribute to pte}\par
00202 {\cf18 void} page_table_entry_del_attrib(page_table_entry *entry, uint32_t attrib) \{\par
00203     *entry &= ~attrib;\par
00204 \}\par
00205 \par
00206 \par
00207 {\cf20 // Map pte to physical frame}\par
00208 {\cf18 void} page_table_entry_set_frame(page_table_entry *entry, physical_addres_t addr) \{\par
00209     *entry = (*entry & ~I86_PTE_FRAME) | addr;\par
00210 \}\par
00211 \par
00212 \par
00213 {\cf18 bool} page_table_entry_is_present(page_table_entry entry) \{\par
00214     {\cf19 return} entry & I86_PTE_PRESENT;\par
00215 \}\par
00216 \par
00217 \par
00218 \par
00219 {\cf20 // Return the address of physical frame which pte refers to}\par
00220 physical_addres_t page_table_entry_frame(page_table_entry entry) \{\par
00221     {\cf19 return} entry & I86_PTE_FRAME;\par
00222 \}\par
00223 \par
00224 \par
00225 {\cf20 // Add attribute to pde}\par
00226 {\cf18 void} page_dir_entry_add_attrib(page_dir_entry *entry, uint32_t attrib) \{\par
00227     *entry |= attrib;\par
00228 \}\par
00229 \par
00230 \par
00231 {\cf20 // Delete attribute to pde}\par
00232 {\cf18 void} page_dir_entry_del_attrib(page_dir_entry *entry, uint32_t attrib) \{\par
00233     *entry &= ~attrib; {\cf20 //old: was without ~ !!}\par
00234 \}\par
00235 \par
00236 \par
00237 {\cf20 // Map pde to physical frame (where the appropriate page table stores)}\par
00238 {\cf18 void} page_dir_entry_set_frame(page_dir_entry *entry, physical_addres_t addr) \{\par
00239     *entry = (*entry & ~I86_PDE_FRAME) | addr;\par
00240 \}\par
00241 \par
00242 \par
00243 {\cf18 bool} page_dir_entry_is_present(page_dir_entry entry) \{\par
00244     {\cf19 return} entry & I86_PDE_PRESENT;\par
00245 \}\par
00246 \par
00247 \par
00248 {\cf18 void} flush_tlb_entry(virtual_addr_t addr) \{\par
00249     {\cf17 asm} {\cf17 volatile}({\cf22 "invlpg (%0)"} : : {\cf22 "b"}(addr) : {\cf22 "memory"});\par
00250 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cpuinfo.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/sys/cpuinfo.c}
{\xe \v kernel/src/sys/cpuinfo.c}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 {\cf18 char} brandAllName[128] = {\cf22 ""};\par
00003 {\cf18 int} detect_cpu({\cf18 bool} silent) \{\par
00004     brandAllName[128] = {\cf22 ""};\par
00005     {\cf18 unsigned} {\cf18 long} ebx, unused;\par
00006     cpuid(0, unused, ebx, unused, unused);\par
00007     {\cf19 switch} (ebx) \{\par
00008     {\cf19 case} 0x756e6547: {\cf20 /* Intel Magic Code */}\par
00009         {\cf20 //strcat(brandAllName,"Intel ");}\par
00010         do_intel(silent);\par
00011         {\cf19 break};\par
00012     {\cf19 case} 0x68747541: {\cf20 /* AMD Magic Code */}\par
00013         {\cf20 //strcat(brandAllName,"AMD ");}\par
00014         do_amd(silent);\par
00015         {\cf19 break};\par
00016     {\cf19 default}:\par
00017         strcat(brandAllName,{\cf22 "Unknown x86"});\par
00018         {\cf20 //tty_printf("Unknown x86 CPU Detected\\n");}\par
00019         {\cf19 break};\par
00020     \}\par
00021     {\cf19 if} (silent == 1)\{\par
00022         tty_printf({\cf22 "[CPU] Detect: %s\\n"},brandAllName);\par
00023     \}\par
00024     {\cf19 return} 0;\par
00025 \}\par
00026 \par
00027 {\cf18 char}* getNameBrand()\{\par
00028     {\cf19 return} brandAllName;\par
00029 \}\par
00030 \par
00031 {\cf20 /* Intel Specific brand list */}\par
00032 {\cf18 char} *Intel[] = \{\par
00033     {\cf22 "Brand ID Not Supported."},\par
00034     {\cf22 "Intel(R) Celeron(R) processor"},\par
00035     {\cf22 "Intel(R) Pentium(R) III processor"},\par
00036     {\cf22 "Intel(R) Pentium(R) III Xeon(R) processor"},\par
00037     {\cf22 "Intel(R) Pentium(R) III processor"},\par
00038     {\cf22 "Reserved"},\par
00039     {\cf22 "Mobile Intel(R) Pentium(R) III processor-M"},\par
00040     {\cf22 "Mobile Intel(R) Celeron(R) processor"},\par
00041     {\cf22 "Intel(R) Pentium(R) 4 processor"},\par
00042     {\cf22 "Intel(R) Pentium(R) 4 processor"},\par
00043     {\cf22 "Intel(R) Celeron(R) processor"},\par
00044     {\cf22 "Intel(R) Xeon(R) Processor"},\par
00045     {\cf22 "Intel(R) Xeon(R) processor MP"},\par
00046     {\cf22 "Reserved"},\par
00047     {\cf22 "Mobile Intel(R) Pentium(R) 4 processor-M"},\par
00048     {\cf22 "Mobile Intel(R) Pentium(R) Celeron(R) processor"},\par
00049     {\cf22 "Reserved"},\par
00050     {\cf22 "Mobile Genuine Intel(R) processor"},\par
00051     {\cf22 "Intel(R) Celeron(R) M processor"},\par
00052     {\cf22 "Mobile Intel(R) Celeron(R) processor"},\par
00053     {\cf22 "Intel(R) Celeron(R) processor"},\par
00054     {\cf22 "Mobile Geniune Intel(R) processor"},\par
00055     {\cf22 "Intel(R) Pentium(R) M processor"},\par
00056     {\cf22 "Mobile Intel(R) Celeron(R) processor"}\par
00057 \};\par
00058 \par
00059 {\cf20 /* This table is for those brand strings that have two values depending on the processor signature. It should have the same number of entries as the above table. */}\par
00060 {\cf18 char} *Intel_Other[] = \{\par
00061     {\cf22 "Reserved"},\par
00062     {\cf22 "Reserved"},\par
00063     {\cf22 "Reserved"},\par
00064     {\cf22 "Intel(R) Celeron(R) processor"},\par
00065     {\cf22 "Reserved"},\par
00066     {\cf22 "Reserved"},\par
00067     {\cf22 "Reserved"},\par
00068     {\cf22 "Reserved"},\par
00069     {\cf22 "Reserved"},\par
00070     {\cf22 "Reserved"},\par
00071     {\cf22 "Reserved"},\par
00072     {\cf22 "Intel(R) Xeon(R) processor MP"},\par
00073     {\cf22 "Reserved"},\par
00074     {\cf22 "Reserved"},\par
00075     {\cf22 "Intel(R) Xeon(R) processor"},\par
00076     {\cf22 "Reserved"},\par
00077     {\cf22 "Reserved"},\par
00078     {\cf22 "Reserved"},\par
00079     {\cf22 "Reserved"},\par
00080     {\cf22 "Reserved"},\par
00081     {\cf22 "Reserved"},\par
00082     {\cf22 "Reserved"},\par
00083     {\cf22 "Reserved"},\par
00084     {\cf22 "Reserved"}\par
00085 \};\par
00086 \par
00087 {\cf20 /* Intel-specific information */}\par
00088 {\cf18 int} do_intel({\cf18 bool} silent) \{\par
00089     {\cf19 if} (silent == 0)\{\par
00090         tty_printf({\cf22 "Detected Intel CPU.\\nIntel-specific features:\\n"});\par
00091     \}\par
00092     {\cf18 unsigned} {\cf18 long} eax, ebx, ecx, edx, max_eax, signature, unused;\par
00093     {\cf18 int} model, family, type, brand, stepping, reserved;\par
00094     {\cf18 int} extended_family = -1;\par
00095     cpuid(1, eax, ebx, unused, unused);\par
00096     model = (eax >> 4) & 0xf;\par
00097     family = (eax >> 8) & 0xf;\par
00098     type = (eax >> 12) & 0x3;\par
00099     brand = ebx & 0xff;\par
00100     stepping = eax & 0xf;\par
00101     reserved = eax >> 14;\par
00102     signature = eax;\par
00103     {\cf19 if} (silent == 0)\{\par
00104         tty_printf({\cf22 "Type %d - "}, type);\par
00105         {\cf19 switch} (type) \{\par
00106         {\cf19 case} 0:\par
00107             tty_printf({\cf22 "Original OEM"});\par
00108             {\cf19 break};\par
00109         {\cf19 case} 1:\par
00110             tty_printf({\cf22 "Overdrive"});\par
00111             {\cf19 break};\par
00112         {\cf19 case} 2:\par
00113             tty_printf({\cf22 "Dual-capable"});\par
00114             {\cf19 break};\par
00115         {\cf19 case} 3:\par
00116             tty_printf({\cf22 "Reserved"});\par
00117             {\cf19 break};\par
00118         \}\par
00119 \par
00120         tty_printf({\cf22 "\\n"});\par
00121 \par
00122         tty_printf({\cf22 "Family %d - "}, family);\par
00123         {\cf19 switch} (family) \{\par
00124         {\cf19 case} 3:\par
00125             tty_printf({\cf22 "i386"});\par
00126             {\cf19 break};\par
00127         {\cf19 case} 4:\par
00128             tty_printf({\cf22 "i486"});\par
00129             {\cf19 break};\par
00130         {\cf19 case} 5:\par
00131             tty_printf({\cf22 "Pentium"});\par
00132             {\cf19 break};\par
00133         {\cf19 case} 6:\par
00134             tty_printf({\cf22 "Pentium Pro"});\par
00135             {\cf19 break};\par
00136         {\cf19 case} 15:\par
00137             tty_printf({\cf22 "Pentium 4"});\par
00138         \}\par
00139 \par
00140         tty_printf({\cf22 "\\n"});\par
00141 \par
00142         {\cf19 if} (family == 15) \{\par
00143             extended_family = (eax >> 20) & 0xff;\par
00144             tty_printf({\cf22 "Extended family %d\\n"}, extended_family);\par
00145         \}\par
00146         tty_printf({\cf22 "Model %d - "}, model);\par
00147 \par
00148         {\cf19 switch} (family) \{\par
00149         {\cf19 case} 3:\par
00150             {\cf19 break};\par
00151         {\cf19 case} 4:\par
00152             {\cf19 switch} (model) \{\par
00153             {\cf19 case} 0:\par
00154             {\cf19 case} 1:\par
00155                 tty_printf({\cf22 "DX"});\par
00156                 {\cf19 break};\par
00157             {\cf19 case} 2:\par
00158                 tty_printf({\cf22 "SX"});\par
00159                 {\cf19 break};\par
00160             {\cf19 case} 3:\par
00161                 tty_printf({\cf22 "487/DX2"});\par
00162                 {\cf19 break};\par
00163             {\cf19 case} 4:\par
00164                 tty_printf({\cf22 "SL"});\par
00165                 {\cf19 break};\par
00166             {\cf19 case} 5:\par
00167                 tty_printf({\cf22 "SX2"});\par
00168                 {\cf19 break};\par
00169             {\cf19 case} 7:\par
00170                 tty_printf({\cf22 "Write-back enhanced DX2"});\par
00171                 {\cf19 break};\par
00172             {\cf19 case} 8:\par
00173                 tty_printf({\cf22 "DX4"});\par
00174                 {\cf19 break};\par
00175             \}\par
00176             {\cf19 break};\par
00177         {\cf19 case} 5:\par
00178             {\cf19 switch} (model) \{\par
00179             {\cf19 case} 1:\par
00180                 tty_printf({\cf22 "60/66"});\par
00181                 {\cf19 break};\par
00182             {\cf19 case} 2:\par
00183                 tty_printf({\cf22 "75-200"});\par
00184                 {\cf19 break};\par
00185             {\cf19 case} 3:\par
00186                 tty_printf({\cf22 "for 486 system"});\par
00187                 {\cf19 break};\par
00188             {\cf19 case} 4:\par
00189                 tty_printf({\cf22 "MMX"});\par
00190                 {\cf19 break};\par
00191             \}\par
00192             {\cf19 break};\par
00193         {\cf19 case} 6:\par
00194             {\cf19 switch} (model) \{\par
00195             {\cf19 case} 1:\par
00196                 tty_printf({\cf22 "Pentium Pro"});\par
00197                 {\cf19 break};\par
00198             {\cf19 case} 3:\par
00199                 tty_printf({\cf22 "Pentium II Model 3"});\par
00200                 {\cf19 break};\par
00201             {\cf19 case} 5:\par
00202                 tty_printf({\cf22 "Pentium II Model 5/Xeon/Celeron"});\par
00203                 {\cf19 break};\par
00204             {\cf19 case} 6:\par
00205                 tty_printf({\cf22 "Celeron"});\par
00206                 {\cf19 break};\par
00207             {\cf19 case} 7:\par
00208                 tty_printf({\cf22 "Pentium III/Pentium III Xeon - external L2 cache"});\par
00209                 {\cf19 break};\par
00210             {\cf19 case} 8:\par
00211                 tty_printf({\cf22 "Pentium III/Pentium III Xeon - internal L2 cache"});\par
00212                 {\cf19 break};\par
00213             \}\par
00214             {\cf19 break};\par
00215         {\cf19 case} 15:\par
00216             {\cf19 break};\par
00217         \}\par
00218 \par
00219         tty_printf({\cf22 "\\n"});\par
00220     \}\par
00221     cpuid(0x80000000, max_eax, unused, unused, unused);\par
00222 \par
00223     {\cf20 /* Quok said: If the max extended eax value is high enough to support the processor brand string}\par
00224 {\cf20     (values 0x80000002 to 0x80000004), then we'll use that information to return the brand information.}\par
00225 {\cf20     Otherwise, we'll refer back to the brand tables above for backwards compatibility with older processors.}\par
00226 {\cf20     According to the Sept. 2006 Intel Arch Software Developer's Guide, if extended eax values are supported,}\par
00227 {\cf20     then all 3 values for the processor brand string are supported, but we'll test just to make sure and be safe. */}\par
00228 \par
00229     {\cf19 if} (max_eax >= 0x80000004) \{\par
00230         {\cf19 if} (silent == 0)\{\par
00231             tty_printf({\cf22 "Brand: "});\par
00232             tty_printf({\cf22 "%s\\n"},brandAllName);\par
00233         \}\par
00234         {\cf19 if} (max_eax >= 0x80000002) \{\par
00235             cpuid(0x80000002, eax, ebx, ecx, edx);\par
00236             (printregs(eax, ebx, ecx, edx));\par
00237         \}\par
00238         {\cf19 if} (max_eax >= 0x80000003) \{\par
00239             cpuid(0x80000003, eax, ebx, ecx, edx);\par
00240             (printregs(eax, ebx, ecx, edx));\par
00241         \}\par
00242         {\cf19 if} (max_eax >= 0x80000004) \{\par
00243             cpuid(0x80000004, eax, ebx, ecx, edx);\par
00244             (printregs(eax, ebx, ecx, edx));\par
00245         \}\par
00246         {\cf19 if} (silent == 0)\{\par
00247             tty_printf({\cf22 "\\n"});\par
00248         \}\par
00249     \} {\cf19 else} {\cf19 if} (brand > 0 && silent == 0) \{\par
00250         tty_printf({\cf22 "Brand %d - "}, brand);\par
00251         {\cf19 if} (brand < 0x18) \{\par
00252             {\cf19 if} (signature == 0x000006B1 || signature == 0x00000F13) \{\par
00253                 tty_printf({\cf22 "%s\\n"}, Intel_Other[brand]);\par
00254             \} {\cf19 else} \{\par
00255                 tty_printf({\cf22 "%s\\n"}, Intel[brand]);\par
00256             \}\par
00257         \} {\cf19 else} \{\par
00258             tty_printf({\cf22 "Reserved\\n"});\par
00259         \}\par
00260     \}\par
00261     {\cf19 if} (silent == 0)\{\par
00262         tty_printf({\cf22 "Stepping: %d Reserved: %d\\n"}, stepping, reserved);\par
00263     \}\par
00264     {\cf19 return} 0;\par
00265 \}\par
00266 \par
00267 {\cf20 /* Print Registers */}\par
00268 {\cf18 char}* printregs({\cf18 int} eax, {\cf18 int} ebx, {\cf18 int} ecx, {\cf18 int} edx) \{\par
00269     {\cf18 int} j;\par
00270     {\cf18 char} {\cf18 string}[17];\par
00271     {\cf18 string}[16] = {\cf23 '\\0'};\par
00272     {\cf19 for} (j = 0; j < 4; j++) \{\par
00273         {\cf18 string}[j] = eax >> (8 * j);\par
00274         {\cf18 string}[j + 4] = ebx >> (8 * j);\par
00275         {\cf18 string}[j + 8] = ecx >> (8 * j);\par
00276         {\cf18 string}[j + 12] = edx >> (8 * j);\par
00277     \}\par
00278     {\cf20 //tty_printf("%s",string);}\par
00279     strcat(brandAllName,{\cf18 string});\par
00280     {\cf19 return} string;\par
00281 \}\par
00282 \par
00283 {\cf20 /* AMD-specific information */}\par
00284 {\cf18 int} do_amd({\cf18 bool} silent) \{\par
00285     {\cf19 if} (silent == 0)\{\par
00286         tty_printf({\cf22 "Detected AMD CPU. \\nAMD-specific features:\\n"});\par
00287     \}\par
00288     {\cf18 unsigned} {\cf18 long} extended, eax, ebx, ecx, edx, unused;\par
00289     {\cf18 int} family, model, stepping, reserved;\par
00290     cpuid(1, eax, unused, unused, unused);\par
00291 \par
00292     model = (eax >> 4) & 0xf;\par
00293     family = (eax >> 8) & 0xf;\par
00294     stepping = eax & 0xf;\par
00295     reserved = eax >> 12;\par
00296     {\cf19 if} (silent == 0)\{\par
00297         tty_printf({\cf22 "Family: %d Model: %d ["}, family, model);\par
00298         {\cf19 switch} (family) \{\par
00299         {\cf19 case} 4:\par
00300             tty_printf({\cf22 "486 Model %d"}, model);\par
00301             {\cf19 break};\par
00302         {\cf19 case} 5:\par
00303             {\cf19 switch} (model) \{\par
00304             {\cf19 case} 0:\par
00305             {\cf19 case} 1:\par
00306             {\cf19 case} 2:\par
00307             {\cf19 case} 3:\par
00308             {\cf19 case} 6:\par
00309             {\cf19 case} 7:\par
00310                 tty_printf({\cf22 "K6 Model %d"}, model);\par
00311                 {\cf19 break};\par
00312             {\cf19 case} 8:\par
00313                 tty_printf({\cf22 "K6-2 Model 8"});\par
00314                 {\cf19 break};\par
00315             {\cf19 case} 9:\par
00316                 tty_printf({\cf22 "K6-III Model 9"});\par
00317                 {\cf19 break};\par
00318             {\cf19 default}:\par
00319                 tty_printf({\cf22 "K5/K6 Model %d"}, model);\par
00320                 {\cf19 break};\par
00321             \}\par
00322             {\cf19 break};\par
00323         {\cf19 case} 6:\par
00324             {\cf19 switch} (model) \{\par
00325             {\cf19 case} 1:\par
00326             {\cf19 case} 2:\par
00327             {\cf19 case} 4:\par
00328                 tty_printf({\cf22 "Athlon Model %d"}, model);\par
00329                 {\cf19 break};\par
00330             {\cf19 case} 3:\par
00331                 tty_printf({\cf22 "Duron Model 3"});\par
00332                 {\cf19 break};\par
00333             {\cf19 case} 6:\par
00334                 tty_printf({\cf22 "Athlon MP/Mobile Athlon Model 6"});\par
00335                 {\cf19 break};\par
00336             {\cf19 case} 7:\par
00337                 tty_printf({\cf22 "Mobile Duron Model 7"});\par
00338                 {\cf19 break};\par
00339             {\cf19 default}:\par
00340                 tty_printf({\cf22 "Duron/Athlon Model %d"}, model);\par
00341                 {\cf19 break};\par
00342             \}\par
00343             {\cf19 break};\par
00344         \}\par
00345 \par
00346         tty_printf({\cf22 "]\\n"});\par
00347     \}\par
00348     cpuid(0x80000000, extended, unused, unused, unused);\par
00349     {\cf19 if} (extended == 0) \{\par
00350         {\cf19 return} 0;\par
00351     \}\par
00352     {\cf19 if} (extended >= 0x80000002) \{\par
00353         {\cf18 unsigned} {\cf18 int} j;\par
00354         {\cf19 if} (silent == 0)\{\par
00355             tty_printf({\cf22 "Detected Processor Name: "});\par
00356         \}\par
00357         {\cf19 for} (j = 0x80000002; j <= 0x80000004; j++) \{\par
00358             cpuid(j, eax, ebx, ecx, edx);\par
00359             {\cf19 if} (silent == 0)\{\par
00360                 tty_printf(printregs(eax, ebx, ecx, edx));\par
00361             \}\par
00362         \}\par
00363         {\cf19 if} (silent == 0)\{\par
00364             tty_printf({\cf22 "\\n"});\par
00365         \}\par
00366     \}\par
00367     {\cf19 if} (extended >= 0x80000007) \{\par
00368         cpuid(0x80000007, unused, unused, unused, edx);\par
00369         {\cf19 if} (edx & 1 && silent == 0) \{\par
00370             tty_printf({\cf22 "Temperature Sensing Diode Detected!\\n"});\par
00371         \}\par
00372     \}\par
00373     {\cf19 if} (silent == 0)\{\par
00374         tty_printf({\cf22 "Stepping: %d Reserved: %d\\n"}, stepping, reserved);\par
00375     \}\par
00376     {\cf19 return} 0;\par
00377 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
elf.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/sys/elf.c}
{\xe \v kernel/src/sys/elf.c}
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     \'C2\'E7\'FF\'F2\'EE \'E8\'E7 https://github.com/rgimad/EOS/tree/d3e2062fc909d8b15d8637950050281f051270d2}\par
00003 {\cf20     \'CF\'EE\'E4 \'EB\'E8\'F6\'E5\'ED\'E7\'E8\'E5\'E9 MIT license}\par
00004 {\cf20 */}\par
00005 \par
00006 \par
00007 {\cf21 #include <kernel.h>}\par
00008 \par
00009 \par
00010 {\cf20 // Returns 0 if header is valid, 1 if magic number invalid, 2 and more if file isn't compatible}\par
00011 uint8_t elf_check_header({\cf17 struct} elf_hdr *hdr) \{\par
00012     {\cf19 if} (hdr->mag_num[0] != 0x7f || \par
00013         hdr->mag_num[1] != {\cf23 'E'} || \par
00014         hdr->mag_num[2] != {\cf23 'L'} || \par
00015         hdr->mag_num[3] != {\cf23 'F'}) \{\par
00016         {\cf19 return} 1; {\cf20 // Our magic number isn't valid}\par
00017     \}\par
00018     {\cf19 if} (hdr->arch != ELF_ARCH_32BIT) \{\par
00019         {\cf19 return} 2; {\cf20 // This ELF file can't be loaded because it's not 32-bit}\par
00020     \}\par
00021     {\cf19 if} (hdr->byte_order != ELF_BYTEORDER_LENDIAN) \{\par
00022         {\cf19 return} 3; {\cf20 // This ELF file can't be loaded because it's not little-endian}\par
00023     \}\par
00024     {\cf19 if} (hdr->elf_ver != 1) \{\par
00025         {\cf19 return} 4; {\cf20 // This ELF file can't be loaded because its version isn't 1}\par
00026     \}\par
00027     {\cf19 if} (hdr->file_type != ELF_REL && hdr->file_type != ELF_EXEC) \{\par
00028         {\cf19 return} 5; {\cf20 // This ELF file can't be loaded because it's neither executable nor relocatable file}\par
00029     \}\par
00030     {\cf19 if} (hdr->machine!=ELF_386_MACHINE) \{\par
00031         {\cf19 return} 6; {\cf20 // This ELF file can't be loaded because it's not for i386 platform}\par
00032     \}\par
00033     {\cf19 return} 0;\par
00034 \}\par
00035 \par
00036 \par
00037 {\cf18 void} *elf_open({\cf17 const} {\cf18 char} *fname) \{ {\cf20 // Returns pointer to ELF file.}\par
00038     {\cf19 if} (!vfs_exists(fname)) \{\par
00039         tty_printf({\cf22 "elf_open: elf [%s] does not exist"}, fname);\par
00040         qemu_log({\cf22 "elf_open: elf [%s] does not exist"}, fname);\par
00041         {\cf19 return} 0;\par
00042     \}\par
00043 \par
00044     uint32_t fsize = vfs_get_size(fname);\par
00045     {\cf18 void} *addr = kheap_malloc(fsize);\par
00046     int32_t res = vfs_read(fname, 0, fsize, addr);\par
00047     \par
00048     qemu_log({\cf22 "elf_open res = %d"}, res);\par
00049 \par
00050     {\cf17 struct }elf_hdr *hdr = addr;\par
00051 \par
00052 \par
00053     {\cf19 return} hdr;\par
00054 \}\par
00055 \par
00056 \par
00057 elf_section_header_t *elf_get_section_header({\cf18 void} *elf_file, int32_t num) \{\par
00058     {\cf17 struct }elf_hdr *hdr = ({\cf17 struct }elf_hdr*) elf_file;\par
00059     {\cf19 return} (elf_section_header_t *) (elf_file + hdr->shoff + hdr->sh_ent_size*num);\par
00060 \}\par
00061 \par
00062 \par
00063 elf_program_header_t *elf_get_program_header({\cf18 void} *elf_file, int32_t num) \{\par
00064     {\cf17 struct }elf_hdr *hdr = ({\cf17 struct }elf_hdr*) elf_file;\par
00065     {\cf19 return} (elf_program_header_t*) (elf_file + hdr->phoff + hdr->ph_ent_size*num);\par
00066 \}\par
00067 \par
00068 \par
00069 {\cf17 const} {\cf18 char} *elf_get_section_name({\cf18 void} *elf_file, int32_t num) \{\par
00070     {\cf17 struct }elf_hdr *hdr = ({\cf17 struct }elf_hdr*) elf_file;\par
00071     {\cf19 return} (hdr->sh_name_index == SH_UNDEF) \par
00072            ? {\cf22 "no section"} \par
00073            : ({\cf17 const} {\cf18 char}*) elf_file \par
00074              + elf_get_section_header(elf_file, hdr->sh_name_index)->offset \par
00075              + elf_get_section_header(elf_file, num)->name;\par
00076 \}\par
00077 \par
00078 \par
00079 {\cf18 void} elf_hdr_info({\cf17 struct} elf_hdr *hdr) \{\par
00080     qemu_log({\cf22 "\\tHeader information:"});\par
00081     qemu_log({\cf22 "\\t Architecture: %s"}, (hdr->arch==ELF_ARCH_32BIT) \par
00082                                          ? {\cf22 "32-bit"} \par
00083                                          : (hdr->arch == ELF_ARCH_64BIT) \par
00084                                            ? {\cf22 "64-bit"} \par
00085                                            : {\cf22 "Unknown architecture"});\par
00086     qemu_log({\cf22 "\\t Byte order: %s"}, (hdr->byte_order == ELF_BYTEORDER_LENDIAN) \par
00087                                        ? {\cf22 "little-endian"} \par
00088                                        : {\cf22 "unknown"});\par
00089     qemu_log({\cf22 "\\t ELF file version: %u"}, hdr->elf_ver);\par
00090     qemu_log({\cf22 "\\t ELF file type: %s"}, (hdr->file_type == ELF_REL) \par
00091                                           ? {\cf22 "relocatable"} \par
00092                                           : (hdr->file_type == ELF_EXEC) \par
00093                                             ? {\cf22 "executable"} \par
00094                                             : {\cf22 "unknown"});\par
00095     qemu_log({\cf22 "\\t Target machine: %s"}, (hdr->machine == ELF_386_MACHINE) \par
00096                                            ? {\cf22 "i386"} \par
00097                                            : {\cf22 "unknown"});\par
00098     qemu_log({\cf22 "\\t Entry point: %x"}, hdr->entry);\par
00099     qemu_log({\cf22 "\\t Program header offset: %u"}, hdr->phoff);\par
00100     qemu_log({\cf22 "\\t Section header offset: %u"}, hdr->shoff);\par
00101     qemu_log({\cf22 "\\t File flags: %u"}, hdr->flags);\par
00102     qemu_log({\cf22 "\\t File header size: %u"}, hdr->hsize);\par
00103     qemu_log({\cf22 "\\t Program header entry size: %u"}, hdr->ph_ent_size);\par
00104     qemu_log({\cf22 "\\t Section header entry size: %u"}, hdr->sh_ent_size);\par
00105     qemu_log({\cf22 "\\t Section header count: %d"}, hdr->sh_ent_cnt);\par
00106     qemu_log({\cf22 "\\t Program header count: %d"}, hdr->ph_ent_cnt);\par
00107     tty_printf({\cf22 "\\tHeader information:\\n"});\par
00108     tty_printf({\cf22 "\\t Architecture: %s\\n"}, (hdr->arch==ELF_ARCH_32BIT) \par
00109                                          ? {\cf22 "32-bit"} \par
00110                                          : (hdr->arch == ELF_ARCH_64BIT) \par
00111                                            ? {\cf22 "64-bit"} \par
00112                                            : {\cf22 "Unknown architecture"});\par
00113     tty_printf({\cf22 "\\t Byte order: %s\\n"}, (hdr->byte_order == ELF_BYTEORDER_LENDIAN) \par
00114                                        ? {\cf22 "little-endian"} \par
00115                                        : {\cf22 "unknown"});\par
00116     tty_printf({\cf22 "\\t ELF file version: %u\\n"}, hdr->elf_ver);\par
00117     tty_printf({\cf22 "\\t ELF file type: %s\\n"}, (hdr->file_type == ELF_REL) \par
00118                                           ? {\cf22 "relocatable"} \par
00119                                           : (hdr->file_type == ELF_EXEC) \par
00120                                             ? {\cf22 "executable"} \par
00121                                             : {\cf22 "unknown"});\par
00122     tty_printf({\cf22 "\\t Target machine: %s\\n"}, (hdr->machine == ELF_386_MACHINE) \par
00123                                            ? {\cf22 "i386"} \par
00124                                            : {\cf22 "unknown"});\par
00125     tty_printf({\cf22 "\\t Entry point: %x\\n"}, hdr->entry);\par
00126     tty_printf({\cf22 "\\t Program header offset: %u\\n"}, hdr->phoff);\par
00127     tty_printf({\cf22 "\\t Section header offset: %u\\n"}, hdr->shoff);\par
00128     tty_printf({\cf22 "\\t File flags: %u\\n"}, hdr->flags);\par
00129     tty_printf({\cf22 "\\t File header size: %u\\n"}, hdr->hsize);\par
00130     tty_printf({\cf22 "\\t Program header entry size: %u\\n"}, hdr->ph_ent_size);\par
00131     tty_printf({\cf22 "\\t Section header entry size: %u\\n"}, hdr->sh_ent_size);\par
00132     tty_printf({\cf22 "\\t Section header count: %d\\n"}, hdr->sh_ent_cnt);\par
00133     tty_printf({\cf22 "\\t Program header count: %d\\n"}, hdr->ph_ent_cnt);\par
00134 \}\par
00135 \par
00136 \par
00137 \par
00138 {\cf18 void} elf_info({\cf17 const} {\cf18 char} *name) \{\par
00139     {\cf19 if} (!vfs_exists(name)) \{\par
00140         tty_printf({\cf22 "\\nelf_info: elf [%s] does not exist\\n"}, name);\par
00141         qemu_log({\cf22 "elf_info: elf [%s] does not exist"}, name);\par
00142         {\cf19 return};\par
00143     \}\par
00144     {\cf18 void} *elf_file = elf_open(name);\par
00145     tty_printf({\cf22 "pointer to this elf_file = %x\\n"}, elf_file);\par
00146     qemu_log({\cf22 "pointer to this elf_file = %x"}, elf_file);\par
00147     {\cf19 if} (elf_file == NULL) \{\par
00148         {\cf19 return};\par
00149     \}\par
00150 \par
00151     {\cf17 struct }elf_hdr *hdr = ({\cf17 struct }elf_hdr*) elf_file;\par
00152     tty_printf({\cf22 "\\tName: %s\\n"}, name);\par
00153     qemu_log({\cf22 "\\tName: %s"}, name);\par
00154     tty_printf({\cf22 "\\tFile size: %u\\n\\tELF file info:\\n"}, vfs_get_size(name));\par
00155     qemu_log({\cf22 "\\tFile size: %u\\n\\tELF file info:"}, vfs_get_size(name));\par
00156     elf_hdr_info(hdr);\par
00157 \par
00158     int32_t i;\par
00159     {\cf19 for} (i = 0; i < hdr->sh_ent_cnt; i++) \{\par
00160         elf_section_header_t *shdr = (elf_section_header_t*) (elf_file + hdr->shoff + hdr->sh_ent_size * i);\par
00161         tty_printf({\cf22 "\\t  Section %d:\\n"}, i);\par
00162         qemu_log({\cf22 "\\t  Section %d:"}, i);\par
00163         tty_printf({\cf22 "\\t   Actual section offset: %u\\t   Section name offset in string table: %d\\n"}, shdr->offset, shdr->name);\par
00164         qemu_log({\cf22 "\\t   Actual section offset: %u\\t   Section name offset in string table: %d\\n"}, shdr->offset, shdr->name);\par
00165         tty_printf({\cf22 "\\t   Section name: %s\\n"}, elf_get_section_name(elf_file, i));\par
00166         qemu_log({\cf22 "\\t   Section name: %s"}, elf_get_section_name(elf_file, i));\par
00167     \}\par
00168 \par
00169     {\cf20 //kheap_free(elf_file); //!!!!!!}\par
00170 \}\par
00171 \par
00172 \par
00173 \par
00174 int32_t run_elf_file({\cf17 const} {\cf18 char} *name{\cf20 /*, char **argv, char **env __attribute__((unused)), int32_t argc*/}) \{\par
00175     {\cf19 if} (!vfs_exists(name)) \{\par
00176         tty_printf({\cf22 "\\nrun_elf_file: elf [%s] does not exist\\n"}, name);\par
00177         qemu_log({\cf22 "run_elf_file: elf [%s] does not exist"}, name);\par
00178         {\cf19 return} 0;\par
00179     \}\par
00180     {\cf18 void} *elf_file = elf_open(name);\par
00181     {\cf19 if} (elf_file == NULL) \{\par
00182         {\cf19 return} -1;\par
00183     \}\par
00184 \par
00185     {\cf17 struct }elf_hdr *hdr = ({\cf17 struct }elf_hdr*) elf_file;\par
00186 \par
00187     qemu_log({\cf22 "loading segments:"});\par
00188     uint32_t vmm_alloced[4096] = \{0\};\par
00189     int32_t ptr_vmm_alloced = 0;\par
00190 \par
00191     {\cf19 for} (int32_t i = 0; i < hdr->ph_ent_cnt; i++) \{\par
00192         {\cf20 //printf("Segment [%i/%i]: ", i, hdr->ph_ent_cnt);}\par
00193         elf_program_header_t *phdr = elf_get_program_header(elf_file, i);\par
00194         {\cf19 if} (phdr->type != SEGTYPE_LOAD) \{\par
00195             {\cf19 continue}; {\cf20 // We only can load segments to the memory, so just skip it.}\par
00196         \}\par
00197 \par
00198         qemu_log({\cf22 "Loading %x bytes to %x"}, phdr->size_in_mem, phdr->load_to);\par
00199 \par
00200         {\cf20 // Alloc needed amount of pages}\par
00201         uint32_t alloc_addr;\par
00202         {\cf19 for} (alloc_addr = phdr->load_to;\par
00203             alloc_addr < phdr->load_to + phdr->size_in_mem;\par
00204             alloc_addr += PAGE_SIZE) \{\par
00205             vmm_alloced[ptr_vmm_alloced] = alloc_addr;\par
00206             ptr_vmm_alloced++;\par
00207             qemu_log({\cf22 "Alloc %d: %x"}, ptr_vmm_alloced, alloc_addr);\par
00208             vmm_alloc_page(alloc_addr);\par
00209         \}\par
00210 \par
00211         memset(({\cf18 void}*) phdr->load_to, 0, phdr->size_in_mem); {\cf20 // Null segment memory}\par
00212         memcpy(({\cf18 void}*) phdr->load_to, elf_file + phdr->data_offset, phdr->size_in_file);\par
00213         qemu_log({\cf22 "Loaded"});\par
00214     \}\par
00215 \par
00216     int(*entry_point)() = ({\cf18 void}*) (hdr->entry);\par
00217     qemu_log({\cf22 "ELF entry point: %x"}, hdr->entry);\par
00218 \par
00219     qemu_log({\cf22 "Executing"});\par
00220     {\cf18 int} _result = entry_point();\par
00221     \par
00222     tty_printf({\cf22 "\\n[PROGRAMM FINISHED WITH CODE <%d>]"}, _result);\par
00223     qemu_log({\cf22 "[PROGRAMM FINISHED WITH CODE <%d>]"}, _result);\par
00224     qemu_log({\cf22 "Cleaning VMM:"});\par
00225 \par
00226     {\cf19 for} (int32_t i = 0; i != ptr_vmm_alloced; i++)\{\par
00227         qemu_log({\cf22 "\\tCleaning %d: %x"}, i, vmm_alloced[i]);\par
00228         vmm_free_page(vmm_alloced[i]);\par
00229     \}\par
00230     qemu_log({\cf22 "[CLEANED <%d> PAGES]"}, ptr_vmm_alloced);\par
00231 \par
00232     {\cf19 return} 0;\par
00233 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gdt.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/sys/gdt.c}
{\xe \v kernel/src/sys/gdt.c}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 {\cf20 // Defines a GDT entry}\par
00004 {\cf17 struct }gdt_entry \{\par
00005     uint16_t limit_low;\par
00006     uint16_t base_low;\par
00007     uint8_t base_middle;\par
00008     uint8_t access;\par
00009     uint8_t granularity;\par
00010     uint8_t base_high;\par
00011 \} __attribute__((packed));\par
00012 \par
00013 {\cf20 // Special pointer which includes the limit: The max bytes}\par
00014 {\cf20 // taken up by the GDT, minus 1}\par
00015 {\cf17 struct }gdt_ptr \{\par
00016     uint16_t limit;\par
00017     uint32_t base;\par
00018 \} __attribute__((packed));\par
00019 \par
00020 {\cf20 // Our GDT, with 6 entries, and finally our special GDT pointer}\par
00021 {\cf17 struct }gdt_entry gdt[GDT_MAX_DESCRIPTORS];\par
00022 {\cf17 struct }gdt_ptr gp;\par
00023 \par
00024 {\cf20 // Function arch/i386/gdt.S, loads GDT from the pointeer of a gdt_ptr}\par
00025 {\cf17 extern} {\cf18 void} gdt_flush({\cf17 struct} gdt_ptr *gdt_ptr_addr);\par
00026 \par
00027 {\cf20 // Setup a descriptor in the Global Descriptor Table}\par
00028 {\cf18 void} gdt_set_gate(int32_t num, uint32_t base, uint32_t limit, uint8_t access,\par
00029                   uint8_t gran) \{\par
00030     {\cf20 // Setup the descriptor base address}\par
00031     gdt[num].base_low = (base & 0xFFFF);\par
00032     gdt[num].base_middle = (base >> 16) & 0xFF;\par
00033     gdt[num].base_high = (base >> 24) & 0xFF;\par
00034 \par
00035     {\cf20 // Setup the descriptor limits}\par
00036     gdt[num].limit_low = (limit & 0xFFFF);\par
00037     gdt[num].granularity = ((limit >> 16) & 0x0F);\par
00038 \par
00039     {\cf20 // Finally, set up the granularity and access flags}\par
00040     gdt[num].granularity |= (gran & 0xF0);\par
00041     gdt[num].access = access;\par
00042 \}\par
00043 \par
00044 {\cf20 // Should be called by the kernal on initializaiton. This will setup the}\par
00045 {\cf20 // special GDT pointer, set up the first 3 entries in our GDT, and then}\par
00046 {\cf20 // finally call gdt_flush() in our assembler file in order to tell the}\par
00047 {\cf20 // processor where the new GDT is and update the new segment registers}\par
00048 {\cf18 void} gdt_init() \{\par
00049     {\cf20 // Setup the GDT pointer and limit}\par
00050     gp.limit = ({\cf17 sizeof}({\cf17 struct }gdt_entry) * GDT_MAX_DESCRIPTORS) - 1;\par
00051     gp.base = (uint32_t) &gdt;\par
00052 \par
00053     {\cf20 // Our NULL descriptor, required}\par
00054     gdt_set_gate(0, 0, 0, 0, 0);\par
00055     {\cf20 /* Kernel code, access(9A = 1 00 1 1 0 1 0)}\par
00056 {\cf20         1   present}\par
00057 {\cf20         00  ring 0}\par
00058 {\cf20         1   always 1}\par
00059 {\cf20         1   code segment}\par
00060 {\cf20         0   can be executed by ring lower or equal to DPL,}\par
00061 {\cf20         1   code segment is readable}\par
00062 {\cf20         0   access bit, always 0, cpu set this to 1 when accessing this sector}\par
00063 {\cf20     */}\par
00064     gdt_set_gate(1, 0, 0xFFFFFFFF, 0x9A, 0xCF); {\cf20 // Kernel code segment}\par
00065     {\cf20 /* Kernel data, access(92 = 1 00 1 0 0 1 0)}\par
00066 {\cf20         Only differ at the fifth bit(counting from least insignificant bit), 0 means it's a data segment.}\par
00067 {\cf20     */}\par
00068     gdt_set_gate(2, 0, 0xFFFFFFFF, 0x92, 0xCF); {\cf20 // Kernel data segment}\par
00069     {\cf20 // User code and data segments respectively, only differ from pervious in ring number(ring 3)}\par
00070     gdt_set_gate(3, 0, 0xFFFFFFFF, 0xFA, 0xCF); {\cf20 // added 27.02.20}\par
00071     gdt_set_gate(4, 0, 0xFFFFFFFF, 0xF2, 0xCF); {\cf20 // added 27.02.20}\par
00072     {\cf20 // Flush out the old GDT and install the new changes!}\par
00073     gdt_flush(&gp);\par
00074 \par
00075     {\cf20 // Initialize TSS}\par
00076     tss_init(5, 0x10, 0);\par
00077     tss_flush();\par
00078 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
idt.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/sys/idt.c}
{\xe \v kernel/src/sys/idt.c}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 idt_entry_t idt[IDT_NUM_ENTRIES];\par
00005 idt_ptr_t idtp;\par
00006 \par
00007 {\cf17 extern} {\cf18 void} idt_load({\cf17 struct} idt_ptr *idt_ptr_addr);\par
00008 \par
00009 \par
00010 {\cf18 void} pic_send_eoi(uint8_t irq) \{\par
00011     {\cf19 if}(irq >= 8)\par
00012         outb(PIC_SLAVE_CMD, PIC_CMD_EOI);\par
00013     outb(PIC_MASTER_CMD, PIC_CMD_EOI);\par
00014 \}\par
00015 \par
00016 \par
00017 {\cf20 /* ISRs */}\par
00018 DECLARE_INTERRUPT_HANDLER(0);\par
00019 DECLARE_INTERRUPT_HANDLER(1);\par
00020 DECLARE_INTERRUPT_HANDLER(2);\par
00021 DECLARE_INTERRUPT_HANDLER(3);\par
00022 DECLARE_INTERRUPT_HANDLER(4);\par
00023 DECLARE_INTERRUPT_HANDLER(5);\par
00024 DECLARE_INTERRUPT_HANDLER(6);\par
00025 DECLARE_INTERRUPT_HANDLER(7);\par
00026 DECLARE_INTERRUPT_HANDLER(8);\par
00027 DECLARE_INTERRUPT_HANDLER(9);\par
00028 DECLARE_INTERRUPT_HANDLER(10);\par
00029 DECLARE_INTERRUPT_HANDLER(11);\par
00030 DECLARE_INTERRUPT_HANDLER(12);\par
00031 DECLARE_INTERRUPT_HANDLER(13);\par
00032 DECLARE_INTERRUPT_HANDLER(14);\par
00033 DECLARE_INTERRUPT_HANDLER(15);\par
00034 DECLARE_INTERRUPT_HANDLER(16);\par
00035 DECLARE_INTERRUPT_HANDLER(17);\par
00036 DECLARE_INTERRUPT_HANDLER(18);\par
00037 DECLARE_INTERRUPT_HANDLER(19);\par
00038 \par
00039 DECLARE_INTERRUPT_HANDLER(20);\par
00040 DECLARE_INTERRUPT_HANDLER(21);\par
00041 DECLARE_INTERRUPT_HANDLER(22);\par
00042 DECLARE_INTERRUPT_HANDLER(23);\par
00043 DECLARE_INTERRUPT_HANDLER(24);\par
00044 DECLARE_INTERRUPT_HANDLER(25);\par
00045 DECLARE_INTERRUPT_HANDLER(26);\par
00046 DECLARE_INTERRUPT_HANDLER(27);\par
00047 DECLARE_INTERRUPT_HANDLER(28);\par
00048 DECLARE_INTERRUPT_HANDLER(29);\par
00049 DECLARE_INTERRUPT_HANDLER(30);\par
00050 DECLARE_INTERRUPT_HANDLER(31);\par
00051 \par
00052 {\cf20 /* IRQs */}\par
00053 DECLARE_INTERRUPT_HANDLER(32);\par
00054 DECLARE_INTERRUPT_HANDLER(33);\par
00055 DECLARE_INTERRUPT_HANDLER(34);\par
00056 DECLARE_INTERRUPT_HANDLER(35);\par
00057 DECLARE_INTERRUPT_HANDLER(36);\par
00058 DECLARE_INTERRUPT_HANDLER(37);\par
00059 DECLARE_INTERRUPT_HANDLER(38);\par
00060 DECLARE_INTERRUPT_HANDLER(39);\par
00061 DECLARE_INTERRUPT_HANDLER(40);\par
00062 DECLARE_INTERRUPT_HANDLER(41);\par
00063 DECLARE_INTERRUPT_HANDLER(42);\par
00064 DECLARE_INTERRUPT_HANDLER(43);\par
00065 DECLARE_INTERRUPT_HANDLER(44);\par
00066 DECLARE_INTERRUPT_HANDLER(45);\par
00067 DECLARE_INTERRUPT_HANDLER(46);\par
00068 DECLARE_INTERRUPT_HANDLER(47);\par
00069 \par
00070 DECLARE_INTERRUPT_HANDLER(128);{\cf20 //for syscalls}\par
00071 \par
00072 \par
00073 {\cf18 void} set_idt_entry(uint8_t num, uint64_t handler, uint16_t sel, uint8_t flags) \{\par
00074     idt[num].handler_lo = handler & 0xFFFF;\par
00075     idt[num].handler_hi = (handler >> 16) & 0xFFFF;\par
00076     idt[num].always0 = 0;\par
00077     idt[num].flags = flags;\par
00078     idt[num].sel = sel;\par
00079 \}\par
00080 \par
00081 \par
00082 {\cf18 void} IRQ_set_mask({\cf18 unsigned} {\cf18 char} IRQline) \{\par
00083     uint16_t port;\par
00084     uint8_t value;\par
00085 \par
00086     {\cf19 if} (IRQline < 8) \{\par
00087         port = PIC1_DATA;\par
00088     \} {\cf19 else} \{\par
00089         port = PIC2_DATA;\par
00090         IRQline -= 8;\par
00091     \}\par
00092 \par
00093     value = inb(port) | (1 << IRQline);\par
00094     outb(port, value);\par
00095 \}\par
00096 \par
00097 \par
00098 {\cf18 void} IRQ_clear_mask({\cf18 unsigned} {\cf18 char} IRQline) \{\par
00099     uint16_t port;\par
00100     uint8_t value;\par
00101 \par
00102     {\cf19 if} (IRQline < 8) \{\par
00103         port = PIC1_DATA;\par
00104     \} {\cf19 else} \{\par
00105         port = PIC2_DATA;\par
00106         IRQline -= 8;\par
00107     \}\par
00108 \par
00109     value = inb(port) & ~(1 << IRQline);\par
00110     {\cf20 // tty_printf("value = %x\\n", value);}\par
00111     outb(port, value);\par
00112 \}\par
00113 \par
00114 \par
00115 \par
00116 {\cf18 void} pic_disable_all_irq({\cf18 void}) \{\par
00117     outb(PIC1_DATA, 0xff);\par
00118     outb(PIC2_DATA, 0xff);\par
00119 \}\par
00120 \par
00121 {\cf18 void} pic_init({\cf18 void}) \{\par
00122     {\cf20 /* Send ICW1 to both PIC chips */}\par
00123     outb(PIC1_COMMAND, ICW1_INIT | ICW1_CALLADDR_4 | ICW1_ICW4_NEEDED);\par
00124     outb(PIC2_COMMAND, ICW1_INIT | ICW1_CALLADDR_4 | ICW1_ICW4_NEEDED);\par
00125 \par
00126     {\cf20 /* Determine the offset */}\par
00127     outb(PIC1_DATA, 32);\par
00128     outb(PIC2_DATA, 40);\par
00129 \par
00130     {\cf20 /* Configure active/passive device cascade */}\par
00131     outb(PIC1_DATA, 4);\par
00132     outb(PIC2_DATA, 2);\par
00133 \par
00134     {\cf20 /* Set operation mode - 8086 mode on*/}\par
00135     outb(PIC1_DATA, 1);\par
00136     outb(PIC2_DATA, 1);\par
00137 \par
00138     {\cf20 /* mask (disable) all PIC interrupts */}\par
00139     pic_disable_all_irq();\par
00140 \par
00141     qemu_log({\cf22 "PIC installed"});\par
00142 \}\par
00143 \par
00144 \par
00145 {\cf20 // Installs the IDT}\par
00146 {\cf18 void} idt_init() \{\par
00147     outb(0x21,0xfd);\par
00148     outb(0xa1,0xff);\par
00149     pic_init();\par
00150 \par
00151     {\cf20 // Sets the special IDT pointer up}\par
00152     idtp.limit = ({\cf17 sizeof}({\cf17 struct }idt_entry) * IDT_NUM_ENTRIES) - 1;\par
00153     idtp.base = (uint32_t) &idt;\par
00154 \par
00155     {\cf20 //tty_printf("ib  dtp.base = %x, idtp.limit = %x\\n", idtp.base, idtp.limit); //!!!!}\par
00156 \par
00157     {\cf20 // Clear out the entire IDT, initializing it to zeros}\par
00158     memset(&idt, 0, {\cf17 sizeof}({\cf17 struct} idt_entry) * IDT_NUM_ENTRIES);\par
00159 \par
00160     idt_load(&idtp);\par
00161 \par
00162     int32_t i;\par
00163     {\cf19 for} (i = 0; i < IDT_NUM_ENTRIES; i++) \{\par
00164         idt[i].handler_lo = 0;\par
00165         idt[i].handler_hi = 0;\par
00166         idt[i].always0 = 0;\par
00167         idt[i].flags = 0;\par
00168         idt[i].sel = 0;\par
00169     \}\par
00170 \par
00171     SET_IDT_ENTRY(0);\par
00172     SET_IDT_ENTRY(1);\par
00173     SET_IDT_ENTRY(2);\par
00174     SET_IDT_ENTRY(3);\par
00175     SET_IDT_ENTRY(4);\par
00176     SET_IDT_ENTRY(5);\par
00177     SET_IDT_ENTRY(6);\par
00178     SET_IDT_ENTRY(7);\par
00179     SET_IDT_ENTRY(8);\par
00180     SET_IDT_ENTRY(9);\par
00181     SET_IDT_ENTRY(10);\par
00182     SET_IDT_ENTRY(11);\par
00183     SET_IDT_ENTRY(12);\par
00184     SET_IDT_ENTRY(13);\par
00185     SET_IDT_ENTRY(14);\par
00186     SET_IDT_ENTRY(15);\par
00187     SET_IDT_ENTRY(16);\par
00188     SET_IDT_ENTRY(17);\par
00189     SET_IDT_ENTRY(18);\par
00190     SET_IDT_ENTRY(19);\par
00191     SET_IDT_ENTRY(20);\par
00192     SET_IDT_ENTRY(21);\par
00193     SET_IDT_ENTRY(22);\par
00194     SET_IDT_ENTRY(23);\par
00195     SET_IDT_ENTRY(24);\par
00196     SET_IDT_ENTRY(25);\par
00197     SET_IDT_ENTRY(26);\par
00198     SET_IDT_ENTRY(27);\par
00199     SET_IDT_ENTRY(28);\par
00200     SET_IDT_ENTRY(29);\par
00201     SET_IDT_ENTRY(30);\par
00202     SET_IDT_ENTRY(31);\par
00203 \par
00204     SET_IDT_ENTRY(32);\par
00205 \par
00206     SET_IDT_ENTRY(33);\par
00207     SET_IDT_ENTRY(44);\par
00208     SET_IDT_ENTRY(47);\par
00209 \par
00210 \par
00211     SET_IDT_ENTRY(128); {\cf20 // Need for system calls - int32_t 0x80 , 0x80 = 128 }\par
00212 \par
00213     {\cf17 asm} {\cf17 volatile}({\cf22 "sti"});\par
00214 \}\par
00215 \par
00216 \par
00217 \par
00218 \par
00219 \par
00220 {\cf17 static} interrupt_handler_t interrupt_handlers[IDT_NUM_ENTRIES];\par
00221 \par
00222 int32_t register_interrupt_handler(uint32_t idt_index, interrupt_handler_t handler) \{\par
00223     {\cf19 if} (idt_index >= IDT_NUM_ENTRIES) \{\par
00224         {\cf19 return} 0;\par
00225     \}\par
00226 \par
00227     {\cf19 if} (interrupt_handlers[idt_index] != NULL) \{\par
00228         {\cf19 return} 0;\par
00229     \}\par
00230 \par
00231     interrupt_handlers[idt_index] = handler;\par
00232     {\cf19 return} 1;\par
00233 \}\par
00234 \par
00235 \par
00236 {\cf17 static} {\cf17 const} {\cf18 char} *exception_strs[] = \{\par
00237         {\cf20 //  Intel 64 Manual Volume 2 - Table 6-1 -> Exceptions and Interrupts}\par
00238         {\cf22 "#DE: Integer Divide-by-Zero Exception"},\par
00239         {\cf22 "#DB: Debug exception"},\par
00240         {\cf22 "Non-maskable interrupt"},\par
00241         {\cf22 "#BP: Breakpoint Exception (INT 3)"},\par
00242         {\cf22 "#OF: Overflow Exception (INTO instruction)"},\par
00243         {\cf22 "#BR: Bound-Range Exception (BOUND instruction)"},\par
00244         {\cf22 "#UD: Invalid opcode exception"},\par
00245         {\cf22 "#NM: Device-Not-Available Exception"},\par
00246         {\cf22 "#DF: Double-Fault Exception"},\par
00247         {\cf22 "Coprocessor segment overrun (reserved in AMD64)"},\par
00248         {\cf22 "#TS: Invalid-TSS Exception"},\par
00249         {\cf22 "#NP: Segment-Not-Present Exception"},\par
00250         {\cf22 "#SS: Stack exception"},\par
00251         {\cf22 "#GP: General-Protection exception"},\par
00252         {\cf22 "#PF: Page-Fault exception"},\par
00253         {\cf22 "(Reserved)"},\par
00254         {\cf22 "#MF: x87 FPU Floating-Point error"},\par
00255         {\cf22 "#AC: Alignment-Check exception"},\par
00256         {\cf22 "#MC: Machine-Check exception"},\par
00257         {\cf22 "#XM: SIMD Floating-Point exception"},\par
00258         {\cf22 "#VE: Virtualisation Exception"},\par
00259         {\cf22 "#CP: Control-Protection Exception"}\par
00260 \};\par
00261 \par
00262 \par
00263 {\cf18 void} fault_handler({\cf17 struct} regs *r) \{\par
00264     multi_task = {\cf17 false};\par
00265     uint32_t adr;\par
00266     {\cf17 asm} {\cf17 volatile}({\cf22 "movl %%cr2, %0"} : {\cf22 "=r"} (adr));\par
00267 \par
00268     qemu_log({\cf22 "!!!\\t\\tError: %s"}, exception_strs[r->idt_index]);\par
00269     qemu_log({\cf22 "cr2 = %x  r->idt_index = %x eax = %x  ebx = %x"} \\\par
00270                 {\cf22 "  ecx = %x  edx = %x  esp = %x  ebp = %x  eip = %x"}, \par
00271         adr, r->idt_index, r->eax, r->ebx, \par
00272         r->ecx, r->edx, r->esp, r->ebp, r->eip);\par
00273     qemu_log({\cf22 "cr2 = %d  r->idt_index = %d eax = %d  ebx = %d"} \\\par
00274         {\cf22 "  ecx = %d  edx = %d  esp = %d  ebp = %d  eip = %d"}, \par
00275         adr, r->idt_index, r->eax, r->ebx, \par
00276         r->ecx, r->edx, r->esp, r->ebp, r->eip);\par
00277 \par
00278     tty_printf({\cf22 "\\n\\t\\tError: %s"}, exception_strs[r->idt_index]);\par
00279 \par
00280     tty_printf({\cf22 "\\n\\t\\tSystem Exception. System Halted!\\n"}    \\\par
00281         {\cf22 "\\tcr2 = %x  r->idt_index = %x eax = %x  ebx = %x\\n"} \\\par
00282         {\cf22 "\\tecx = %x  edx = %x  esp = %x  ebp = %x  eip = %x\\n"}, \par
00283         adr, r->idt_index, r->eax, r->ebx, \par
00284         r->ecx, r->edx, r->esp, r->ebp, r->eip);\par
00285     tty_printf(\par
00286         {\cf22 "\\tcr2 = %d  r->idt_index = %d eax = %d  ebx = %d\\n"} \\\par
00287         {\cf22 "\\tecx = %d  edx = %d  esp = %d  ebp = %d  eip = %d\\n"}, \par
00288         adr, r->idt_index, r->eax, r->ebx, \par
00289         r->ecx, r->edx, r->esp, r->ebp, r->eip);\par
00290     \par
00291     {\cf19 while}(1)\{\par
00292         {\cf17 asm} {\cf17 volatile}({\cf22 "hlt"});\par
00293     \}\par
00294 \}\par
00295 \par
00296 {\cf18 void} irq_handler({\cf17 struct} regs *r) \{\par
00297     {\cf20 // Blank function pointer}\par
00298     void (*handler)({\cf17 struct }regs *r);\par
00299 \par
00300     {\cf20 // If there's a custom handler to handle the IRQ, handle it}\par
00301     handler = interrupt_handlers[r->idt_index];\par
00302     {\cf19 if} (handler) \{\par
00303         handler(r);\par
00304     \}\par
00305 \par
00306     {\cf20 // If the IDT entry that was invoked was greater than 40, sends an EOI}\par
00307     {\cf20 // to the slave controller}\par
00308     {\cf19 if} (r->idt_index >= 40) \{\par
00309         outb(0xA0, 0x20);\par
00310     \}\par
00311 \par
00312     {\cf20 // Sends an EOI to the master interrupt controller}\par
00313     outb(0x20, 0x20);\par
00314 \}\par
00315 \par
00316 {\cf18 void} run_interrupt_handler({\cf17 struct} regs* r) \{\par
00317     {\cf18 size_t} idt_index = r->idt_index;\par
00318     {\cf19 if} (idt_index < 32) \{\par
00319         fault_handler(r);\par
00320         {\cf19 return};\par
00321     \}\par
00322 \par
00323     {\cf19 if} (idt_index >= 32 && idt_index <= 47) \{\par
00324         irq_handler(r);\par
00325         {\cf19 return};\par
00326     \}\par
00327 \par
00328     {\cf19 if} (interrupt_handlers[r->idt_index] != NULL) \{\par
00329         interrupt_handlers[r->idt_index](r);\par
00330     \}\par
00331 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sea.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/sys/sea.c}
{\xe \v kernel/src/sys/sea.c}
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     \'C7\'E0\'E3\'F0\'F3\'E7\'F7\'E8\'EA SEA \'F4\'E0\'E9\'EB\'EE\'E2}\par
00003 {\cf20 */}\par
00004 {\cf21 #include <kernel.h>}\par
00005 \par
00006 \par
00007 int32_t sea_validate({\cf18 char} *data)\{\par
00008     {\cf19 if} (data[0] != 0x60 || \par
00009         data[1] != 0x05 || \par
00010         data[2] != 0x05 || \par
00011         data[3] != {\cf23 'S'} || \par
00012         data[4] != {\cf23 'Y'} || \par
00013         data[5] != {\cf23 'N'} || \par
00014         data[6] != {\cf23 '8'} || \par
00015         data[7] != {\cf23 '6'} \par
00016         ) \{\par
00017         {\cf19 return} 1; \par
00018     \} \par
00019     {\cf19 return} 0;\par
00020 \}\par
00021 \par
00022 \par
00023 {\cf18 void} *sea_load({\cf17 const} {\cf18 char} *fname)\{\par
00024     {\cf19 if} (!vfs_exists(fname)) \{\par
00025         tty_printf({\cf22 "app doesnt exist\\n"});\par
00026         {\cf19 return} 0;\par
00027     \}\par
00028 \par
00029     uint32_t fsize = vfs_get_size(fname);\par
00030 \par
00031     {\cf18 void} *addr = kheap_malloc(fsize);\par
00032 \par
00033     int32_t res = vfs_read(fname, 0, fsize, addr);\par
00034 \par
00035     {\cf19 return} ({\cf18 void}*)res;\par
00036 \}\par
00037 \par
00038 int32_t sea_run({\cf17 const} {\cf18 char} *name{\cf20 /*, char **argv, char **env __attribute__((unused)), int32_t argc*/}) \{\par
00039     {\cf18 void} *sea_file = sea_load(name);\par
00040     {\cf19 if} (sea_file == NULL) \{\par
00041         {\cf19 return} -1;\par
00042     \}\par
00043 \par
00044 \par
00045     \par
00046 \par
00047     void(*entry_point)() = ({\cf18 void}*) (sea_file);\par
00048     tty_printf({\cf22 "SEA entry point: %x\\n"}, sea_file);\par
00049 \par
00050     entry_point();\par
00051 \par
00052     {\cf19 return} 0;\par
00053 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
secure.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/sys/secure.c}
{\xe \v kernel/src/sys/secure.c}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 {\cf20 /*}\par
00005 {\cf20     0 - \'E7\'E0\'F9\'E8\'F2\'FB \'ED\'E5\'F2}\par
00006 {\cf20     1 - \'F1\'EB\'E0\'E1\'E0\'FF \'E7\'E0\'F9\'E8\'F2\'E0}\par
00007 {\cf20 */}\par
00008 {\cf17 static} uint8_t level = 1;\par
00009 \par
00010 \par
00011 {\cf18 void} secure_init(uint8_t new_level) \{\par
00012     level = new_level;\par
00013     qemu_log({\cf22 "Secure level: %d"}, level);\par
00014 \}\par
00015 \par
00016 \par
00017 {\cf18 bool} secure_check_elf({\cf17 const} {\cf18 char} *name) \{\par
00018     {\cf19 if} (!vfs_exists(name)) \{\par
00019         {\cf19 return} {\cf17 false};\par
00020     \}\par
00021 \par
00022     {\cf18 void} *elf_file = elf_open(name);\par
00023     \par
00024     {\cf19 if} (elf_file == NULL) \{\par
00025         {\cf19 return} {\cf17 false};\par
00026     \}\par
00027 \par
00028     {\cf18 int} i = 256;\par
00029 \par
00030     {\cf19 while}(i--)\{\par
00031         \par
00032         {\cf20 //tty_printf("%d;", elf_file[i]);}\par
00033         \par
00034     \}\par
00035 \par
00036     tty_printf({\cf22 "\\n"});\par
00037 \par
00038     {\cf19 return} {\cf17 true};\par
00039 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
syscalls.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/sys/syscalls.c}
{\xe \v kernel/src/sys/syscalls.c}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     \'C2\'E7\'FF\'F2\'EE \'E8\'E7 https://github.com/rgimad/EOS/tree/d3e2062fc909d8b15d8637950050281f051270d2}\par
00003 {\cf20     \'CF\'EE\'E4 \'EB\'E8\'F6\'E5\'ED\'E7\'E8\'E5\'E9 MIT license}\par
00004 {\cf20 */}\par
00005 \par
00006 {\cf21 #include <kernel.h>}\par
00007 \par
00008 \par
00009 {\cf17 static} uint64_t next_rnd = 1;\par
00010 \par
00011 \par
00012 {\cf18 void} trand(uint32_t time) \{\par
00013     next_rnd = next_rnd * 1103515245 + 12345 + time;\par
00014 \}\par
00015 \par
00016 \par
00017 uint64_t rand({\cf18 void}) \{\par
00018     next_rnd = next_rnd * 1103515245 + 12345;\par
00019     {\cf19 return} (uint64_t)(next_rnd/65536) % 32768;\par
00020 \}\par
00021 \par
00022 \par
00023 {\cf18 void} srand(uint32_t seed) \{\par
00024     next_rnd = seed;\par
00025 \}\par
00026 \par
00027 \par
00028 {\cf18 void} syscall_init() \{\par
00029     register_interrupt_handler(SYSCALL_IDT_INDEX, &syscall_handler);\par
00030     qemu_log({\cf22 "Syscalls enabled"});\par
00031 \}\par
00032 \par
00033 \par
00034 {\cf18 void} syscall_handler({\cf17 struct} regs *r) \{\par
00035     {\cf20 /*}\par
00036 {\cf20         \'D0\'E5\'E3\'E8\'F1\'F2\'F0\'FB \'F1\'E8\'F1\'F4\'F3\'ED\'EA\'F6\'E8\'E9:}\par
00037 {\cf20         eax - \'ED\'EE\'EC\'E5\'F0 \'F1\'E8\'F1\'F4\'F3\'ED\'EA\'F6\'E8\'E8 \'E8 \'F0\'E5\'E7\'F3\'EB\'FC\'F2\'E0\'F2}\par
00038 {\cf20         ebx - \'EF\'E0\'F0\'E0\'EC\'E5\'F2\'F0-\'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC 1}\par
00039 {\cf20         edx - \'EF\'E0\'F0\'E0\'EC\'E5\'F2\'F0-\'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC 2}\par
00040 {\cf20         ecx - \'EF\'E0\'F0\'E0\'EC\'E5\'F2\'F0-\'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC 3}\par
00041 {\cf20         esi - \'EF\'E0\'F0\'E0\'EC\'E5\'F2\'F0-\'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC 4}\par
00042 {\cf20         edi - \'EF\'E0\'F0\'E0\'EC\'E5\'F2\'F0-\'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC 5}\par
00043 {\cf20     */}\par
00044     uint32_t arg1 = r->ebx;\par
00045     uint32_t arg2 = r->edx;\par
00046     uint32_t arg3 = r->ecx;\par
00047     uint32_t arg4 = r->esi;\par
00048     uint32_t arg5 = r->edi;\par
00049 \par
00050     {\cf19 switch} (r->eax) \{\par
00051         {\cf19 case} SC_CODE_puts: {\cf20 // I/O}\par
00052             tty_printf({\cf22 "%s"}, ({\cf18 char} *)(arg1));\par
00053             r->eax = (uint32_t)1;\par
00054             {\cf19 break};\par
00055         {\cf19 case} SC_CODE_getscancode:\par
00056             r->eax = (uint32_t)keyboard_getscancode();\par
00057             {\cf19 break};\par
00058         {\cf19 case} SC_CODE_getchar:\par
00059             r->eax = (uint32_t)keyboard_getchar();\par
00060             {\cf19 break};\par
00061         {\cf19 case} SC_CODE_gets:\par
00062             r->eax = (uint32_t)keyboard_gets();\par
00063             {\cf19 break};\par
00064         {\cf19 case} SC_CODE_malloc:\par
00065             r->eax = (uint32_t)kheap_malloc((int32_t)arg1);\par
00066             {\cf19 break};\par
00067         {\cf19 case} SC_CODE_free:\par
00068             kheap_free(({\cf18 void} *)arg1);\par
00069             r->eax = (uint32_t)1;\par
00070             {\cf19 break};\par
00071         {\cf19 case} SC_CODE_setdev: {\cf20 // \'D5\'F0\'E0\'ED\'E8\'EB\'E8\'F9\'E5}\par
00072             r->eax = (uint32_t)-1;\par
00073             {\cf19 break};\par
00074         {\cf19 case} SC_CODE_readfile:\par
00075             r->eax = (uint32_t)vfs_read(({\cf18 char} *)arg1, (int32_t)arg2, (int32_t)arg3, ({\cf18 void} *)arg4);\par
00076             {\cf19 break};\par
00077         {\cf19 case} SC_CODE_exists:\par
00078             r->eax = (uint32_t)vfs_exists(({\cf18 char} *)arg1);\par
00079             {\cf19 break};\par
00080         {\cf19 case} SC_CODE_filesize:\par
00081             r->eax = (uint32_t)vfs_get_size(({\cf18 char}*)arg1);\par
00082             {\cf19 break};\par
00083         {\cf20 //case SC_CODE_get_time:}\par
00084         {\cf20 //  r->eax = (uint32_t)}\par
00085         {\cf19 case} SC_CODE_rand:\par
00086             r->eax = (uint64_t)rand();\par
00087             {\cf19 break};\par
00088         {\cf19 case} SC_CODE_srand:\par
00089             srand((uint64_t)(arg1));\par
00090             r->eax = (uint64_t)rand();\par
00091             {\cf19 break};\par
00092         {\cf19 case} SC_CODE_putpixel: {\cf20 // \'C3\'F0\'E0\'F4\'E8\'EA\'E0}\par
00093             set_pixel((int32_t)(arg1), (int32_t)(arg2), (uint32_t)(arg3));\par
00094             r->eax = (uint32_t)1;\par
00095             {\cf19 break};\par
00096         {\cf19 case} SC_CODE_drawline:\par
00097             set_line((int32_t)(arg1), (int32_t)(arg2), (int32_t)(arg3), (int32_t)(arg4), (uint32_t)(arg5));\par
00098             r->eax = (uint32_t)1;\par
00099             {\cf19 break};\par
00100         {\cf19 case} SC_CODE_version: {\cf20 // \'D1\'E8\'F1\'F2\'E5\'EC\'E0}\par
00101             r->eax = (uint32_t)(VERSION_MAJOR * 100 + VERSION_MINOR);\par
00102             {\cf19 break};\par
00103         {\cf19 case} SC_CODE_newtask: \par
00104             r->eax = add_task(&r);\par
00105             {\cf19 break};\par
00106         {\cf19 case} SC_CODE_ticks: \par
00107             r->eax = timer_get_ticks();\par
00108             {\cf19 break};\par
00109         {\cf19 case} SC_CODE_getfreq:\par
00110             r->eax = timer_get_frequency();\par
00111             {\cf19 break};\par
00112         {\cf19 default}:\par
00113             qemu_log({\cf22 "Invalid syscall #%x"}, r->eax);\par
00114             qemu_log({\cf22 "r->idt_index = %x eax = %x  ebx = %x  "}\par
00115                 {\cf22 "ecx = %x  edx = %x  esp = %x  ebp = %x  eip = %x"},\par
00116                 r->idt_index, r->eax, r->ebx,\par
00117                 r->ecx, r->edx, r->esp, r->ebp, r->eip);\par
00118             tty_printf({\cf22 "Invalid syscall %x\\n"}, r->eax);\par
00119             tty_printf({\cf22 "Invalid syscall %d\\n"}, r->eax);\par
00120             tty_printf({\cf22 "r->idt_index = %x eax = %x  ebx = %x  "}\par
00121                     {\cf22 "ecx = %x  edx = %x  esp = %x  ebp = %x  eip = %x"},\par
00122                     r->idt_index, r->eax, r->ebx,\par
00123                     r->ecx, r->edx, r->esp, r->ebp, r->eip);\par
00124             tty_printf({\cf22 "r->idt_index = %d eax = %d  ebx = %d  "}\par
00125                     {\cf22 "ecx = %d  edx = %d  esp = %d  ebp = %d  eip = %d"},\par
00126                     r->idt_index, r->eax, r->ebx,\par
00127                     r->ecx, r->edx, r->esp, r->ebp, r->eip);\par
00128     \}\par
00129 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
system.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/sys/system.c}
{\xe \v kernel/src/sys/system.c}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 {\cf18 void} reboot() \{\par
00004     qemu_log({\cf22 "REBOOT"});\par
00005 \par
00006     uint8_t good = 0x02;\par
00007 \par
00008     {\cf19 while} (good & 0x02)\par
00009         good = inb(0x64);\par
00010     outb(0x64, 0xFE);\par
00011     {\cf17 asm} {\cf17 volatile}({\cf22 "hlt"});\par
00012 \}\par
00013 \par
00014 \par
00015 {\cf18 void} shutdown()\{\par
00016     qemu_log({\cf22 "SHUTDOWN"});\par
00017     outw(0xB004, 0x2000);\par
00018     outw(0x604, 0x2000);\par
00019     outw(0x4004, 0x3400);\par
00020 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tss.c\par \pard\plain 
{\tc\tcl2 \v kernel/src/sys/tss.c}
{\xe \v kernel/src/sys/tss.c}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <kernel.h>}\par
00002 \par
00003 \par
00004 tss_entry_t kernel_tss;\par
00005 \par
00006 {\cf20 /*}\par
00007 {\cf20     \'CC\'ED\'EE\'E3\'EE\'E7\'E0\'E4\'E0\'F7\'ED\'EE\'F1\'F2\'FC. }\par
00008 {\cf20     \'D7\'F2\'EE\'E1\'FB \'E5\'B8 \'F0\'E5\'E0\'EB\'E8\'E7\'EE\'E2\'E0\'F2\'FC \'ED\'F3\'E6\'ED\'EE \'F7\'F2\'EE\'E1\'FB PIT(timer.c) \'EA\'E0\'E6\'E4\'FB\'E5 N \'E5\'E4\'E8\'ED\'E8\'F6 \'E2\'F0\'E5\'EC\'E5\'ED\'E8 \'E3\'E5\'ED\'E5\'F0\'E8\'F0\'EE\'E2\'E0\'EB \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'E5.}\par
00009 {\cf20     \'CF\'F0\'E8 \'EA\'E0\'E6\'E4\'EE\'EC \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'E8 \'EE\'F2 PIT \'E2\'FB\'E7\'FB\'E2\'E0\'E5\'F2\'F1\'FF \'F4\'F3\'ED\'EA\'F6\'E8\'FF task_switch.}\par
00010 {\cf20     \'C2 task_switch TSS \'EE\'E1\'FF\'E7\'E0\'ED \'F1\'EE\'F5\'F0\'E0\'ED\'E8\'F2\'FC \'E2\'F1\'E5 \'F0\'E5\'E3\'E8\'F1\'F2\'F0\'FB \'F2\'E5\'EA\'F3\'F9\'E5\'E3\'EE \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'E0 \'E8 \'E7\'E0\'E3\'F0\'F3\'E7\'E8\'F2\'FC \'F0\'E5\'E3\'EC\'F1\'F2\'F0\'FB \'F1\'EB\'E5\'E4\'F3\'FE\'F9\'E5\'E3\'EE \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'E0.}\par
00011 {\cf20     \'D2\'E0\'EA\'E6\'E5 \'ED\'E0\'E4\'EE \'ED\'E5 \'E7\'E0\'E1\'FB\'E2\'E0\'F2\'FC \'EF\'F0\'EE \'EF\'F0\'E8\'EE\'F0\'E8\'F2\'E5\'F2 \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'E0.}\par
00012 {\cf20 */}\par
00013 \par
00014 uint32_t     next_pid = 0;       {\cf20 // \'D1\'EB\'E5\'E4\'F3\'FE\'F9\'E8\'E9 \'E8\'E4\'E5\'ED\'F2\'E8\'F4\'E8\'EA\'E0\'F2\'EE\'F0 \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'E0 (PID)}\par
00015 uint32_t     next_thread_id = 0; {\cf20 // \'D1\'EB\'E5\'E4\'F3\'FE\'F9\'E8\'E9 \'E8\'E4\'E5\'ED\'F2\'E8\'F4\'E8\'EA\'E0\'F2\'EE\'F0 \'EF\'EE\'F2\'EE\'EA\'E0}\par
00016 list_t      process_list;       {\cf20 // \'D1\'EF\'E8\'F1\'EE\'EA \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'EE\'E2}\par
00017 list_t     thread_list;        {\cf20 // \'D1\'EF\'E8\'F1\'EE\'EA \'EF\'EE\'F2\'EE\'EA\'EE\'E2}\par
00018 {\cf18 bool}       multi_task = {\cf17 false}; {\cf20 // \'D4\'EB\'E0\'E3 \'E3\'EE\'F2\'EE\'E2\'ED\'EE\'F1\'F2\'E8 \'EF\'EB\'E0\'ED\'E8\'F0\'EE\'E2\'F9\'E8\'EA\'E0}\par
00019 process_t *kernel_proc = 0;    {\cf20 // \'CE\'EF\'E8\'F1\'E0\'F2\'E5\'EB\'FC \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'E0 \'FF\'E4\'F0\'E0}\par
00020 thread_t *kernel_thread = 0;  {\cf20 // \'CE\'EF\'E8\'F1\'E0\'F2\'E5\'EB\'FC \'EF\'EE\'F2\'EE\'EA\'E0 \'FF\'E4\'F0\'E0}\par
00021 process_t *current_proc;       {\cf20 // \'D2\'E5\'EA\'F3\'F9\'E8\'E9 \'EF\'F0\'EE\'F6\'E5\'F1\'F1}\par
00022 thread_t *current_thread;     {\cf20 // \'D2\'E5\'EA\'F3\'F9\'E8\'E9 \'EF\'EE\'F2\'EE\'EA}\par
00023 \par
00024 {\cf20 /*}\par
00025 {\cf20     \'C2\'FB\'E4\'E5\'EB\'FF\'E5\'F2 \'ED\'EE\'EC\'E5\'F0 \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'F3}\par
00026 {\cf20 */}\par
00027 {\cf17 static} pid_t take_pid() \{\par
00028     {\cf19 return} next_pid++;\par
00029 \}\par
00030 \par
00031 \par
00032 {\cf20 /*}\par
00033 {\cf20     \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F6\'E8\'FF \'EF\'EB\'E0\'ED\'E8\'F0\'EE\'E2\'F9\'E8\'EA\'E0 \'E7\'E0\'E4\'E0\'F7}\par
00034 {\cf20 */}\par
00035 {\cf18 void} init_task_manager({\cf18 void}) \{\par
00036     {\cf20 /* \'D7\'E8\'F2\'E0\'E5\'EC \'F2\'E5\'EA\'F3\'F9\'E8\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'F1\'F2\'E5\'EA\'E0 */}\par
00037     uint32_t    esp = 0;\par
00038     {\cf17 asm} {\cf17 volatile} ({\cf22 "mov %%esp, %0"}:{\cf22 "=a"}(esp));       \par
00039 \par
00040     {\cf20 /* \'C2\'FB\'EA\'EB\'FE\'F7\'E0\'E5\'EC \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'FF \'E8 \'E8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E8\'F0\'F3\'E5\'EC \'F1\'EF\'E8\'F1\'EA\'E8 \'E7\'E0\'E4\'E0\'F7 */}\par
00041     {\cf17 asm} {\cf17 volatile} ({\cf22 "cli"});\par
00042 \par
00043     list_init(&process_list);\par
00044     list_init(&thread_list);\par
00045 \par
00046     {\cf20 /* \'D1\'EE\'E7\'E4\'E0\'E5\'EC \'EF\'F0\'EE\'F6\'E5\'F1\'F1 \'FF\'E4\'F0\'E0 }\par
00047 {\cf20        \'C2\'FB\'E4\'E5\'EB\'FF\'E5\'EC \'EF\'E0\'EC\'FF\'F2\'FC \'EF\'EE\'E4 \'EE\'EF\'E8\'F1\'E0\'F2\'E5\'EB\'FC \'EF\'F0\'EE\'F6\'E5\'F1\'F1\'E0 \'E8 \'EE\'E1\'ED\'F3\'EB\'FF\'E5\'EC \'E5\'B8 */}\par
00048     kernel_proc = (process_t*) kheap_malloc({\cf17 sizeof}(process_t));\par
00049 \par
00050     memset(kernel_proc, 0, {\cf17 sizeof}(process_t));\par
00051 \par
00052     {\cf20 /* \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E8\'F0\'F3\'E5\'EC \'EF\'F0\'EE\'F6\'E5\'F1\'F1 */}\par
00053     kernel_proc->pid = take_pid();\par
00054     {\cf20 //kernel_proc->page_dir = &kernel_page_dir;}\par
00055     kernel_proc->list_item.list = NULL;\par
00056     kernel_proc->threads_count = 1;\par
00057     strcpy(kernel_proc->name, {\cf22 "Kernel"});\par
00058     kernel_proc->suspend = {\cf17 false};\par
00059 \par
00060     {\cf20 //list_add(&process_list, &kernel_proc->list_item);}\par
00061 \par
00062     {\cf20 /* \'C4\'E5\'EB\'E0\'E5\'EC \'EF\'F0\'EE\'F6\'E5\'F1\'F1 \'E8 \'EF\'EE\'F2\'EE\'EA \'FF\'E4\'F0\'E0 \'F2\'E5\'EA\'F3\'F9\'E8\'EC\'E8 */}\par
00063     current_proc = kernel_proc;\par
00064     current_thread = kernel_thread;\par
00065    \par
00066     {\cf20 /* \'C2\'E7\'E2\'EE\'E4\'E8\'EC \'F4\'EB\'E0\'E3 \'E3\'EE\'F2\'EE\'E2\'ED\'EE\'F1\'F2\'E8 \'EF\'EB\'E0\'ED\'E8\'F0\'EE\'E2\'F9\'E8\'EA\'E0 */}\par
00067     multi_task = {\cf17 true};\par
00068    \par
00069     {\cf20 /* \'D1\'ED\'EE\'E2\'E0 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC \'EF\'F0\'E5\'F0\'FB\'E2\'E0\'ED\'E8\'FF */}\par
00070     {\cf17 asm} {\cf17 volatile} ({\cf22 "sti"});\par
00071 \}\par
00072 \par
00073 \par
00074 {\cf20 /*}\par
00075 {\cf20     \'C2\'FB\'E4\'E5\'EB\'FF\'E5\'F2 \'ED\'EE\'E2\'FB\'E9 \'EF\'F0\'EE\'F6\'E5\'F1\'F1}\par
00076 {\cf20 */}\par
00077 pid_t add_task() \{\par
00078     {\cf19 return} take_pid();\par
00079 \}\par
00080 \par
00081 \par
00082 {\cf20 /*}\par
00083 {\cf20     \'D3\'E4\'E0\'EB\'FF\'E5\'F2 \'EF\'F0\'EE\'F6\'E5\'F1\'F1}\par
00084 {\cf20 */}\par
00085 int32_t kill_task(uint32_t pid) \{\par
00086     {\cf19 return} 0;\par
00087 \}\par
00088 \par
00089 \par
00090 {\cf20 /*}\par
00091 {\cf20     \'CF\'E5\'F0\'E5\'EA\'EB\'FE\'F7\'E0\'E5\'F2 \'E7\'E0\'E4\'E0\'F7\'F3}\par
00092 {\cf20 */}\par
00093 {\cf18 void} task_switch() \{\par
00094     {\cf17 asm} {\cf17 volatile} ({\cf22 "pushf "});\par
00095     {\cf17 asm} {\cf17 volatile} ({\cf22 "cli"});\par
00096     {\cf17 asm} {\cf17 volatile} ({\cf22 "mov %%esp, %0"}:{\cf22 "=a"}(current_thread->esp));\par
00097 \par
00098     {\cf19 do}\{\par
00099         current_thread = (thread_t*) current_thread->list_item.next;\par
00100         current_proc = (process_t*) current_proc->list_item.next;\par
00101 \par
00102     \}   {\cf19 while} ((current_thread->suspend) || (current_proc->suspend));\par
00103 \par
00104     {\cf17 asm} {\cf17 volatile} ({\cf22 "mov %0, %%esp"}::{\cf22 "a"}(current_thread->esp));\par
00105     {\cf17 asm} {\cf17 volatile} ({\cf22 "popf"});\par
00106 \}\par
00107 \par
00108 \par
00109 \par
00110 {\cf20 // We don't need tss to assist all the task switching, but it's required to have one tss for switching back to kernel mode(system call for example)}\par
00111 {\cf18 void} tss_init(uint32_t idx, uint32_t kss, uint32_t kesp) \{\par
00112     uint32_t base = (uint32_t) &kernel_tss;\par
00113     \par
00114     gdt_set_gate(idx, base, base + {\cf17 sizeof}(tss_entry_t), {\cf20 /*or 0x89??*/}0xE9, 0);\par
00115 \par
00116     {\cf20 /* Kernel tss, access(E9 = 1 11 0 1 0 0 1)}\par
00117 {\cf20         1   present}\par
00118 {\cf20         11  ring 3}\par
00119 {\cf20         0   should always be 1, why 0? may be this value doesn't matter at all}\par
00120 {\cf20         1   code?}\par
00121 {\cf20         0   can not be executed by ring lower or equal to DPL,}\par
00122 {\cf20         0   not readable}\par
00123 {\cf20         1   access bit, always 0, cpu set this to 1 when accessing this sector(why 0 now?)}\par
00124 {\cf20     */}\par
00125     memset(&kernel_tss, 0, {\cf17 sizeof}(tss_entry_t));\par
00126     kernel_tss.ss0 = kss;\par
00127 \par
00128     {\cf20 // Note that we usually set tss's esp to 0 when booting our os, however, we need to set it to the real esp when we've switched to usermode because}\par
00129     {\cf20 // the CPU needs to know what esp to use when usermode app is calling a kernel function(aka system call), that's why we have a function below called tss_set_stack}\par
00130     kernel_tss.esp0 = kesp;\par
00131 \par
00132     kernel_tss.cs = 0x0b;\par
00133     kernel_tss.ds = 0x13;\par
00134     kernel_tss.es = 0x13;\par
00135     kernel_tss.fs = 0x13;\par
00136     kernel_tss.gs = 0x13;\par
00137     kernel_tss.ss = 0x13;\par
00138 \}\par
00139 \par
00140 {\cf20 // This function is used to set the tss's esp, so that CPU knows what esp the kernel should be using}\par
00141 {\cf18 void} tss_set_stack(uint32_t kss, uint32_t kesp) \{\par
00142     kernel_tss.ss0 = kss;\par
00143     kernel_tss.esp0 = kesp;\par
00144 \}\par
00145 \par
00146 {\cf20 /*}\par
00147 {\cf20 0xE9 = 11101001}\par
00148 {\cf20 0x89 = 10001001}\par
00149 {\cf20 */}\par
00150 {\cf20 /*}\par
00151 {\cf20 regs_t *dump_regs()\{}\par
00152 {\cf20     regs_t *tmp;}\par
00153 {\cf20 }\par
00154 {\cf20 }\par
00155 {\cf20     asm volatile("mov %%eax, %%cs" }\par
00156 {\cf20                 : "=a"(tmp->cs)}\par
00157 {\cf20                 );}\par
00158 {\cf20 }\par
00159 {\cf20 }\par
00160 {\cf20     return &tmp;}\par
00161 {\cf20 \}*/}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'C0\'EB\'F4\'E0\'E2\'E8\'F2\'ED\'FB\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC\par 
\pard\plain 
{\tc \v \'C0\'EB\'F4\'E0\'E2\'E8\'F2\'ED\'FB\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
